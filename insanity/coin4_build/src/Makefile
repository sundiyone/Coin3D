# Makefile.in generated by automake 1.8.5 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# **************************************************************************



SOURCES = $(coin5_lib_SOURCES) $(EXTRA_coin5_lib_SOURCES) $(libCoin_la_SOURCES) $(EXTRA_libCoin_la_SOURCES)

srcdir = ../../coin4/src
top_srcdir = ../../coin4
VPATH = ../../coin4/src
pkgdatadir = $(datadir)/Coin
pkglibdir = $(libdir)/Coin
pkgincludedir = $(includedir)/Coin
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
target_triplet = x86_64-unknown-linux-gnu
subdir = src
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Coin.rc.in \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/config.h.in $(srcdir)/discard.h.in \
	$(srcdir)/setup.h.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/../simacros/bin/../cfg/m4/bz2.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/compile_debug.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/compile_exceptions.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/compile_functionname.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/compile_profiling.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/compile_rtti.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/compile_symbols.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/compile_warnings.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/compiler_capabilities.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/configuration_summary.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/cpp_search_order.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/dates.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/dl.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/doxygen_detection.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/errors.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/exit.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/fontconfig.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/freetype.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/gendsp.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/general.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/mac.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/macro_quoting.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/mathlib.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/misc_compiler.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/nprintf.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/openal.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/opengl.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/packagemaker.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/project.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/pthread.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/sim.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/simage.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/sourcedir.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/spidermonkey.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/uniqify_option_list.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/w32api.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/wrapmsvc.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/x11.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/zlib.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/cfg/mkinstalldirs
CONFIG_HEADER = discard.h config.h setup.h
CONFIG_CLEAN_FILES = Coin.rc
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(libdir)"
libLIBRARIES_INSTALL = $(INSTALL_DATA)
LIBRARIES = $(lib_LIBRARIES)
ARFLAGS = cru
coin5_lib_AR = $(AR) $(ARFLAGS)
#am__DEPENDENCIES_1 = $(SUPERGLUDIR)/${SUPERGLUPREFIX}GLU.lst
coin5_lib_DEPENDENCIES =  \
	actions/actions.lst base/base.lst bundles/bundles.lst \
	caches/caches.lst elements/elements.lst \
	elements/GL/glelements.lst engines/engines.lst \
	errors/errors.lst events/events.lst fields/fields.lst \
	fonts/fonts.lst glue/glue.lst io/io.lst misc/misc.lst \
	rendering/rendering.lst lists/lists.lst nodekits/nodekits.lst \
	nodes/nodes.lst shapenodes/shapenodes.lst \
	projectors/projectors.lst sensors/sensors.lst \
	navigation/navigation.lst details/details.lst \
	draggers/draggers.lst manips/manips.lst \
	upgraders/upgraders.lst 3ds/format3ds.lst \
	collision/collision.lst hardcopy/hardcopy.lst \
	threads/threads.lst shaders/shaders.lst shadows/shadows.lst \
	geo/geo.lst foreignfiles/foreignfiles.lst xml/xml.lst \
	xml/expat/expat.lst profiler/profiler.lst vrml97/vrml97.lst \
	scxml/scxml.lst soscxml/soscxml.lst $(am__DEPENDENCIES_1)
am__coin5_lib_SOURCES_DIST = tidbits.cpp \
	actions/all-actions-cpp.cpp base/all-base-cpp.cpp \
	bundles/all-bundles-cpp.cpp caches/all-caches-cpp.cpp \
	elements/all-elements-cpp.cpp \
	elements/GL/all-glelements-cpp.cpp engines/all-engines-cpp.cpp \
	engines/all-engines-c.c errors/all-errors-cpp.cpp \
	events/all-events-cpp.cpp fields/all-fields-cpp.cpp \
	fonts/all-fonts-cpp.cpp glue/all-glue-cpp.cpp \
	io/all-io-cpp.cpp misc/all-misc-cpp.cpp \
	rendering/all-rendering-cpp.cpp lists/all-lists-cpp.cpp \
	nodekits/all-nodekits-cpp.cpp nodes/all-nodes-cpp.cpp \
	shapenodes/all-shapenodes-cpp.cpp \
	projectors/all-projectors-cpp.cpp sensors/all-sensors-cpp.cpp \
	details/all-details-cpp.cpp draggers/all-draggers-cpp.cpp \
	manips/all-manips-cpp.cpp upgraders/all-upgraders-cpp.cpp \
	navigation/all-navigation-cpp.cpp 3ds/all-3ds-cpp.cpp \
	collision/all-collision-cpp.cpp hardcopy/all-hardcopy-cpp.cpp \
	threads/all-threads-cpp.cpp shaders/all-shaders-cpp.cpp \
	shadows/all-shadows-cpp.cpp geo/all-geo-cpp.cpp \
	foreignfiles/all-foreignfiles-cpp.cpp xml/all-xml-cpp.cpp \
	xml/expat/all-expat-c.c profiler/all-profiler-cpp.cpp \
	vrml97/all-vrml97-cpp.cpp scxml/all-scxml-cpp.cpp \
	soscxml/all-soscxml-cpp.cpp
am__objects_1 = tidbits.$(OBJEXT)
#am__objects_1 = all-actions-cpp.$(OBJEXT) \
#	all-base-cpp.$(OBJEXT) \
#	all-bundles-cpp.$(OBJEXT) \
#	all-caches-cpp.$(OBJEXT) \
#	all-elements-cpp.$(OBJEXT) \
#	all-glelements-cpp.$(OBJEXT) \
#	all-engines-cpp.$(OBJEXT) \
#	all-engines-c.$(OBJEXT) \
#	all-errors-cpp.$(OBJEXT) \
#	all-events-cpp.$(OBJEXT) \
#	all-fields-cpp.$(OBJEXT) \
#	all-fonts-cpp.$(OBJEXT) \
#	all-glue-cpp.$(OBJEXT) \
#	all-io-cpp.$(OBJEXT) \
#	all-misc-cpp.$(OBJEXT) \
#	all-rendering-cpp.$(OBJEXT) \
#	all-lists-cpp.$(OBJEXT) \
#	all-nodekits-cpp.$(OBJEXT) \
#	all-nodes-cpp.$(OBJEXT) \
#	all-shapenodes-cpp.$(OBJEXT) \
#	all-projectors-cpp.$(OBJEXT) \
#	all-sensors-cpp.$(OBJEXT) \
#	all-details-cpp.$(OBJEXT) \
#	all-draggers-cpp.$(OBJEXT) \
#	all-manips-cpp.$(OBJEXT) \
#	all-upgraders-cpp.$(OBJEXT) \
#	all-navigation-cpp.$(OBJEXT) \
#	all-3ds-cpp.$(OBJEXT) \
#	all-collision-cpp.$(OBJEXT) \
#	all-hardcopy-cpp.$(OBJEXT) \
#	all-threads-cpp.$(OBJEXT) \
#	all-shaders-cpp.$(OBJEXT) \
#	all-shadows-cpp.$(OBJEXT) \
#	all-geo-cpp.$(OBJEXT) \
#	all-foreignfiles-cpp.$(OBJEXT) \
#	all-xml-cpp.$(OBJEXT) \
#	all-expat-c.$(OBJEXT) \
#	all-profiler-cpp.$(OBJEXT) \
#	all-vrml97-cpp.$(OBJEXT) \
#	all-scxml-cpp.$(OBJEXT) \
#	all-soscxml-cpp.$(OBJEXT) \
#	tidbits.$(OBJEXT)
am_coin5_lib_OBJECTS = $(am__objects_1)
coin5_lib_OBJECTS =  \
	$(am_coin5_lib_OBJECTS)
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
#am__DEPENDENCIES_2 = $(SUPERGLUDIR)/lib${SUPERGLUPREFIX}GLU.la
libCoin_la_DEPENDENCIES = actions/libactions.la \
	base/libbase.la \
	bundles/libbundles.la \
	caches/libcaches.la \
	elements/libelements.la \
	elements/GL/libglelements.la \
	engines/libengines.la \
	errors/liberrors.la \
	events/libevents.la \
	fields/libfields.la \
	fonts/libfonts.la \
	glue/libglue.la \
	io/libio.la \
	misc/libmisc.la \
	rendering/librendering.la \
	lists/liblists.la \
	nodekits/libnodekits.la \
	nodes/libnodes.la \
	shapenodes/libshapenodes.la \
	projectors/libprojectors.la \
	sensors/libsensors.la \
	details/libdetails.la \
	draggers/libdraggers.la \
	manips/libmanips.la \
	upgraders/libupgraders.la \
	navigation/libnavigation.la \
	3ds/libformat3ds.la \
	collision/libcollision.la \
	hardcopy/libhardcopy.la \
	threads/libthreads.la \
	shaders/libshaders.la \
	shadows/libshadows.la \
	geo/libgeo.la \
	foreignfiles/libforeignfiles.la \
	xml/libxml.la \
	xml/expat/libexpat.la \
	profiler/libprofiler.la \
	vrml97/libvrml97.la \
	scxml/libscxml.la \
	soscxml/libsoscxml.la \
	$(am__DEPENDENCIES_2)
am__libCoin_la_SOURCES_DIST = tidbits.cpp \
	actions/all-actions-cpp.cpp base/all-base-cpp.cpp \
	bundles/all-bundles-cpp.cpp caches/all-caches-cpp.cpp \
	elements/all-elements-cpp.cpp \
	elements/GL/all-glelements-cpp.cpp engines/all-engines-cpp.cpp \
	engines/all-engines-c.c errors/all-errors-cpp.cpp \
	events/all-events-cpp.cpp fields/all-fields-cpp.cpp \
	fonts/all-fonts-cpp.cpp glue/all-glue-cpp.cpp \
	io/all-io-cpp.cpp misc/all-misc-cpp.cpp \
	rendering/all-rendering-cpp.cpp lists/all-lists-cpp.cpp \
	nodekits/all-nodekits-cpp.cpp nodes/all-nodes-cpp.cpp \
	shapenodes/all-shapenodes-cpp.cpp \
	projectors/all-projectors-cpp.cpp sensors/all-sensors-cpp.cpp \
	details/all-details-cpp.cpp draggers/all-draggers-cpp.cpp \
	manips/all-manips-cpp.cpp upgraders/all-upgraders-cpp.cpp \
	navigation/all-navigation-cpp.cpp 3ds/all-3ds-cpp.cpp \
	collision/all-collision-cpp.cpp hardcopy/all-hardcopy-cpp.cpp \
	threads/all-threads-cpp.cpp shaders/all-shaders-cpp.cpp \
	shadows/all-shadows-cpp.cpp geo/all-geo-cpp.cpp \
	foreignfiles/all-foreignfiles-cpp.cpp xml/all-xml-cpp.cpp \
	xml/expat/all-expat-c.c profiler/all-profiler-cpp.cpp \
	vrml97/all-vrml97-cpp.cpp scxml/all-scxml-cpp.cpp \
	soscxml/all-soscxml-cpp.cpp
am__objects_3 = tidbits.lo
#am__objects_3 = all-actions-cpp.lo all-base-cpp.lo \
#	all-bundles-cpp.lo all-caches-cpp.lo \
#	all-elements-cpp.lo all-glelements-cpp.lo \
#	all-engines-cpp.lo all-engines-c.lo \
#	all-errors-cpp.lo all-events-cpp.lo \
#	all-fields-cpp.lo all-fonts-cpp.lo \
#	all-glue-cpp.lo all-io-cpp.lo \
#	all-misc-cpp.lo all-rendering-cpp.lo \
#	all-lists-cpp.lo all-nodekits-cpp.lo \
#	all-nodes-cpp.lo all-shapenodes-cpp.lo \
#	all-projectors-cpp.lo all-sensors-cpp.lo \
#	all-details-cpp.lo all-draggers-cpp.lo \
#	all-manips-cpp.lo all-upgraders-cpp.lo \
#	all-navigation-cpp.lo all-3ds-cpp.lo \
#	all-collision-cpp.lo all-hardcopy-cpp.lo \
#	all-threads-cpp.lo all-shaders-cpp.lo \
#	all-shadows-cpp.lo all-geo-cpp.lo \
#	all-foreignfiles-cpp.lo all-xml-cpp.lo \
#	all-expat-c.lo all-profiler-cpp.lo \
#	all-vrml97-cpp.lo all-scxml-cpp.lo \
#	all-soscxml-cpp.lo tidbits.lo
am_libCoin_la_OBJECTS = $(am__objects_3)
libCoin_la_OBJECTS = $(am_libCoin_la_OBJECTS)
depcomp = $(SHELL) $(top_srcdir)/cfg/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/all-3ds-cpp.Plo \
	./$(DEPDIR)/all-3ds-cpp.Po \
	./$(DEPDIR)/all-actions-cpp.Plo \
	./$(DEPDIR)/all-actions-cpp.Po \
	./$(DEPDIR)/all-base-cpp.Plo \
	./$(DEPDIR)/all-base-cpp.Po \
	./$(DEPDIR)/all-bundles-cpp.Plo \
	./$(DEPDIR)/all-bundles-cpp.Po \
	./$(DEPDIR)/all-caches-cpp.Plo \
	./$(DEPDIR)/all-caches-cpp.Po \
	./$(DEPDIR)/all-collision-cpp.Plo \
	./$(DEPDIR)/all-collision-cpp.Po \
	./$(DEPDIR)/all-details-cpp.Plo \
	./$(DEPDIR)/all-details-cpp.Po \
	./$(DEPDIR)/all-draggers-cpp.Plo \
	./$(DEPDIR)/all-draggers-cpp.Po \
	./$(DEPDIR)/all-elements-cpp.Plo \
	./$(DEPDIR)/all-elements-cpp.Po \
	./$(DEPDIR)/all-engines-c.Plo \
	./$(DEPDIR)/all-engines-c.Po \
	./$(DEPDIR)/all-engines-cpp.Plo \
	./$(DEPDIR)/all-engines-cpp.Po \
	./$(DEPDIR)/all-errors-cpp.Plo \
	./$(DEPDIR)/all-errors-cpp.Po \
	./$(DEPDIR)/all-events-cpp.Plo \
	./$(DEPDIR)/all-events-cpp.Po \
	./$(DEPDIR)/all-expat-c.Plo \
	./$(DEPDIR)/all-expat-c.Po \
	./$(DEPDIR)/all-fields-cpp.Plo \
	./$(DEPDIR)/all-fields-cpp.Po \
	./$(DEPDIR)/all-fonts-cpp.Plo \
	./$(DEPDIR)/all-fonts-cpp.Po \
	./$(DEPDIR)/all-foreignfiles-cpp.Plo \
	./$(DEPDIR)/all-foreignfiles-cpp.Po \
	./$(DEPDIR)/all-geo-cpp.Plo \
	./$(DEPDIR)/all-geo-cpp.Po \
	./$(DEPDIR)/all-glelements-cpp.Plo \
	./$(DEPDIR)/all-glelements-cpp.Po \
	./$(DEPDIR)/all-glue-cpp.Plo \
	./$(DEPDIR)/all-glue-cpp.Po \
	./$(DEPDIR)/all-hardcopy-cpp.Plo \
	./$(DEPDIR)/all-hardcopy-cpp.Po \
	./$(DEPDIR)/all-io-cpp.Plo \
	./$(DEPDIR)/all-io-cpp.Po \
	./$(DEPDIR)/all-lists-cpp.Plo \
	./$(DEPDIR)/all-lists-cpp.Po \
	./$(DEPDIR)/all-manips-cpp.Plo \
	./$(DEPDIR)/all-manips-cpp.Po \
	./$(DEPDIR)/all-misc-cpp.Plo \
	./$(DEPDIR)/all-misc-cpp.Po \
	./$(DEPDIR)/all-navigation-cpp.Plo \
	./$(DEPDIR)/all-navigation-cpp.Po \
	./$(DEPDIR)/all-nodekits-cpp.Plo \
	./$(DEPDIR)/all-nodekits-cpp.Po \
	./$(DEPDIR)/all-nodes-cpp.Plo \
	./$(DEPDIR)/all-nodes-cpp.Po \
	./$(DEPDIR)/all-profiler-cpp.Plo \
	./$(DEPDIR)/all-profiler-cpp.Po \
	./$(DEPDIR)/all-projectors-cpp.Plo \
	./$(DEPDIR)/all-projectors-cpp.Po \
	./$(DEPDIR)/all-rendering-cpp.Plo \
	./$(DEPDIR)/all-rendering-cpp.Po \
	./$(DEPDIR)/all-scxml-cpp.Plo \
	./$(DEPDIR)/all-scxml-cpp.Po \
	./$(DEPDIR)/all-sensors-cpp.Plo \
	./$(DEPDIR)/all-sensors-cpp.Po \
	./$(DEPDIR)/all-shaders-cpp.Plo \
	./$(DEPDIR)/all-shaders-cpp.Po \
	./$(DEPDIR)/all-shadows-cpp.Plo \
	./$(DEPDIR)/all-shadows-cpp.Po \
	./$(DEPDIR)/all-shapenodes-cpp.Plo \
	./$(DEPDIR)/all-shapenodes-cpp.Po \
	./$(DEPDIR)/all-soscxml-cpp.Plo \
	./$(DEPDIR)/all-soscxml-cpp.Po \
	./$(DEPDIR)/all-threads-cpp.Plo \
	./$(DEPDIR)/all-threads-cpp.Po \
	./$(DEPDIR)/all-upgraders-cpp.Plo \
	./$(DEPDIR)/all-upgraders-cpp.Po \
	./$(DEPDIR)/all-vrml97-cpp.Plo \
	./$(DEPDIR)/all-vrml97-cpp.Po \
	./$(DEPDIR)/all-xml-cpp.Plo \
	./$(DEPDIR)/all-xml-cpp.Po ./$(DEPDIR)/tidbits.Plo \
	./$(DEPDIR)/tidbits.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(coin5_lib_SOURCES) \
	$(EXTRA_coin5_lib_SOURCES) \
	$(libCoin_la_SOURCES) \
	$(EXTRA_libCoin_la_SOURCES)
DIST_SOURCES =  \
	$(am__coin5_lib_SOURCES_DIST) \
	$(EXTRA_coin5_lib_SOURCES) \
	$(am__libCoin_la_SOURCES_DIST) \
	$(EXTRA_libCoin_la_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = extensions xml actions base bundles caches details \
	draggers elements engines errors events fields fonts glue io \
	manips misc rendering lists nodekits navigation nodes \
	shapenodes projectors sensors upgraders 3ds collision hardcopy \
	shadows geo threads shaders profiler vrml97 foreignfiles scxml \
	soscxml doc .
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/ed/Coin3D/coin4/cfg/missing --run aclocal-1.8
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/ed/Coin3D/coin4/cfg/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/ed/Coin3D/coin4/cfg/missing --run autoconf
AUTOHEADER = ${SHELL} /home/ed/Coin3D/coin4/cfg/missing --run autoheader
AUTOMAKE = ${SHELL} /home/ed/Coin3D/coin4/cfg/missing --run automake-1.8
AWK = gawk
BUILD_3DS_CAPABILITIES_FALSE = 
BUILD_3DS_CAPABILITIES_TRUE = #
BUILD_HTMLPAGES_FALSE = 
BUILD_HTMLPAGES_TRUE = #
BUILD_JAVA_WRAPPER_FALSE = 
BUILD_JAVA_WRAPPER_TRUE = #
BUILD_LIBRARY_FALSE = #
BUILD_LIBRARY_TRUE = 
BUILD_MANPAGES_FALSE = 
BUILD_MANPAGES_TRUE = #
BUILD_WITH_MSVC = false
BUILD_WITH_MSVC_FALSE = 
BUILD_WITH_MSVC_TRUE = #
BUILD_WITH_SOUND_FALSE = #
BUILD_WITH_SOUND_TRUE = 
BUILD_WITH_SUPERGLU_FALSE = 
BUILD_WITH_SUPERGLU_TRUE = #
BUILD_WITH_THREADS_FALSE = #
BUILD_WITH_THREADS_TRUE = 
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -W -Wall -Wno-unused -Wno-multichar  -fno-builtin -finline-functions -Wreturn-type -Wchar-subscripts -Wparentheses
COIN_BETA_VERSION = a
COIN_BUILD_YEAR = 2017
COIN_COMPILER = g++
COIN_DOC_HTML = NO
COIN_DOC_MAN = NO
COIN_DSP_DEFS = 
COIN_DSP_INCS = 
COIN_DSP_LIBS = 
COIN_EXTRA_CFLAGS = -g -O2
COIN_EXTRA_CPPFLAGS =  -I${prefix}/include -I${prefix}/include/Inventor/annex -D_REENTRANT
COIN_EXTRA_CXXFLAGS = -g -O2
COIN_EXTRA_LDFLAGS = -L${exec_prefix}/lib
COIN_EXTRA_LIBS = -lCoin -lGL -lXext -lSM -lICE -lX11 -ldl -lpthread
COIN_HACKING_LIBDIRS = 
COIN_LIB_DSP_DEFS = 
COIN_MAJOR_VERSION = 5
COIN_MICRO_VERSION = 0
COIN_MINOR_VERSION = 0
COIN_MSVC_LIBC = 
COIN_SO_VERSION = 100
COIN_TESTSUITE_EXTRA_CPPFLAGS = 
COIN_TESTSUITE_EXTRA_LDFLAGS = 
COIN_VERSION = 5.0.0a
CONFIG = default
CPP = gcc -E
CPPFLAGS =  -D_REENTRANT -DCOIN_DEBUG=1 -DCOIN_INTERNAL
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -W -Wall -Wno-unused -Wno-multichar -Woverloaded-virtual  -fno-builtin -finline-functions -Wreturn-type -Wchar-subscripts -Wparentheses
CYGPATH_W = echo
DEB_PACKAGEABLE_FALSE = #
DEB_PACKAGEABLE_TRUE = 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOXYGEN_INPUT = /home/ed/Coin3D/coin4_build/include/Inventor/C/basic.h /home/ed/Coin3D/coin4/docs/releases.dox /home/ed/Coin3D/coin4/include/Inventor/actions/SoAction.h /home/ed/Coin3D/coin4/include/Inventor/actions/SoAudioRenderAction.h /home/ed/Coin3D/coin4/include/Inventor/actions/SoBoxHighlightRenderAction.h /home/ed/Coin3D/coin4/include/Inventor/actions/SoCallbackAction.h /home/ed/Coin3D/coin4/include/Inventor/actions/SoGetBoundingBoxAction.h /home/ed/Coin3D/coin4/include/Inventor/actions/SoGetMatrixAction.h /home/ed/Coin3D/coin4/include/Inventor/actions/SoGetPrimitiveCountAction.h /home/ed/Coin3D/coin4/include/Inventor/actions/SoGlobalSimplifyAction.h /home/ed/Coin3D/coin4/include/Inventor/actions/SoGLRenderAction.h /home/ed/Coin3D/coin4/include/Inventor/actions/SoHandleEventAction.h /home/ed/Coin3D/coin4/include/Inventor/actions/SoLineHighlightRenderAction.h /home/ed/Coin3D/coin4/include/Inventor/actions/SoPickAction.h /home/ed/Coin3D/coin4/include/Inventor/actions/SoRayPickAction.h /home/ed/Coin3D/coin4/include/Inventor/actions/SoReorganizeAction.h /home/ed/Coin3D/coin4/include/Inventor/actions/SoSearchAction.h /home/ed/Coin3D/coin4/include/Inventor/actions/SoShapeSimplifyAction.h /home/ed/Coin3D/coin4/include/Inventor/actions/SoSimplifyAction.h /home/ed/Coin3D/coin4/include/Inventor/actions/SoSubAction.h /home/ed/Coin3D/coin4/include/Inventor/actions/SoToVRML2Action.h /home/ed/Coin3D/coin4/include/Inventor/actions/SoToVRMLAction.h /home/ed/Coin3D/coin4/include/Inventor/actions/SoWriteAction.h /home/ed/Coin3D/coin4/include/Inventor/annex/ForeignFiles/SoForeignFileKit.h /home/ed/Coin3D/coin4/include/Inventor/annex/ForeignFiles/SoSTLFileKit.h /home/ed/Coin3D/coin4/include/Inventor/annex/FXViz/elements/SoGLShadowCullingElement.h /home/ed/Coin3D/coin4/include/Inventor/annex/FXViz/elements/SoShadowStyleElement.h /home/ed/Coin3D/coin4/include/Inventor/annex/FXViz/nodes/SoShadowCulling.h /home/ed/Coin3D/coin4/include/Inventor/annex/FXViz/nodes/SoShadowDirectionalLight.h /home/ed/Coin3D/coin4/include/Inventor/annex/FXViz/nodes/SoShadowGroup.h /home/ed/Coin3D/coin4/include/Inventor/annex/FXViz/nodes/SoShadowSpotLight.h /home/ed/Coin3D/coin4/include/Inventor/annex/FXViz/nodes/SoShadowStyle.h /home/ed/Coin3D/coin4/include/Inventor/annex/Profiler/elements/SoProfilerElement.h /home/ed/Coin3D/coin4/include/Inventor/annex/Profiler/nodekits/SoNodeVisualize.h /home/ed/Coin3D/coin4/include/Inventor/annex/Profiler/nodekits/SoProfilerOverlayKit.h /home/ed/Coin3D/coin4/include/Inventor/annex/Profiler/nodes/SoProfilerStats.h /home/ed/Coin3D/coin4/include/Inventor/annex/Profiler/SbProfilingData.h /home/ed/Coin3D/coin4/include/Inventor/annex/Profiler/SoProfiler.h /home/ed/Coin3D/coin4/include/Inventor/annex/Profiler/utils/SoProfilingReportGenerator.h /home/ed/Coin3D/coin4/include/Inventor/bundles/SoBundle.h /home/ed/Coin3D/coin4/include/Inventor/bundles/SoMaterialBundle.h /home/ed/Coin3D/coin4/include/Inventor/bundles/SoNormalBundle.h /home/ed/Coin3D/coin4/include/Inventor/bundles/SoTextureCoordinateBundle.h /home/ed/Coin3D/coin4/include/Inventor/bundles/SoVertexAttributeBundle.h /home/ed/Coin3D/coin4/include/Inventor/caches/SoBoundingBoxCache.h /home/ed/Coin3D/coin4/include/Inventor/caches/SoCache.h /home/ed/Coin3D/coin4/include/Inventor/caches/SoConvexDataCache.h /home/ed/Coin3D/coin4/include/Inventor/caches/SoGLCacheList.h /home/ed/Coin3D/coin4/include/Inventor/caches/SoGLRenderCache.h /home/ed/Coin3D/coin4/include/Inventor/caches/SoNormalCache.h /home/ed/Coin3D/coin4/include/Inventor/caches/SoPrimitiveVertexCache.h /home/ed/Coin3D/coin4/include/Inventor/caches/SoTextureCoordinateCache.h /home/ed/Coin3D/coin4/include/Inventor/C/base/hash.h /home/ed/Coin3D/coin4/include/Inventor/C/base/heap.h /home/ed/Coin3D/coin4/include/Inventor/C/base/memalloc.h /home/ed/Coin3D/coin4/include/Inventor/C/base/rbptree.h /home/ed/Coin3D/coin4/include/Inventor/C/base/string.h /home/ed/Coin3D/coin4/include/Inventor/C/base/time.h /home/ed/Coin3D/coin4/include/Inventor/C/errors/debugerror.h /home/ed/Coin3D/coin4/include/Inventor/C/errors/error.h /home/ed/Coin3D/coin4/include/Inventor/C/glue/dl.h /home/ed/Coin3D/coin4/include/Inventor/C/glue/spidermonkey.h /home/ed/Coin3D/coin4/include/Inventor/collision/SoIntersectionDetectionAction.h /home/ed/Coin3D/coin4/include/Inventor/C/threads/barrier.h /home/ed/Coin3D/coin4/include/Inventor/C/threads/condvar.h /home/ed/Coin3D/coin4/include/Inventor/C/threads/fifo.h /home/ed/Coin3D/coin4/include/Inventor/C/threads/mutex.h /home/ed/Coin3D/coin4/include/Inventor/C/threads/recmutex.h /home/ed/Coin3D/coin4/include/Inventor/C/threads/rwmutex.h /home/ed/Coin3D/coin4/include/Inventor/C/threads/sched.h /home/ed/Coin3D/coin4/include/Inventor/C/threads/storage.h /home/ed/Coin3D/coin4/include/Inventor/C/threads/sync.h /home/ed/Coin3D/coin4/include/Inventor/C/threads/thread.h /home/ed/Coin3D/coin4/include/Inventor/C/threads/worker.h /home/ed/Coin3D/coin4/include/Inventor/C/threads/wpool.h /home/ed/Coin3D/coin4/include/Inventor/C/tidbits.h /home/ed/Coin3D/coin4/include/Inventor/C/XML/attribute.h /home/ed/Coin3D/coin4/include/Inventor/C/XML/document.h /home/ed/Coin3D/coin4/include/Inventor/C/XML/element.h /home/ed/Coin3D/coin4/include/Inventor/C/XML/types.h /home/ed/Coin3D/coin4/include/Inventor/details/SoConeDetail.h /home/ed/Coin3D/coin4/include/Inventor/details/SoCubeDetail.h /home/ed/Coin3D/coin4/include/Inventor/details/SoCylinderDetail.h /home/ed/Coin3D/coin4/include/Inventor/details/SoDetail.h /home/ed/Coin3D/coin4/include/Inventor/details/SoFaceDetail.h /home/ed/Coin3D/coin4/include/Inventor/details/SoLineDetail.h /home/ed/Coin3D/coin4/include/Inventor/details/SoNodeKitDetail.h /home/ed/Coin3D/coin4/include/Inventor/details/SoPointDetail.h /home/ed/Coin3D/coin4/include/Inventor/details/SoTextDetail.h /home/ed/Coin3D/coin4/include/Inventor/draggers/SoCenterballDragger.h /home/ed/Coin3D/coin4/include/Inventor/draggers/SoDirectionalLightDragger.h /home/ed/Coin3D/coin4/include/Inventor/draggers/SoDragger.h /home/ed/Coin3D/coin4/include/Inventor/draggers/SoDragPointDragger.h /home/ed/Coin3D/coin4/include/Inventor/draggers/SoHandleBoxDragger.h /home/ed/Coin3D/coin4/include/Inventor/draggers/SoJackDragger.h /home/ed/Coin3D/coin4/include/Inventor/draggers/SoPointLightDragger.h /home/ed/Coin3D/coin4/include/Inventor/draggers/SoRotateCylindricalDragger.h /home/ed/Coin3D/coin4/include/Inventor/draggers/SoRotateDiscDragger.h /home/ed/Coin3D/coin4/include/Inventor/draggers/SoRotateSphericalDragger.h /home/ed/Coin3D/coin4/include/Inventor/draggers/SoScale1Dragger.h /home/ed/Coin3D/coin4/include/Inventor/draggers/SoScale2Dragger.h /home/ed/Coin3D/coin4/include/Inventor/draggers/SoScale2UniformDragger.h /home/ed/Coin3D/coin4/include/Inventor/draggers/SoScaleUniformDragger.h /home/ed/Coin3D/coin4/include/Inventor/draggers/SoSpotLightDragger.h /home/ed/Coin3D/coin4/include/Inventor/draggers/SoTabBoxDragger.h /home/ed/Coin3D/coin4/include/Inventor/draggers/SoTabPlaneDragger.h /home/ed/Coin3D/coin4/include/Inventor/draggers/SoTrackballDragger.h /home/ed/Coin3D/coin4/include/Inventor/draggers/SoTransformBoxDragger.h /home/ed/Coin3D/coin4/include/Inventor/draggers/SoTransformerDragger.h /home/ed/Coin3D/coin4/include/Inventor/draggers/SoTranslate1Dragger.h /home/ed/Coin3D/coin4/include/Inventor/draggers/SoTranslate2Dragger.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoAccumulatedElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoAmbientColorElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoAnnoText3CharOrientElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoAnnoText3FontSizeHintElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoAnnoText3RenderPrintElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoBBoxModelMatrixElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoBumpMapCoordinateElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoBumpMapElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoBumpMapMatrixElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoCacheElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoCacheHintElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoClipPlaneElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoComplexityElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoComplexityTypeElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoCoordinateElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoCreaseAngleElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoCullElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoDecimationPercentageElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoDecimationTypeElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoDepthBufferElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoDiffuseColorElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoDrawStyleElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoEmissiveColorElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoEnvironmentElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoFloatElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoFocalDistanceElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoFontNameElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoFontSizeElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoGeoElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoGLCacheContextElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoGLClipPlaneElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoGLColorIndexElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoGLCoordinateElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoGLDepthBufferElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoGLDisplayList.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoGLDrawStyleElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoGLEnvironmentElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoGLLazyElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoGLLightIdElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoGLLinePatternElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoGLLineWidthElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoGLModelMatrixElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoGLMultiTextureCoordinateElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoGLMultiTextureEnabledElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoGLMultiTextureImageElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoGLMultiTextureMatrixElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoGLNormalElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoGLPointSizeElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoGLPolygonOffsetElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoGLProjectionMatrixElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoGLRenderPassElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoGLShapeHintsElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoGLTextureEnabledElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoGLUpdateAreaElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoGLVBOElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoGLVertexAttributeElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoGLViewingMatrixElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoGLViewportRegionElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoInt32Element.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoLazyElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoLightAttenuationElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoLightElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoLightModelElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoLinePatternElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoLineWidthElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoListenerDopplerElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoListenerGainElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoListenerOrientationElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoListenerPositionElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoLocalBBoxMatrixElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoMaterialBindingElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoModelMatrixElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoMultiTextureCoordinateElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoMultiTextureEnabledElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoMultiTextureImageElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoMultiTextureMatrixElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoNormalBindingElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoNormalElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoOverrideElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoPickRayElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoPickStyleElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoPointSizeElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoPolygonOffsetElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoProfileCoordinateElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoProfileElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoProjectionMatrixElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoReplacedElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoShapeHintsElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoShapeStyleElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoShininessElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoSoundElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoSpecularColorElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoSubElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoSwitchElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoTextOutlineEnabledElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoTextureCombineElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoTextureCoordinateBindingElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoTextureOverrideElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoTextureQualityElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoTextureUnitElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoTransparencyElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoUnitsElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoVertexAttributeBindingElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoVertexAttributeElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoViewingMatrixElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoViewportRegionElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoViewVolumeElement.h /home/ed/Coin3D/coin4/include/Inventor/elements/SoWindowElement.h /home/ed/Coin3D/coin4/include/Inventor/engines/SoBoolOperation.h /home/ed/Coin3D/coin4/include/Inventor/engines/SoCalculator.h /home/ed/Coin3D/coin4/include/Inventor/engines/SoComposeMatrix.h /home/ed/Coin3D/coin4/include/Inventor/engines/SoComposeRotationFromTo.h /home/ed/Coin3D/coin4/include/Inventor/engines/SoComposeRotation.h /home/ed/Coin3D/coin4/include/Inventor/engines/SoComposeVec2f.h /home/ed/Coin3D/coin4/include/Inventor/engines/SoComposeVec3f.h /home/ed/Coin3D/coin4/include/Inventor/engines/SoComposeVec4f.h /home/ed/Coin3D/coin4/include/Inventor/engines/SoComputeBoundingBox.h /home/ed/Coin3D/coin4/include/Inventor/engines/SoConcatenate.h /home/ed/Coin3D/coin4/include/Inventor/engines/SoCounter.h /home/ed/Coin3D/coin4/include/Inventor/engines/SoDecomposeMatrix.h /home/ed/Coin3D/coin4/include/Inventor/engines/SoDecomposeRotation.h /home/ed/Coin3D/coin4/include/Inventor/engines/SoDecomposeVec2f.h /home/ed/Coin3D/coin4/include/Inventor/engines/SoDecomposeVec3f.h /home/ed/Coin3D/coin4/include/Inventor/engines/SoDecomposeVec4f.h /home/ed/Coin3D/coin4/include/Inventor/engines/SoElapsedTime.h /home/ed/Coin3D/coin4/include/Inventor/engines/SoEngine.h /home/ed/Coin3D/coin4/include/Inventor/engines/SoEngineOutput.h /home/ed/Coin3D/coin4/include/Inventor/engines/SoFieldConverter.h /home/ed/Coin3D/coin4/include/Inventor/engines/SoGate.h /home/ed/Coin3D/coin4/include/Inventor/engines/SoHeightMapToNormalMap.h /home/ed/Coin3D/coin4/include/Inventor/engines/SoInterpolateFloat.h /home/ed/Coin3D/coin4/include/Inventor/engines/SoInterpolate.h /home/ed/Coin3D/coin4/include/Inventor/engines/SoInterpolateRotation.h /home/ed/Coin3D/coin4/include/Inventor/engines/SoInterpolateVec2f.h /home/ed/Coin3D/coin4/include/Inventor/engines/SoInterpolateVec3f.h /home/ed/Coin3D/coin4/include/Inventor/engines/SoInterpolateVec4f.h /home/ed/Coin3D/coin4/include/Inventor/engines/SoNodeEngine.h /home/ed/Coin3D/coin4/include/Inventor/engines/SoOneShot.h /home/ed/Coin3D/coin4/include/Inventor/engines/SoOnOff.h /home/ed/Coin3D/coin4/include/Inventor/engines/SoOutputData.h /home/ed/Coin3D/coin4/include/Inventor/engines/SoSelectOne.h /home/ed/Coin3D/coin4/include/Inventor/engines/SoTexture2Convert.h /home/ed/Coin3D/coin4/include/Inventor/engines/SoTimeCounter.h /home/ed/Coin3D/coin4/include/Inventor/engines/SoTransformVec3f.h /home/ed/Coin3D/coin4/include/Inventor/engines/SoTriggerAny.h /home/ed/Coin3D/coin4/include/Inventor/errors/SoDebugError.h /home/ed/Coin3D/coin4/include/Inventor/errors/SoError.h /home/ed/Coin3D/coin4/include/Inventor/errors/SoMemoryError.h /home/ed/Coin3D/coin4/include/Inventor/errors/SoReadError.h /home/ed/Coin3D/coin4/include/Inventor/events/SoButtonEvent.h /home/ed/Coin3D/coin4/include/Inventor/events/SoEvent.h /home/ed/Coin3D/coin4/include/Inventor/events/SoKeyboardEvent.h /home/ed/Coin3D/coin4/include/Inventor/events/SoLocation2Event.h /home/ed/Coin3D/coin4/include/Inventor/events/SoMotion3Event.h /home/ed/Coin3D/coin4/include/Inventor/events/SoMouseButtonEvent.h /home/ed/Coin3D/coin4/include/Inventor/events/SoSpaceballButtonEvent.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoFieldContainer.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoFieldData.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoField.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoMFBitMask.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoMFBool.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoMFColor.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoMFColorRGBA.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoMFDouble.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoMFEngine.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoMFEnum.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoMFFloat.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoMField.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoMFInt32.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoMFMatrix.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoMFName.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoMFNode.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoMFPath.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoMFPlane.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoMFRotation.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoMFShort.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoMFString.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoMFTime.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoMFUInt32.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoMFUShort.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoMFVec2b.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoMFVec2d.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoMFVec2f.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoMFVec2i32.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoMFVec2s.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoMFVec3b.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoMFVec3d.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoMFVec3f.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoMFVec3i32.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoMFVec3s.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoMFVec4b.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoMFVec4d.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoMFVec4f.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoMFVec4i32.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoMFVec4s.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoMFVec4ub.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoMFVec4ui32.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoMFVec4us.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFBitMask.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFBool.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFBox2d.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFBox2f.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFBox2i32.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFBox2s.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFBox3d.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFBox3f.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFBox3i32.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFBox3s.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFColor.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFColorRGBA.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFDouble.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFEngine.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFEnum.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFFloat.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSField.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFImage3.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFImage.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFInt32.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFMatrix.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFName.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFNode.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFPath.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFPlane.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFRotation.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFShort.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFString.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFTime.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFTrigger.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFUInt32.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFUShort.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFVec2b.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFVec2d.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFVec2f.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFVec2i32.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFVec2s.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFVec3b.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFVec3d.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFVec3f.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFVec3i32.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFVec3s.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFVec4b.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFVec4d.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFVec4f.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFVec4i32.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFVec4s.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFVec4ub.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFVec4ui32.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSFVec4us.h /home/ed/Coin3D/coin4/include/Inventor/fields/SoSubField.h /home/ed/Coin3D/coin4/include/Inventor/lists/SbIntList.h /home/ed/Coin3D/coin4/include/Inventor/lists/SbList.h /home/ed/Coin3D/coin4/include/Inventor/lists/SbPList.h /home/ed/Coin3D/coin4/include/Inventor/lists/SbStringList.h /home/ed/Coin3D/coin4/include/Inventor/lists/SbVec3fList.h /home/ed/Coin3D/coin4/include/Inventor/lists/SoActionMethodList.h /home/ed/Coin3D/coin4/include/Inventor/lists/SoAuditorList.h /home/ed/Coin3D/coin4/include/Inventor/lists/SoBaseList.h /home/ed/Coin3D/coin4/include/Inventor/lists/SoCallbackList.h /home/ed/Coin3D/coin4/include/Inventor/lists/SoDetailList.h /home/ed/Coin3D/coin4/include/Inventor/lists/SoEnabledElementsList.h /home/ed/Coin3D/coin4/include/Inventor/lists/SoEngineList.h /home/ed/Coin3D/coin4/include/Inventor/lists/SoEngineOutputList.h /home/ed/Coin3D/coin4/include/Inventor/lists/SoFieldList.h /home/ed/Coin3D/coin4/include/Inventor/lists/SoNodeList.h /home/ed/Coin3D/coin4/include/Inventor/lists/SoPathList.h /home/ed/Coin3D/coin4/include/Inventor/lists/SoPickedPointList.h /home/ed/Coin3D/coin4/include/Inventor/lists/SoTypeList.h /home/ed/Coin3D/coin4/include/Inventor/manips/SoCenterballManip.h /home/ed/Coin3D/coin4/include/Inventor/manips/SoClipPlaneManip.h /home/ed/Coin3D/coin4/include/Inventor/manips/SoDirectionalLightManip.h /home/ed/Coin3D/coin4/include/Inventor/manips/SoHandleBoxManip.h /home/ed/Coin3D/coin4/include/Inventor/manips/SoJackManip.h /home/ed/Coin3D/coin4/include/Inventor/manips/SoPointLightManip.h /home/ed/Coin3D/coin4/include/Inventor/manips/SoSpotLightManip.h /home/ed/Coin3D/coin4/include/Inventor/manips/SoTabBoxManip.h /home/ed/Coin3D/coin4/include/Inventor/manips/SoTrackballManip.h /home/ed/Coin3D/coin4/include/Inventor/manips/SoTransformBoxManip.h /home/ed/Coin3D/coin4/include/Inventor/manips/SoTransformerManip.h /home/ed/Coin3D/coin4/include/Inventor/manips/SoTransformManip.h /home/ed/Coin3D/coin4/include/Inventor/misc/CoinResources.h /home/ed/Coin3D/coin4/include/Inventor/misc/SoAudioDevice.h /home/ed/Coin3D/coin4/include/Inventor/misc/SoBase.h /home/ed/Coin3D/coin4/include/Inventor/misc/SoChildList.h /home/ed/Coin3D/coin4/include/Inventor/misc/SoContextHandler.h /home/ed/Coin3D/coin4/include/Inventor/misc/SoGLBigImage.h /home/ed/Coin3D/coin4/include/Inventor/misc/SoGLCubeMapImage.h /home/ed/Coin3D/coin4/include/Inventor/misc/SoGLDriverDatabase.h /home/ed/Coin3D/coin4/include/Inventor/misc/SoGLImage.h /home/ed/Coin3D/coin4/include/Inventor/misc/SoGlyph.h /home/ed/Coin3D/coin4/include/Inventor/misc/SoJavaScriptEngine.h /home/ed/Coin3D/coin4/include/Inventor/misc/SoLightPath.h /home/ed/Coin3D/coin4/include/Inventor/misc/SoNormalGenerator.h /home/ed/Coin3D/coin4/include/Inventor/misc/SoNotification.h /home/ed/Coin3D/coin4/include/Inventor/misc/SoNotRec.h /home/ed/Coin3D/coin4/include/Inventor/misc/SoProto.h /home/ed/Coin3D/coin4/include/Inventor/misc/SoProtoInstance.h /home/ed/Coin3D/coin4/include/Inventor/misc/SoState.h /home/ed/Coin3D/coin4/include/Inventor/misc/SoTempPath.h /home/ed/Coin3D/coin4/include/Inventor/navigation/SoScXMLDollyTarget.h /home/ed/Coin3D/coin4/include/Inventor/navigation/SoScXMLFlightControlTarget.h /home/ed/Coin3D/coin4/include/Inventor/navigation/SoScXMLMiscTarget.h /home/ed/Coin3D/coin4/include/Inventor/navigation/SoScXMLMotionTarget.h /home/ed/Coin3D/coin4/include/Inventor/navigation/SoScXMLNavigation.h /home/ed/Coin3D/coin4/include/Inventor/navigation/SoScXMLNavigationTarget.h /home/ed/Coin3D/coin4/include/Inventor/navigation/SoScXMLPanTarget.h /home/ed/Coin3D/coin4/include/Inventor/navigation/SoScXMLRotateTarget.h /home/ed/Coin3D/coin4/include/Inventor/navigation/SoScXMLSeekTarget.h /home/ed/Coin3D/coin4/include/Inventor/navigation/SoScXMLSpinTarget.h /home/ed/Coin3D/coin4/include/Inventor/navigation/SoScXMLZoomTarget.h /home/ed/Coin3D/coin4/include/Inventor/nodekits/SoAppearanceKit.h /home/ed/Coin3D/coin4/include/Inventor/nodekits/SoBaseKit.h /home/ed/Coin3D/coin4/include/Inventor/nodekits/SoCameraKit.h /home/ed/Coin3D/coin4/include/Inventor/nodekits/SoInteractionKit.h /home/ed/Coin3D/coin4/include/Inventor/nodekits/SoLightKit.h /home/ed/Coin3D/coin4/include/Inventor/nodekits/SoNodekitCatalog.h /home/ed/Coin3D/coin4/include/Inventor/nodekits/SoNodeKit.h /home/ed/Coin3D/coin4/include/Inventor/nodekits/SoNodeKitListPart.h /home/ed/Coin3D/coin4/include/Inventor/nodekits/SoSceneKit.h /home/ed/Coin3D/coin4/include/Inventor/nodekits/SoSeparatorKit.h /home/ed/Coin3D/coin4/include/Inventor/nodekits/SoShapeKit.h /home/ed/Coin3D/coin4/include/Inventor/nodekits/SoWrapperKit.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoAnnotation.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoAntiSquish.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoArray.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoAsciiText.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoBaseColor.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoBlinker.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoBumpMapCoordinate.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoBumpMap.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoBumpMapTransform.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoCacheHint.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoCallback.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoCamera.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoClipPlane.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoColorIndex.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoComplexity.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoCone.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoCoordinate3.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoCoordinate4.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoCube.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoCylinder.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoDepthBuffer.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoDirectionalLight.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoDrawStyle.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoEnvironment.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoEventCallback.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoExtSelection.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoFaceSet.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoFile.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoFont.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoFontStyle.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoFragmentShader.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoFrustumCamera.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoGeoCoordinate.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoGeoLocation.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoGeometryShader.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoGeoOrigin.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoGeoSeparator.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoGroup.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoImage.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoIndexedFaceSet.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoIndexedLineSet.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoIndexedMarkerSet.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoIndexedNurbsCurve.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoIndexedNurbsSurface.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoIndexedPointSet.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoIndexedShape.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoIndexedTriangleStripSet.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoInfo.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoLabel.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoLevelOfDetail.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoLight.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoLightModel.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoLinearProfile.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoLineSet.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoListener.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoLocateHighlight.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoLOD.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoMarkerSet.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoMaterialBinding.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoMaterial.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoMatrixTransform.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoMultipleCopy.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoNode.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoNonIndexedShape.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoNormalBinding.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoNormal.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoNurbsCurve.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoNurbsProfile.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoNurbsSurface.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoOrthographicCamera.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoPackedColor.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoPathSwitch.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoPendulum.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoPerspectiveCamera.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoPickStyle.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoPointLight.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoPointSet.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoPolygonOffset.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoProfileCoordinate2.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoProfileCoordinate3.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoProfile.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoQuadMesh.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoResetTransform.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoRotation.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoRotationXYZ.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoRotor.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoScale.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoSceneTexture2.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoSceneTextureCubeMap.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoSelection.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoSeparator.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoShaderObject.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoShaderParameter.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoShaderProgram.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoShape.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoShapeHints.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoShuttle.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoSphere.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoSpotLight.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoSubNode.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoSurroundScale.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoSwitch.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoText2.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoText3.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoTexture2.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoTexture2Transform.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoTexture3.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoTexture3Transform.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoTextureCombine.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoTextureCoordinate2.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoTextureCoordinate3.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoTextureCoordinateBinding.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoTextureCoordinateCube.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoTextureCoordinateCylinder.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoTextureCoordinateDefault.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoTextureCoordinateEnvironment.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoTextureCoordinateFunction.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoTextureCoordinateNormalMap.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoTextureCoordinateObject.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoTextureCoordinatePlane.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoTextureCoordinateReflectionMap.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoTextureCoordinateSphere.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoTextureCubeMap.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoTexture.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoTextureMatrixTransform.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoTextureScalePolicy.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoTextureUnit.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoTransformation.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoTransform.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoTransformSeparator.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoTranslation.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoTransparencyType.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoTriangleStripSet.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoUnits.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoVertexAttributeBinding.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoVertexAttribute.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoVertexProperty.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoVertexShader.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoVertexShape.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoWWWAnchor.h /home/ed/Coin3D/coin4/include/Inventor/nodes/SoWWWInline.h /home/ed/Coin3D/coin4/include/Inventor/projectors/SbCylinderPlaneProjector.h /home/ed/Coin3D/coin4/include/Inventor/projectors/SbCylinderProjector.h /home/ed/Coin3D/coin4/include/Inventor/projectors/SbCylinderSectionProjector.h /home/ed/Coin3D/coin4/include/Inventor/projectors/SbCylinderSheetProjector.h /home/ed/Coin3D/coin4/include/Inventor/projectors/SbLineProjector.h /home/ed/Coin3D/coin4/include/Inventor/projectors/SbPlaneProjector.h /home/ed/Coin3D/coin4/include/Inventor/projectors/SbProjector.h /home/ed/Coin3D/coin4/include/Inventor/projectors/SbSpherePlaneProjector.h /home/ed/Coin3D/coin4/include/Inventor/projectors/SbSphereProjector.h /home/ed/Coin3D/coin4/include/Inventor/projectors/SbSphereSectionProjector.h /home/ed/Coin3D/coin4/include/Inventor/projectors/SbSphereSheetProjector.h /home/ed/Coin3D/coin4/include/Inventor/SbBox2d.h /home/ed/Coin3D/coin4/include/Inventor/SbBox2f.h /home/ed/Coin3D/coin4/include/Inventor/SbBox2i32.h /home/ed/Coin3D/coin4/include/Inventor/SbBox2s.h /home/ed/Coin3D/coin4/include/Inventor/SbBox3d.h /home/ed/Coin3D/coin4/include/Inventor/SbBox3f.h /home/ed/Coin3D/coin4/include/Inventor/SbBox3i32.h /home/ed/Coin3D/coin4/include/Inventor/SbBox3s.h /home/ed/Coin3D/coin4/include/Inventor/SbBSPTree.h /home/ed/Coin3D/coin4/include/Inventor/SbClip.h /home/ed/Coin3D/coin4/include/Inventor/SbColor4f.h /home/ed/Coin3D/coin4/include/Inventor/SbColor.h /home/ed/Coin3D/coin4/include/Inventor/SbCylinder.h /home/ed/Coin3D/coin4/include/Inventor/SbDict.h /home/ed/Coin3D/coin4/include/Inventor/SbDPLine.h /home/ed/Coin3D/coin4/include/Inventor/SbDPMatrix.h /home/ed/Coin3D/coin4/include/Inventor/SbDPPlane.h /home/ed/Coin3D/coin4/include/Inventor/SbDPRotation.h /home/ed/Coin3D/coin4/include/Inventor/SbDPViewVolume.h /home/ed/Coin3D/coin4/include/Inventor/SbHeap.h /home/ed/Coin3D/coin4/include/Inventor/SbImage.h /home/ed/Coin3D/coin4/include/Inventor/SbLine.h /home/ed/Coin3D/coin4/include/Inventor/SbMatrix.h /home/ed/Coin3D/coin4/include/Inventor/SbName.h /home/ed/Coin3D/coin4/include/Inventor/SbOctTree.h /home/ed/Coin3D/coin4/include/Inventor/SbPlane.h /home/ed/Coin3D/coin4/include/Inventor/SbRotation.h /home/ed/Coin3D/coin4/include/Inventor/SbSphere.h /home/ed/Coin3D/coin4/include/Inventor/SbString.h /home/ed/Coin3D/coin4/include/Inventor/SbTesselator.h /home/ed/Coin3D/coin4/include/Inventor/SbTime.h /home/ed/Coin3D/coin4/include/Inventor/SbTypeInfo.h /home/ed/Coin3D/coin4/include/Inventor/SbVec2b.h /home/ed/Coin3D/coin4/include/Inventor/SbVec2d.h /home/ed/Coin3D/coin4/include/Inventor/SbVec2f.h /home/ed/Coin3D/coin4/include/Inventor/SbVec2i32.h /home/ed/Coin3D/coin4/include/Inventor/SbVec2s.h /home/ed/Coin3D/coin4/include/Inventor/SbVec2ub.h /home/ed/Coin3D/coin4/include/Inventor/SbVec2ui32.h /home/ed/Coin3D/coin4/include/Inventor/SbVec2us.h /home/ed/Coin3D/coin4/include/Inventor/SbVec3b.h /home/ed/Coin3D/coin4/include/Inventor/SbVec3d.h /home/ed/Coin3D/coin4/include/Inventor/SbVec3f.h /home/ed/Coin3D/coin4/include/Inventor/SbVec3i32.h /home/ed/Coin3D/coin4/include/Inventor/SbVec3s.h /home/ed/Coin3D/coin4/include/Inventor/SbVec3ub.h /home/ed/Coin3D/coin4/include/Inventor/SbVec3ui32.h /home/ed/Coin3D/coin4/include/Inventor/SbVec3us.h /home/ed/Coin3D/coin4/include/Inventor/SbVec4b.h /home/ed/Coin3D/coin4/include/Inventor/SbVec4d.h /home/ed/Coin3D/coin4/include/Inventor/SbVec4f.h /home/ed/Coin3D/coin4/include/Inventor/SbVec4i32.h /home/ed/Coin3D/coin4/include/Inventor/SbVec4s.h /home/ed/Coin3D/coin4/include/Inventor/SbVec4ub.h /home/ed/Coin3D/coin4/include/Inventor/SbVec4ui32.h /home/ed/Coin3D/coin4/include/Inventor/SbViewportRegion.h /home/ed/Coin3D/coin4/include/Inventor/SbViewVolume.h /home/ed/Coin3D/coin4/include/Inventor/SbXfBox3d.h /home/ed/Coin3D/coin4/include/Inventor/SbXfBox3f.h /home/ed/Coin3D/coin4/include/Inventor/scxml/ScXMLAbstractStateElt.h /home/ed/Coin3D/coin4/include/Inventor/scxml/ScXMLAnchorElt.h /home/ed/Coin3D/coin4/include/Inventor/scxml/ScXMLAssignElt.h /home/ed/Coin3D/coin4/include/Inventor/scxml/ScXMLCoinEvaluator.h /home/ed/Coin3D/coin4/include/Inventor/scxml/ScXMLContentElt.h /home/ed/Coin3D/coin4/include/Inventor/scxml/ScXMLDataElt.h /home/ed/Coin3D/coin4/include/Inventor/scxml/ScXMLDataModelElt.h /home/ed/Coin3D/coin4/include/Inventor/scxml/ScXMLDocument.h /home/ed/Coin3D/coin4/include/Inventor/scxml/ScXMLECMAScriptEvaluator.h /home/ed/Coin3D/coin4/include/Inventor/scxml/ScXMLElseElt.h /home/ed/Coin3D/coin4/include/Inventor/scxml/ScXMLElseIfElt.h /home/ed/Coin3D/coin4/include/Inventor/scxml/ScXMLElt.h /home/ed/Coin3D/coin4/include/Inventor/scxml/ScXMLEvaluator.h /home/ed/Coin3D/coin4/include/Inventor/scxml/ScXMLEventElt.h /home/ed/Coin3D/coin4/include/Inventor/scxml/ScXMLEvent.h /home/ed/Coin3D/coin4/include/Inventor/scxml/ScXMLEventTarget.h /home/ed/Coin3D/coin4/include/Inventor/scxml/ScXMLExecutableElt.h /home/ed/Coin3D/coin4/include/Inventor/scxml/ScXMLFinalElt.h /home/ed/Coin3D/coin4/include/Inventor/scxml/ScXMLFinalizeElt.h /home/ed/Coin3D/coin4/include/Inventor/scxml/ScXML.h /home/ed/Coin3D/coin4/include/Inventor/scxml/ScXMLHistoryElt.h /home/ed/Coin3D/coin4/include/Inventor/scxml/ScXMLIfElt.h /home/ed/Coin3D/coin4/include/Inventor/scxml/ScXMLInitialElt.h /home/ed/Coin3D/coin4/include/Inventor/scxml/ScXMLInvokeElt.h /home/ed/Coin3D/coin4/include/Inventor/scxml/ScXMLLogElt.h /home/ed/Coin3D/coin4/include/Inventor/scxml/ScXMLMinimumEvaluator.h /home/ed/Coin3D/coin4/include/Inventor/scxml/ScXMLObject.h /home/ed/Coin3D/coin4/include/Inventor/scxml/ScXMLOnEntryElt.h /home/ed/Coin3D/coin4/include/Inventor/scxml/ScXMLOnExitElt.h /home/ed/Coin3D/coin4/include/Inventor/scxml/ScXMLParallelElt.h /home/ed/Coin3D/coin4/include/Inventor/scxml/ScXMLParamElt.h /home/ed/Coin3D/coin4/include/Inventor/scxml/ScXMLScriptElt.h /home/ed/Coin3D/coin4/include/Inventor/scxml/ScXMLScxmlElt.h /home/ed/Coin3D/coin4/include/Inventor/scxml/ScXMLSendElt.h /home/ed/Coin3D/coin4/include/Inventor/scxml/ScXMLStateElt.h /home/ed/Coin3D/coin4/include/Inventor/scxml/ScXMLStateMachine.h /home/ed/Coin3D/coin4/include/Inventor/scxml/ScXMLTransitionElt.h /home/ed/Coin3D/coin4/include/Inventor/scxml/ScXMLValidateElt.h /home/ed/Coin3D/coin4/include/Inventor/scxml/ScXMLXPathEvaluator.h /home/ed/Coin3D/coin4/include/Inventor/scxml/SoScXMLEvent.h /home/ed/Coin3D/coin4/include/Inventor/scxml/SoScXMLStateMachine.h /home/ed/Coin3D/coin4/include/Inventor/sensors/SoAlarmSensor.h /home/ed/Coin3D/coin4/include/Inventor/sensors/SoDataSensor.h /home/ed/Coin3D/coin4/include/Inventor/sensors/SoDelayQueueSensor.h /home/ed/Coin3D/coin4/include/Inventor/sensors/SoFieldSensor.h /home/ed/Coin3D/coin4/include/Inventor/sensors/SoIdleSensor.h /home/ed/Coin3D/coin4/include/Inventor/sensors/SoNodeSensor.h /home/ed/Coin3D/coin4/include/Inventor/sensors/SoOneShotSensor.h /home/ed/Coin3D/coin4/include/Inventor/sensors/SoPathSensor.h /home/ed/Coin3D/coin4/include/Inventor/sensors/SoSensor.h /home/ed/Coin3D/coin4/include/Inventor/sensors/SoSensorManager.h /home/ed/Coin3D/coin4/include/Inventor/sensors/SoTimerQueueSensor.h /home/ed/Coin3D/coin4/include/Inventor/sensors/SoTimerSensor.h /home/ed/Coin3D/coin4/include/Inventor/SoDB.h /home/ed/Coin3D/coin4/include/Inventor/SoEventManager.h /home/ed/Coin3D/coin4/include/Inventor/SoFullPath.h /home/ed/Coin3D/coin4/include/Inventor/SoInput.h /home/ed/Coin3D/coin4/include/Inventor/SoInteraction.h /home/ed/Coin3D/coin4/include/Inventor/SoNodeKitPath.h /home/ed/Coin3D/coin4/include/Inventor/SoOffscreenRenderer.h /home/ed/Coin3D/coin4/include/Inventor/SoOutput.h /home/ed/Coin3D/coin4/include/Inventor/SoPath.h /home/ed/Coin3D/coin4/include/Inventor/SoPickedPoint.h /home/ed/Coin3D/coin4/include/Inventor/SoPrimitiveVertex.h /home/ed/Coin3D/coin4/include/Inventor/SoRenderManager.h /home/ed/Coin3D/coin4/include/Inventor/SoSceneManager.h /home/ed/Coin3D/coin4/include/Inventor/SoType.h /home/ed/Coin3D/coin4/include/Inventor/system/gl.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLAnchor.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLAppearance.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLAudioClip.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLBackground.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLBillboard.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLBox.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLCollision.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLColor.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLColorInterpolator.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLCone.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLCoordinate.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLCoordinateInterpolator.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLCylinder.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLCylinderSensor.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLDirectionalLight.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLDragSensor.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLElevationGrid.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLExtrusion.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLFog.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLFontStyle.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLGeometry.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLGroup.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLImageTexture.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLIndexedFaceSet.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLIndexedLine.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLIndexedLineSet.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLIndexedShape.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLInline.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLInterpolator.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLLight.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLLOD.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLMaterial.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLMovieTexture.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLNavigationInfo.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLNormal.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLNormalInterpolator.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLOrientationInterpolator.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLParent.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLPixelTexture.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLPlaneSensor.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLPointLight.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLPointSet.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLPositionInterpolator.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLProximitySensor.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLScalarInterpolator.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLScript.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLSensor.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLShape.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLSound.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLSphere.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLSphereSensor.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLSpotLight.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLSwitch.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLText.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLTextureCoordinate.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLTexture.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLTextureTransform.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLTimeSensor.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLTouchSensor.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLTransform.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLVertexLine.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLVertexPoint.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLVertexShape.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLViewpoint.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLVisibilitySensor.h /home/ed/Coin3D/coin4/include/Inventor/VRMLnodes/SoVRMLWorldInfo.h /home/ed/Coin3D/coin4/include/SoDebug.h /home/ed/Coin3D/coin4/src/actions/SoAction.cpp /home/ed/Coin3D/coin4/src/actions/SoAudioRenderAction.cpp /home/ed/Coin3D/coin4/src/actions/SoBoxHighlightRenderAction.cpp /home/ed/Coin3D/coin4/src/actions/SoCallbackAction.cpp /home/ed/Coin3D/coin4/src/actions/SoGetBoundingBoxAction.cpp /home/ed/Coin3D/coin4/src/actions/SoGetMatrixAction.cpp /home/ed/Coin3D/coin4/src/actions/SoGetPrimitiveCountAction.cpp /home/ed/Coin3D/coin4/src/actions/SoGlobalSimplifyAction.cpp /home/ed/Coin3D/coin4/src/actions/SoGLRenderAction.cpp /home/ed/Coin3D/coin4/src/actions/SoHandleEventAction.cpp /home/ed/Coin3D/coin4/src/actions/SoLineHighlightRenderAction.cpp /home/ed/Coin3D/coin4/src/actions/SoPickAction.cpp /home/ed/Coin3D/coin4/src/actions/SoRayPickAction.cpp /home/ed/Coin3D/coin4/src/actions/SoReorganizeAction.cpp /home/ed/Coin3D/coin4/src/actions/SoSearchAction.cpp /home/ed/Coin3D/coin4/src/actions/SoShapeSimplifyAction.cpp /home/ed/Coin3D/coin4/src/actions/SoSimplifyAction.cpp /home/ed/Coin3D/coin4/src/actions/SoToVRML2Action.cpp /home/ed/Coin3D/coin4/src/actions/SoToVRMLAction.cpp /home/ed/Coin3D/coin4/src/actions/SoWriteAction.cpp /home/ed/Coin3D/coin4/src/base/dict.cpp /home/ed/Coin3D/coin4/src/base/hash.cpp /home/ed/Coin3D/coin4/src/base/heap.cpp /home/ed/Coin3D/coin4/src/base/memalloc.cpp /home/ed/Coin3D/coin4/src/base/namemap.cpp /home/ed/Coin3D/coin4/src/base/rbptree.cpp /home/ed/Coin3D/coin4/src/base/SbBox2d.cpp /home/ed/Coin3D/coin4/src/base/SbBox2f.cpp /home/ed/Coin3D/coin4/src/base/SbBox2i32.cpp /home/ed/Coin3D/coin4/src/base/SbBox2s.cpp /home/ed/Coin3D/coin4/src/base/SbBox3d.cpp /home/ed/Coin3D/coin4/src/base/SbBox3f.cpp /home/ed/Coin3D/coin4/src/base/SbBox3i32.cpp /home/ed/Coin3D/coin4/src/base/SbBox3s.cpp /home/ed/Coin3D/coin4/src/base/SbBSPTree.cpp /home/ed/Coin3D/coin4/src/base/SbClip.cpp /home/ed/Coin3D/coin4/src/base/SbColor4f.cpp /home/ed/Coin3D/coin4/src/base/SbColor.cpp /home/ed/Coin3D/coin4/src/base/SbCylinder.cpp /home/ed/Coin3D/coin4/src/base/SbDict.cpp /home/ed/Coin3D/coin4/src/base/SbDPLine.cpp /home/ed/Coin3D/coin4/src/base/SbDPMatrix.cpp /home/ed/Coin3D/coin4/src/base/SbDPPlane.cpp /home/ed/Coin3D/coin4/src/base/SbDPRotation.cpp /home/ed/Coin3D/coin4/src/base/SbDPViewVolume.cpp /home/ed/Coin3D/coin4/src/base/SbHeap.cpp /home/ed/Coin3D/coin4/src/base/SbImage.cpp /home/ed/Coin3D/coin4/src/base/SbLine.cpp /home/ed/Coin3D/coin4/src/base/SbMatrix.cpp /home/ed/Coin3D/coin4/src/base/SbName.cpp /home/ed/Coin3D/coin4/src/base/SbOctTree.cpp /home/ed/Coin3D/coin4/src/base/SbPlane.cpp /home/ed/Coin3D/coin4/src/base/SbRotation.cpp /home/ed/Coin3D/coin4/src/base/SbSphere.cpp /home/ed/Coin3D/coin4/src/base/SbString.cpp /home/ed/Coin3D/coin4/src/base/SbTesselator.cpp /home/ed/Coin3D/coin4/src/base/SbTime.cpp /home/ed/Coin3D/coin4/src/base/SbVec2b.cpp /home/ed/Coin3D/coin4/src/base/SbVec2d.cpp /home/ed/Coin3D/coin4/src/base/SbVec2f.cpp /home/ed/Coin3D/coin4/src/base/SbVec2i32.cpp /home/ed/Coin3D/coin4/src/base/SbVec2s.cpp /home/ed/Coin3D/coin4/src/base/SbVec2ub.cpp /home/ed/Coin3D/coin4/src/base/SbVec2ui32.cpp /home/ed/Coin3D/coin4/src/base/SbVec2us.cpp /home/ed/Coin3D/coin4/src/base/SbVec3b.cpp /home/ed/Coin3D/coin4/src/base/SbVec3d.cpp /home/ed/Coin3D/coin4/src/base/SbVec3f.cpp /home/ed/Coin3D/coin4/src/base/SbVec3i32.cpp /home/ed/Coin3D/coin4/src/base/SbVec3s.cpp /home/ed/Coin3D/coin4/src/base/SbVec3ub.cpp /home/ed/Coin3D/coin4/src/base/SbVec3ui32.cpp /home/ed/Coin3D/coin4/src/base/SbVec3us.cpp /home/ed/Coin3D/coin4/src/base/SbVec4b.cpp /home/ed/Coin3D/coin4/src/base/SbVec4d.cpp /home/ed/Coin3D/coin4/src/base/SbVec4f.cpp /home/ed/Coin3D/coin4/src/base/SbVec4i32.cpp /home/ed/Coin3D/coin4/src/base/SbVec4s.cpp /home/ed/Coin3D/coin4/src/base/SbVec4ub.cpp /home/ed/Coin3D/coin4/src/base/SbVec4ui32.cpp /home/ed/Coin3D/coin4/src/base/SbViewportRegion.cpp /home/ed/Coin3D/coin4/src/base/SbViewVolume.cpp /home/ed/Coin3D/coin4/src/base/SbXfBox3d.cpp /home/ed/Coin3D/coin4/src/base/SbXfBox3f.cpp /home/ed/Coin3D/coin4/src/base/string.cpp /home/ed/Coin3D/coin4/src/base/time.cpp /home/ed/Coin3D/coin4/src/bundles/SoBundle.cpp /home/ed/Coin3D/coin4/src/bundles/SoMaterialBundle.cpp /home/ed/Coin3D/coin4/src/bundles/SoNormalBundle.cpp /home/ed/Coin3D/coin4/src/bundles/SoTextureCoordinateBundle.cpp /home/ed/Coin3D/coin4/src/bundles/SoVertexAttributeBundle.cpp /home/ed/Coin3D/coin4/src/caches/SoBoundingBoxCache.cpp /home/ed/Coin3D/coin4/src/caches/SoCache.cpp /home/ed/Coin3D/coin4/src/caches/SoConvexDataCache.cpp /home/ed/Coin3D/coin4/src/caches/SoGLCacheList.cpp /home/ed/Coin3D/coin4/src/caches/SoGLRenderCache.cpp /home/ed/Coin3D/coin4/src/caches/SoGlyphCache.cpp /home/ed/Coin3D/coin4/src/caches/SoNormalCache.cpp /home/ed/Coin3D/coin4/src/caches/SoPrimitiveVertexCache.cpp /home/ed/Coin3D/coin4/src/caches/SoShaderProgramCache.cpp /home/ed/Coin3D/coin4/src/caches/SoTextureCoordinateCache.cpp /home/ed/Coin3D/coin4/src/caches/SoVBOCache.cpp /home/ed/Coin3D/coin4/src/collision/SbTri3f.cpp /home/ed/Coin3D/coin4/src/collision/SoIntersectionDetectionAction.cpp /home/ed/Coin3D/coin4/src/details/SoConeDetail.cpp /home/ed/Coin3D/coin4/src/details/SoCubeDetail.cpp /home/ed/Coin3D/coin4/src/details/SoCylinderDetail.cpp /home/ed/Coin3D/coin4/src/details/SoDetail.cpp /home/ed/Coin3D/coin4/src/details/SoFaceDetail.cpp /home/ed/Coin3D/coin4/src/details/SoLineDetail.cpp /home/ed/Coin3D/coin4/src/details/SoNodeKitDetail.cpp /home/ed/Coin3D/coin4/src/details/SoPointDetail.cpp /home/ed/Coin3D/coin4/src/details/SoTextDetail.cpp /home/ed/Coin3D/coin4/src/doc/Coin_books.dox /home/ed/Coin3D/coin4/src/doc/Coin_environment.dox /home/ed/Coin3D/coin4/src/doc/Coin_macros.dox /home/ed/Coin3D/coin4/src/doc/Coin_main.dox /home/ed/Coin3D/coin4/src/doc/Coin_modules.dox /home/ed/Coin3D/coin4/src/draggers/SoCenterballDragger.cpp /home/ed/Coin3D/coin4/src/draggers/SoDirectionalLightDragger.cpp /home/ed/Coin3D/coin4/src/draggers/SoDragger.cpp /home/ed/Coin3D/coin4/src/draggers/SoDragPointDragger.cpp /home/ed/Coin3D/coin4/src/draggers/SoHandleBoxDragger.cpp /home/ed/Coin3D/coin4/src/draggers/SoJackDragger.cpp /home/ed/Coin3D/coin4/src/draggers/SoPointLightDragger.cpp /home/ed/Coin3D/coin4/src/draggers/SoRotateCylindricalDragger.cpp /home/ed/Coin3D/coin4/src/draggers/SoRotateDiscDragger.cpp /home/ed/Coin3D/coin4/src/draggers/SoRotateSphericalDragger.cpp /home/ed/Coin3D/coin4/src/draggers/SoScale1Dragger.cpp /home/ed/Coin3D/coin4/src/draggers/SoScale2Dragger.cpp /home/ed/Coin3D/coin4/src/draggers/SoScale2UniformDragger.cpp /home/ed/Coin3D/coin4/src/draggers/SoScaleUniformDragger.cpp /home/ed/Coin3D/coin4/src/draggers/SoSpotLightDragger.cpp /home/ed/Coin3D/coin4/src/draggers/SoTabBoxDragger.cpp /home/ed/Coin3D/coin4/src/draggers/SoTabPlaneDragger.cpp /home/ed/Coin3D/coin4/src/draggers/SoTrackballDragger.cpp /home/ed/Coin3D/coin4/src/draggers/SoTransformBoxDragger.cpp /home/ed/Coin3D/coin4/src/draggers/SoTransformerDragger.cpp /home/ed/Coin3D/coin4/src/draggers/SoTranslate1Dragger.cpp /home/ed/Coin3D/coin4/src/draggers/SoTranslate2Dragger.cpp /home/ed/Coin3D/coin4/src/elements/GL/SoGLCacheContextElement.cpp /home/ed/Coin3D/coin4/src/elements/GL/SoGLClipPlaneElement.cpp /home/ed/Coin3D/coin4/src/elements/GL/SoGLColorIndexElement.cpp /home/ed/Coin3D/coin4/src/elements/GL/SoGLCoordinateElement.cpp /home/ed/Coin3D/coin4/src/elements/GL/SoGLDepthBufferElement.cpp /home/ed/Coin3D/coin4/src/elements/GL/SoGLDisplayList.cpp /home/ed/Coin3D/coin4/src/elements/GL/SoGLDrawStyleElement.cpp /home/ed/Coin3D/coin4/src/elements/GL/SoGLEnvironmentElement.cpp /home/ed/Coin3D/coin4/src/elements/GL/SoGLLazyElement.cpp /home/ed/Coin3D/coin4/src/elements/GL/SoGLLightIdElement.cpp /home/ed/Coin3D/coin4/src/elements/GL/SoGLLinePatternElement.cpp /home/ed/Coin3D/coin4/src/elements/GL/SoGLLineWidthElement.cpp /home/ed/Coin3D/coin4/src/elements/GL/SoGLModelMatrixElement.cpp /home/ed/Coin3D/coin4/src/elements/GL/SoGLMultiTextureCoordinateElement.cpp /home/ed/Coin3D/coin4/src/elements/GL/SoGLMultiTextureEnabledElement.cpp /home/ed/Coin3D/coin4/src/elements/GL/SoGLMultiTextureImageElement.cpp /home/ed/Coin3D/coin4/src/elements/GL/SoGLMultiTextureMatrixElement.cpp /home/ed/Coin3D/coin4/src/elements/GL/SoGLNormalElement.cpp /home/ed/Coin3D/coin4/src/elements/GL/SoGLPointSizeElement.cpp /home/ed/Coin3D/coin4/src/elements/GL/SoGLPolygonOffsetElement.cpp /home/ed/Coin3D/coin4/src/elements/GL/SoGLProjectionMatrixElement.cpp /home/ed/Coin3D/coin4/src/elements/GL/SoGLRenderPassElement.cpp /home/ed/Coin3D/coin4/src/elements/GL/SoGLShapeHintsElement.cpp /home/ed/Coin3D/coin4/src/elements/GL/SoGLTextureEnabledElement.cpp /home/ed/Coin3D/coin4/src/elements/GL/SoGLUpdateAreaElement.cpp /home/ed/Coin3D/coin4/src/elements/GL/SoGLVBOElement.cpp /home/ed/Coin3D/coin4/src/elements/GL/SoGLVertexAttributeElement.cpp /home/ed/Coin3D/coin4/src/elements/GL/SoGLViewingMatrixElement.cpp /home/ed/Coin3D/coin4/src/elements/GL/SoGLViewportRegionElement.cpp /home/ed/Coin3D/coin4/src/elements/GL/SoResetMatrixElement.cpp /home/ed/Coin3D/coin4/src/elements/SoAccumulatedElement.cpp /home/ed/Coin3D/coin4/src/elements/SoAmbientColorElement.cpp /home/ed/Coin3D/coin4/src/elements/SoAnnoText3CharOrientElement.cpp /home/ed/Coin3D/coin4/src/elements/SoAnnoText3FontSizeHintElement.cpp /home/ed/Coin3D/coin4/src/elements/SoAnnoText3RenderPrintElement.cpp /home/ed/Coin3D/coin4/src/elements/SoBBoxModelMatrixElement.cpp /home/ed/Coin3D/coin4/src/elements/SoBumpMapCoordinateElement.cpp /home/ed/Coin3D/coin4/src/elements/SoBumpMapElement.cpp /home/ed/Coin3D/coin4/src/elements/SoBumpMapMatrixElement.cpp /home/ed/Coin3D/coin4/src/elements/SoCacheElement.cpp /home/ed/Coin3D/coin4/src/elements/SoCacheHintElement.cpp /home/ed/Coin3D/coin4/src/elements/SoClipPlaneElement.cpp /home/ed/Coin3D/coin4/src/elements/SoComplexityElement.cpp /home/ed/Coin3D/coin4/src/elements/SoComplexityTypeElement.cpp /home/ed/Coin3D/coin4/src/elements/SoCoordinateElement.cpp /home/ed/Coin3D/coin4/src/elements/SoCreaseAngleElement.cpp /home/ed/Coin3D/coin4/src/elements/SoCullElement.cpp /home/ed/Coin3D/coin4/src/elements/SoDecimationPercentageElement.cpp /home/ed/Coin3D/coin4/src/elements/SoDecimationTypeElement.cpp /home/ed/Coin3D/coin4/src/elements/SoDepthBufferElement.cpp /home/ed/Coin3D/coin4/src/elements/SoDiffuseColorElement.cpp /home/ed/Coin3D/coin4/src/elements/SoDrawStyleElement.cpp /home/ed/Coin3D/coin4/src/elements/SoElement.cpp /home/ed/Coin3D/coin4/src/elements/SoEmissiveColorElement.cpp /home/ed/Coin3D/coin4/src/elements/SoEnvironmentElement.cpp /home/ed/Coin3D/coin4/src/elements/SoFloatElement.cpp /home/ed/Coin3D/coin4/src/elements/SoFocalDistanceElement.cpp /home/ed/Coin3D/coin4/src/elements/SoFontNameElement.cpp /home/ed/Coin3D/coin4/src/elements/SoFontSizeElement.cpp /home/ed/Coin3D/coin4/src/elements/SoInt32Element.cpp /home/ed/Coin3D/coin4/src/elements/SoLazyElement.cpp /home/ed/Coin3D/coin4/src/elements/SoLightAttenuationElement.cpp /home/ed/Coin3D/coin4/src/elements/SoLightElement.cpp /home/ed/Coin3D/coin4/src/elements/SoLightModelElement.cpp /home/ed/Coin3D/coin4/src/elements/SoLinePatternElement.cpp /home/ed/Coin3D/coin4/src/elements/SoLineWidthElement.cpp /home/ed/Coin3D/coin4/src/elements/SoListenerDopplerElement.cpp /home/ed/Coin3D/coin4/src/elements/SoListenerGainElement.cpp /home/ed/Coin3D/coin4/src/elements/SoListenerOrientationElement.cpp /home/ed/Coin3D/coin4/src/elements/SoListenerPositionElement.cpp /home/ed/Coin3D/coin4/src/elements/SoLocalBBoxMatrixElement.cpp /home/ed/Coin3D/coin4/src/elements/SoMaterialBindingElement.cpp /home/ed/Coin3D/coin4/src/elements/SoModelMatrixElement.cpp /home/ed/Coin3D/coin4/src/elements/SoMultiTextureCoordinateElement.cpp /home/ed/Coin3D/coin4/src/elements/SoMultiTextureEnabledElement.cpp /home/ed/Coin3D/coin4/src/elements/SoMultiTextureImageElement.cpp /home/ed/Coin3D/coin4/src/elements/SoMultiTextureMatrixElement.cpp /home/ed/Coin3D/coin4/src/elements/SoNormalBindingElement.cpp /home/ed/Coin3D/coin4/src/elements/SoNormalElement.cpp /home/ed/Coin3D/coin4/src/elements/SoOverrideElement.cpp /home/ed/Coin3D/coin4/src/elements/SoPickRayElement.cpp /home/ed/Coin3D/coin4/src/elements/SoPickStyleElement.cpp /home/ed/Coin3D/coin4/src/elements/SoPointSizeElement.cpp /home/ed/Coin3D/coin4/src/elements/SoPolygonOffsetElement.cpp /home/ed/Coin3D/coin4/src/elements/SoProfileCoordinateElement.cpp /home/ed/Coin3D/coin4/src/elements/SoProfileElement.cpp /home/ed/Coin3D/coin4/src/elements/SoProjectionMatrixElement.cpp /home/ed/Coin3D/coin4/src/elements/SoReplacedElement.cpp /home/ed/Coin3D/coin4/src/elements/SoShapeHintsElement.cpp /home/ed/Coin3D/coin4/src/elements/SoShapeStyleElement.cpp /home/ed/Coin3D/coin4/src/elements/SoShininessElement.cpp /home/ed/Coin3D/coin4/src/elements/SoSoundElement.cpp /home/ed/Coin3D/coin4/src/elements/SoSpecularColorElement.cpp /home/ed/Coin3D/coin4/src/elements/SoSwitchElement.cpp /home/ed/Coin3D/coin4/src/elements/SoTextOutlineEnabledElement.cpp /home/ed/Coin3D/coin4/src/elements/SoTextureCombineElement.cpp /home/ed/Coin3D/coin4/src/elements/SoTextureCoordinateBindingElement.cpp /home/ed/Coin3D/coin4/src/elements/SoTextureOverrideElement.cpp /home/ed/Coin3D/coin4/src/elements/SoTextureQualityElement.cpp /home/ed/Coin3D/coin4/src/elements/SoTextureScalePolicyElement.cpp /home/ed/Coin3D/coin4/src/elements/SoTextureScaleQualityElement.cpp /home/ed/Coin3D/coin4/src/elements/SoTextureUnitElement.cpp /home/ed/Coin3D/coin4/src/elements/SoTransparencyElement.cpp /home/ed/Coin3D/coin4/src/elements/SoUnitsElement.cpp /home/ed/Coin3D/coin4/src/elements/SoVertexAttributeBindingElement.cpp /home/ed/Coin3D/coin4/src/elements/SoVertexAttributeElement.cpp /home/ed/Coin3D/coin4/src/elements/SoViewingMatrixElement.cpp /home/ed/Coin3D/coin4/src/elements/SoViewportRegionElement.cpp /home/ed/Coin3D/coin4/src/elements/SoViewVolumeElement.cpp /home/ed/Coin3D/coin4/src/elements/SoWindowElement.cpp /home/ed/Coin3D/coin4/src/engines/SoBoolOperation.cpp /home/ed/Coin3D/coin4/src/engines/SoCalculator.cpp /home/ed/Coin3D/coin4/src/engines/SoComposeMatrix.cpp /home/ed/Coin3D/coin4/src/engines/SoComposeRotation.cpp /home/ed/Coin3D/coin4/src/engines/SoComposeRotationFromTo.cpp /home/ed/Coin3D/coin4/src/engines/SoComposeVec2f.cpp /home/ed/Coin3D/coin4/src/engines/SoComposeVec3f.cpp /home/ed/Coin3D/coin4/src/engines/SoComposeVec4f.cpp /home/ed/Coin3D/coin4/src/engines/SoComputeBoundingBox.cpp /home/ed/Coin3D/coin4/src/engines/SoConcatenate.cpp /home/ed/Coin3D/coin4/src/engines/SoCounter.cpp /home/ed/Coin3D/coin4/src/engines/SoDecomposeMatrix.cpp /home/ed/Coin3D/coin4/src/engines/SoDecomposeRotation.cpp /home/ed/Coin3D/coin4/src/engines/SoDecomposeVec2f.cpp /home/ed/Coin3D/coin4/src/engines/SoDecomposeVec3f.cpp /home/ed/Coin3D/coin4/src/engines/SoDecomposeVec4f.cpp /home/ed/Coin3D/coin4/src/engines/SoElapsedTime.cpp /home/ed/Coin3D/coin4/src/engines/SoEngine.cpp /home/ed/Coin3D/coin4/src/engines/SoEngineOutput.cpp /home/ed/Coin3D/coin4/src/engines/SoFieldConverter.cpp /home/ed/Coin3D/coin4/src/engines/SoGate.cpp /home/ed/Coin3D/coin4/src/engines/SoHeightMapToNormalMap.cpp /home/ed/Coin3D/coin4/src/engines/SoInterpolate.cpp /home/ed/Coin3D/coin4/src/engines/SoInterpolateFloat.cpp /home/ed/Coin3D/coin4/src/engines/SoInterpolateRotation.cpp /home/ed/Coin3D/coin4/src/engines/SoInterpolateVec2f.cpp /home/ed/Coin3D/coin4/src/engines/SoInterpolateVec3f.cpp /home/ed/Coin3D/coin4/src/engines/SoInterpolateVec4f.cpp /home/ed/Coin3D/coin4/src/engines/SoNodeEngine.cpp /home/ed/Coin3D/coin4/src/engines/SoOneShot.cpp /home/ed/Coin3D/coin4/src/engines/SoOnOff.cpp /home/ed/Coin3D/coin4/src/engines/SoOutputData.cpp /home/ed/Coin3D/coin4/src/engines/SoSelectOne.cpp /home/ed/Coin3D/coin4/src/engines/SoTexture2Convert.cpp /home/ed/Coin3D/coin4/src/engines/SoTimeCounter.cpp /home/ed/Coin3D/coin4/src/engines/SoTransformVec3f.cpp /home/ed/Coin3D/coin4/src/engines/SoTriggerAny.cpp /home/ed/Coin3D/coin4/src/errors/debugerror.cpp /home/ed/Coin3D/coin4/src/errors/error.cpp /home/ed/Coin3D/coin4/src/errors/SoDebugError.cpp /home/ed/Coin3D/coin4/src/errors/SoError.cpp /home/ed/Coin3D/coin4/src/errors/SoMemoryError.cpp /home/ed/Coin3D/coin4/src/errors/SoReadError.cpp /home/ed/Coin3D/coin4/src/events/SoButtonEvent.cpp /home/ed/Coin3D/coin4/src/events/SoEvent.cpp /home/ed/Coin3D/coin4/src/events/SoKeyboardEvent.cpp /home/ed/Coin3D/coin4/src/events/SoLocation2Event.cpp /home/ed/Coin3D/coin4/src/events/SoMotion3Event.cpp /home/ed/Coin3D/coin4/src/events/SoMouseButtonEvent.cpp /home/ed/Coin3D/coin4/src/events/SoSpaceballButtonEvent.cpp /home/ed/Coin3D/coin4/src/fields/SoFieldContainer.cpp /home/ed/Coin3D/coin4/src/fields/SoField.cpp /home/ed/Coin3D/coin4/src/fields/SoFieldData.cpp /home/ed/Coin3D/coin4/src/fields/SoMFBitMask.cpp /home/ed/Coin3D/coin4/src/fields/SoMFBool.cpp /home/ed/Coin3D/coin4/src/fields/SoMFColor.cpp /home/ed/Coin3D/coin4/src/fields/SoMFColorRGBA.cpp /home/ed/Coin3D/coin4/src/fields/SoMFDouble.cpp /home/ed/Coin3D/coin4/src/fields/SoMFEngine.cpp /home/ed/Coin3D/coin4/src/fields/SoMFEnum.cpp /home/ed/Coin3D/coin4/src/fields/SoMFFloat.cpp /home/ed/Coin3D/coin4/src/fields/SoMField.cpp /home/ed/Coin3D/coin4/src/fields/SoMFInt32.cpp /home/ed/Coin3D/coin4/src/fields/SoMFMatrix.cpp /home/ed/Coin3D/coin4/src/fields/SoMFName.cpp /home/ed/Coin3D/coin4/src/fields/SoMFNode.cpp /home/ed/Coin3D/coin4/src/fields/SoMFPath.cpp /home/ed/Coin3D/coin4/src/fields/SoMFPlane.cpp /home/ed/Coin3D/coin4/src/fields/SoMFRotation.cpp /home/ed/Coin3D/coin4/src/fields/SoMFShort.cpp /home/ed/Coin3D/coin4/src/fields/SoMFString.cpp /home/ed/Coin3D/coin4/src/fields/SoMFTime.cpp /home/ed/Coin3D/coin4/src/fields/SoMFUInt32.cpp /home/ed/Coin3D/coin4/src/fields/SoMFUShort.cpp /home/ed/Coin3D/coin4/src/fields/SoMFVec2b.cpp /home/ed/Coin3D/coin4/src/fields/SoMFVec2d.cpp /home/ed/Coin3D/coin4/src/fields/SoMFVec2f.cpp /home/ed/Coin3D/coin4/src/fields/SoMFVec2i32.cpp /home/ed/Coin3D/coin4/src/fields/SoMFVec2s.cpp /home/ed/Coin3D/coin4/src/fields/SoMFVec3b.cpp /home/ed/Coin3D/coin4/src/fields/SoMFVec3d.cpp /home/ed/Coin3D/coin4/src/fields/SoMFVec3f.cpp /home/ed/Coin3D/coin4/src/fields/SoMFVec3i32.cpp /home/ed/Coin3D/coin4/src/fields/SoMFVec3s.cpp /home/ed/Coin3D/coin4/src/fields/SoMFVec4b.cpp /home/ed/Coin3D/coin4/src/fields/SoMFVec4d.cpp /home/ed/Coin3D/coin4/src/fields/SoMFVec4f.cpp /home/ed/Coin3D/coin4/src/fields/SoMFVec4i32.cpp /home/ed/Coin3D/coin4/src/fields/SoMFVec4s.cpp /home/ed/Coin3D/coin4/src/fields/SoMFVec4ub.cpp /home/ed/Coin3D/coin4/src/fields/SoMFVec4ui32.cpp /home/ed/Coin3D/coin4/src/fields/SoMFVec4us.cpp /home/ed/Coin3D/coin4/src/fields/SoSFBitMask.cpp /home/ed/Coin3D/coin4/src/fields/SoSFBool.cpp /home/ed/Coin3D/coin4/src/fields/SoSFBox2d.cpp /home/ed/Coin3D/coin4/src/fields/SoSFBox2f.cpp /home/ed/Coin3D/coin4/src/fields/SoSFBox2i32.cpp /home/ed/Coin3D/coin4/src/fields/SoSFBox2s.cpp /home/ed/Coin3D/coin4/src/fields/SoSFBox3d.cpp /home/ed/Coin3D/coin4/src/fields/SoSFBox3f.cpp /home/ed/Coin3D/coin4/src/fields/SoSFBox3i32.cpp /home/ed/Coin3D/coin4/src/fields/SoSFBox3s.cpp /home/ed/Coin3D/coin4/src/fields/SoSFColor.cpp /home/ed/Coin3D/coin4/src/fields/SoSFColorRGBA.cpp /home/ed/Coin3D/coin4/src/fields/SoSFDouble.cpp /home/ed/Coin3D/coin4/src/fields/SoSFEngine.cpp /home/ed/Coin3D/coin4/src/fields/SoSFEnum.cpp /home/ed/Coin3D/coin4/src/fields/SoSFFloat.cpp /home/ed/Coin3D/coin4/src/fields/SoSField.cpp /home/ed/Coin3D/coin4/src/fields/SoSFImage3.cpp /home/ed/Coin3D/coin4/src/fields/SoSFImage.cpp /home/ed/Coin3D/coin4/src/fields/SoSFInt32.cpp /home/ed/Coin3D/coin4/src/fields/SoSFMatrix.cpp /home/ed/Coin3D/coin4/src/fields/SoSFName.cpp /home/ed/Coin3D/coin4/src/fields/SoSFNode.cpp /home/ed/Coin3D/coin4/src/fields/SoSFPath.cpp /home/ed/Coin3D/coin4/src/fields/SoSFPlane.cpp /home/ed/Coin3D/coin4/src/fields/SoSFRotation.cpp /home/ed/Coin3D/coin4/src/fields/SoSFShort.cpp /home/ed/Coin3D/coin4/src/fields/SoSFString.cpp /home/ed/Coin3D/coin4/src/fields/SoSFTime.cpp /home/ed/Coin3D/coin4/src/fields/SoSFTrigger.cpp /home/ed/Coin3D/coin4/src/fields/SoSFUInt32.cpp /home/ed/Coin3D/coin4/src/fields/SoSFUShort.cpp /home/ed/Coin3D/coin4/src/fields/SoSFVec2b.cpp /home/ed/Coin3D/coin4/src/fields/SoSFVec2d.cpp /home/ed/Coin3D/coin4/src/fields/SoSFVec2f.cpp /home/ed/Coin3D/coin4/src/fields/SoSFVec2i32.cpp /home/ed/Coin3D/coin4/src/fields/SoSFVec2s.cpp /home/ed/Coin3D/coin4/src/fields/SoSFVec3b.cpp /home/ed/Coin3D/coin4/src/fields/SoSFVec3d.cpp /home/ed/Coin3D/coin4/src/fields/SoSFVec3f.cpp /home/ed/Coin3D/coin4/src/fields/SoSFVec3i32.cpp /home/ed/Coin3D/coin4/src/fields/SoSFVec3s.cpp /home/ed/Coin3D/coin4/src/fields/SoSFVec4b.cpp /home/ed/Coin3D/coin4/src/fields/SoSFVec4d.cpp /home/ed/Coin3D/coin4/src/fields/SoSFVec4f.cpp /home/ed/Coin3D/coin4/src/fields/SoSFVec4i32.cpp /home/ed/Coin3D/coin4/src/fields/SoSFVec4s.cpp /home/ed/Coin3D/coin4/src/fields/SoSFVec4ub.cpp /home/ed/Coin3D/coin4/src/fields/SoSFVec4ui32.cpp /home/ed/Coin3D/coin4/src/fields/SoSFVec4us.cpp /home/ed/Coin3D/coin4/src/fonts/fontlib_wrapper.cpp /home/ed/Coin3D/coin4/src/foreignfiles/SoForeignFileKit.cpp /home/ed/Coin3D/coin4/src/foreignfiles/SoSTLFileKit.cpp /home/ed/Coin3D/coin4/src/geo/SoGeoCoordinate.cpp /home/ed/Coin3D/coin4/src/geo/SoGeoElement.cpp /home/ed/Coin3D/coin4/src/geo/SoGeoLocation.cpp /home/ed/Coin3D/coin4/src/geo/SoGeoOrigin.cpp /home/ed/Coin3D/coin4/src/geo/SoGeoSeparator.cpp /home/ed/Coin3D/coin4/src/glue/dl.cpp /home/ed/Coin3D/coin4/src/glue/gl.cpp /home/ed/Coin3D/coin4/src/glue/spidermonkey.cpp /home/ed/Coin3D/coin4/src/hardcopy/HardCopy.cpp /home/ed/Coin3D/coin4/src/hardcopy/PSVectorOutput.cpp /home/ed/Coin3D/coin4/src/hardcopy/VectorizeAction.cpp /home/ed/Coin3D/coin4/src/hardcopy/VectorizePSAction.cpp /home/ed/Coin3D/coin4/src/hardcopy/VectorOutput.cpp /home/ed/Coin3D/coin4/src/io/SoInput.cpp /home/ed/Coin3D/coin4/src/io/SoOutput.cpp /home/ed/Coin3D/coin4/src/io/SoWriterefCounter.cpp /home/ed/Coin3D/coin4/src/lists/SbIntList.cpp /home/ed/Coin3D/coin4/src/lists/SbList.cpp /home/ed/Coin3D/coin4/src/lists/SbPList.cpp /home/ed/Coin3D/coin4/src/lists/SbStringList.cpp /home/ed/Coin3D/coin4/src/lists/SbVec3fList.cpp /home/ed/Coin3D/coin4/src/lists/SoActionMethodList.cpp /home/ed/Coin3D/coin4/src/lists/SoAuditorList.cpp /home/ed/Coin3D/coin4/src/lists/SoBaseList.cpp /home/ed/Coin3D/coin4/src/lists/SoCallbackList.cpp /home/ed/Coin3D/coin4/src/lists/SoDetailList.cpp /home/ed/Coin3D/coin4/src/lists/SoEnabledElementsList.cpp /home/ed/Coin3D/coin4/src/lists/SoEngineList.cpp /home/ed/Coin3D/coin4/src/lists/SoEngineOutputList.cpp /home/ed/Coin3D/coin4/src/lists/SoFieldList.cpp /home/ed/Coin3D/coin4/src/lists/SoNodeList.cpp /home/ed/Coin3D/coin4/src/lists/SoPathList.cpp /home/ed/Coin3D/coin4/src/lists/SoPickedPointList.cpp /home/ed/Coin3D/coin4/src/lists/SoTypeList.cpp /home/ed/Coin3D/coin4/src/manips/commoncode.cpp /home/ed/Coin3D/coin4/src/manips/SoCenterballManip.cpp /home/ed/Coin3D/coin4/src/manips/SoClipPlaneManip.cpp /home/ed/Coin3D/coin4/src/manips/SoDirectionalLightManip.cpp /home/ed/Coin3D/coin4/src/manips/SoHandleBoxManip.cpp /home/ed/Coin3D/coin4/src/manips/SoJackManip.cpp /home/ed/Coin3D/coin4/src/manips/SoPointLightManip.cpp /home/ed/Coin3D/coin4/src/manips/SoSpotLightManip.cpp /home/ed/Coin3D/coin4/src/manips/SoTabBoxManip.cpp /home/ed/Coin3D/coin4/src/manips/SoTrackballManip.cpp /home/ed/Coin3D/coin4/src/manips/SoTransformBoxManip.cpp /home/ed/Coin3D/coin4/src/manips/SoTransformerManip.cpp /home/ed/Coin3D/coin4/src/manips/SoTransformManip.cpp /home/ed/Coin3D/coin4/src/misc/CoinResources.cpp /home/ed/Coin3D/coin4/src/misc/SoAudioDevice.cpp /home/ed/Coin3D/coin4/src/misc/SoBase.cpp /home/ed/Coin3D/coin4/src/misc/SoChildList.cpp /home/ed/Coin3D/coin4/src/misc/SoCompactPathList.cpp /home/ed/Coin3D/coin4/src/misc/SoContextHandler.cpp /home/ed/Coin3D/coin4/src/misc/SoDB.cpp /home/ed/Coin3D/coin4/src/misc/SoDebug.cpp /home/ed/Coin3D/coin4/src/misc/SoEventManager.cpp /home/ed/Coin3D/coin4/src/misc/SoFullPath.cpp /home/ed/Coin3D/coin4/src/misc/SoGlyph.cpp /home/ed/Coin3D/coin4/src/misc/SoInteraction.cpp /home/ed/Coin3D/coin4/src/misc/SoJavaScriptEngine.cpp /home/ed/Coin3D/coin4/src/misc/SoLightPath.cpp /home/ed/Coin3D/coin4/src/misc/SoLockManager.cpp /home/ed/Coin3D/coin4/src/misc/SoNormalGenerator.cpp /home/ed/Coin3D/coin4/src/misc/SoNotification.cpp /home/ed/Coin3D/coin4/src/misc/SoNotRec.cpp /home/ed/Coin3D/coin4/src/misc/SoPath.cpp /home/ed/Coin3D/coin4/src/misc/SoPickedPoint.cpp /home/ed/Coin3D/coin4/src/misc/SoPrimitiveVertex.cpp /home/ed/Coin3D/coin4/src/misc/SoProto.cpp /home/ed/Coin3D/coin4/src/misc/SoProtoInstance.cpp /home/ed/Coin3D/coin4/src/misc/SoSceneManager.cpp /home/ed/Coin3D/coin4/src/misc/SoShaderGenerator.cpp /home/ed/Coin3D/coin4/src/misc/SoState.cpp /home/ed/Coin3D/coin4/src/misc/SoTempPath.cpp /home/ed/Coin3D/coin4/src/misc/SoType.cpp /home/ed/Coin3D/coin4/src/navigation/SoScXMLDollyTarget.cpp /home/ed/Coin3D/coin4/src/navigation/SoScXMLFlightControlTarget.cpp /home/ed/Coin3D/coin4/src/navigation/SoScXMLMiscTarget.cpp /home/ed/Coin3D/coin4/src/navigation/SoScXMLMotionTarget.cpp /home/ed/Coin3D/coin4/src/navigation/SoScXMLNavigation.cpp /home/ed/Coin3D/coin4/src/navigation/SoScXMLNavigationTarget.cpp /home/ed/Coin3D/coin4/src/navigation/SoScXMLPanTarget.cpp /home/ed/Coin3D/coin4/src/navigation/SoScXMLRotateTarget.cpp /home/ed/Coin3D/coin4/src/navigation/SoScXMLSeekTarget.cpp /home/ed/Coin3D/coin4/src/navigation/SoScXMLSpinTarget.cpp /home/ed/Coin3D/coin4/src/navigation/SoScXMLZoomTarget.cpp /home/ed/Coin3D/coin4/src/nodekits/SoAppearanceKit.cpp /home/ed/Coin3D/coin4/src/nodekits/SoBaseKit.cpp /home/ed/Coin3D/coin4/src/nodekits/SoCameraKit.cpp /home/ed/Coin3D/coin4/src/nodekits/SoInteractionKit.cpp /home/ed/Coin3D/coin4/src/nodekits/SoLightKit.cpp /home/ed/Coin3D/coin4/src/nodekits/SoNodekitCatalog.cpp /home/ed/Coin3D/coin4/src/nodekits/SoNodeKit.cpp /home/ed/Coin3D/coin4/src/nodekits/SoNodeKitListPart.cpp /home/ed/Coin3D/coin4/src/nodekits/SoNodeKitPath.cpp /home/ed/Coin3D/coin4/src/nodekits/SoSceneKit.cpp /home/ed/Coin3D/coin4/src/nodekits/SoSeparatorKit.cpp /home/ed/Coin3D/coin4/src/nodekits/SoShapeKit.cpp /home/ed/Coin3D/coin4/src/nodekits/SoWrapperKit.cpp /home/ed/Coin3D/coin4/src/nodes/SoAnnotation.cpp /home/ed/Coin3D/coin4/src/nodes/SoAntiSquish.cpp /home/ed/Coin3D/coin4/src/nodes/SoArray.cpp /home/ed/Coin3D/coin4/src/nodes/SoBaseColor.cpp /home/ed/Coin3D/coin4/src/nodes/SoBlinker.cpp /home/ed/Coin3D/coin4/src/nodes/SoBumpMapCoordinate.cpp /home/ed/Coin3D/coin4/src/nodes/SoBumpMap.cpp /home/ed/Coin3D/coin4/src/nodes/SoBumpMapTransform.cpp /home/ed/Coin3D/coin4/src/nodes/SoCacheHint.cpp /home/ed/Coin3D/coin4/src/nodes/SoCallback.cpp /home/ed/Coin3D/coin4/src/nodes/SoCamera.cpp /home/ed/Coin3D/coin4/src/nodes/SoClipPlane.cpp /home/ed/Coin3D/coin4/src/nodes/SoColorIndex.cpp /home/ed/Coin3D/coin4/src/nodes/SoComplexity.cpp /home/ed/Coin3D/coin4/src/nodes/SoCoordinate3.cpp /home/ed/Coin3D/coin4/src/nodes/SoCoordinate4.cpp /home/ed/Coin3D/coin4/src/nodes/SoDepthBuffer.cpp /home/ed/Coin3D/coin4/src/nodes/SoDirectionalLight.cpp /home/ed/Coin3D/coin4/src/nodes/SoDrawStyle.cpp /home/ed/Coin3D/coin4/src/nodes/SoEnvironment.cpp /home/ed/Coin3D/coin4/src/nodes/SoEventCallback.cpp /home/ed/Coin3D/coin4/src/nodes/SoExtSelection.cpp /home/ed/Coin3D/coin4/src/nodes/SoFile.cpp /home/ed/Coin3D/coin4/src/nodes/SoFont.cpp /home/ed/Coin3D/coin4/src/nodes/SoFontStyle.cpp /home/ed/Coin3D/coin4/src/nodes/SoFrustumCamera.cpp /home/ed/Coin3D/coin4/src/nodes/SoGroup.cpp /home/ed/Coin3D/coin4/src/nodes/SoInfo.cpp /home/ed/Coin3D/coin4/src/nodes/SoLabel.cpp /home/ed/Coin3D/coin4/src/nodes/SoLevelOfDetail.cpp /home/ed/Coin3D/coin4/src/nodes/SoLight.cpp /home/ed/Coin3D/coin4/src/nodes/SoLightModel.cpp /home/ed/Coin3D/coin4/src/nodes/SoLinearProfile.cpp /home/ed/Coin3D/coin4/src/nodes/SoListener.cpp /home/ed/Coin3D/coin4/src/nodes/SoLocateHighlight.cpp /home/ed/Coin3D/coin4/src/nodes/SoLOD.cpp /home/ed/Coin3D/coin4/src/nodes/SoMaterialBinding.cpp /home/ed/Coin3D/coin4/src/nodes/SoMaterial.cpp /home/ed/Coin3D/coin4/src/nodes/SoMatrixTransform.cpp /home/ed/Coin3D/coin4/src/nodes/SoMultipleCopy.cpp /home/ed/Coin3D/coin4/src/nodes/SoNode.cpp /home/ed/Coin3D/coin4/src/nodes/SoNormalBinding.cpp /home/ed/Coin3D/coin4/src/nodes/SoNormal.cpp /home/ed/Coin3D/coin4/src/nodes/SoNurbsProfile.cpp /home/ed/Coin3D/coin4/src/nodes/SoOrthographicCamera.cpp /home/ed/Coin3D/coin4/src/nodes/SoPackedColor.cpp /home/ed/Coin3D/coin4/src/nodes/SoPathSwitch.cpp /home/ed/Coin3D/coin4/src/nodes/SoPendulum.cpp /home/ed/Coin3D/coin4/src/nodes/SoPerspectiveCamera.cpp /home/ed/Coin3D/coin4/src/nodes/SoPickStyle.cpp /home/ed/Coin3D/coin4/src/nodes/SoPointLight.cpp /home/ed/Coin3D/coin4/src/nodes/SoPolygonOffset.cpp /home/ed/Coin3D/coin4/src/nodes/SoProfileCoordinate2.cpp /home/ed/Coin3D/coin4/src/nodes/SoProfileCoordinate3.cpp /home/ed/Coin3D/coin4/src/nodes/SoProfile.cpp /home/ed/Coin3D/coin4/src/nodes/SoResetTransform.cpp /home/ed/Coin3D/coin4/src/nodes/SoRotation.cpp /home/ed/Coin3D/coin4/src/nodes/SoRotationXYZ.cpp /home/ed/Coin3D/coin4/src/nodes/SoRotor.cpp /home/ed/Coin3D/coin4/src/nodes/SoScale.cpp /home/ed/Coin3D/coin4/src/nodes/SoSceneTexture2.cpp /home/ed/Coin3D/coin4/src/nodes/SoSceneTextureCubeMap.cpp /home/ed/Coin3D/coin4/src/nodes/SoSelection.cpp /home/ed/Coin3D/coin4/src/nodes/SoSeparator.cpp /home/ed/Coin3D/coin4/src/nodes/SoShapeHints.cpp /home/ed/Coin3D/coin4/src/nodes/SoShuttle.cpp /home/ed/Coin3D/coin4/src/nodes/SoSpotLight.cpp /home/ed/Coin3D/coin4/src/nodes/SoSurroundScale.cpp /home/ed/Coin3D/coin4/src/nodes/SoSwitch.cpp /home/ed/Coin3D/coin4/src/nodes/SoTexture2.cpp /home/ed/Coin3D/coin4/src/nodes/SoTexture2Transform.cpp /home/ed/Coin3D/coin4/src/nodes/SoTexture3.cpp /home/ed/Coin3D/coin4/src/nodes/SoTexture3Transform.cpp /home/ed/Coin3D/coin4/src/nodes/SoTextureCombine.cpp /home/ed/Coin3D/coin4/src/nodes/SoTextureCoordinate2.cpp /home/ed/Coin3D/coin4/src/nodes/SoTextureCoordinate3.cpp /home/ed/Coin3D/coin4/src/nodes/SoTextureCoordinateBinding.cpp /home/ed/Coin3D/coin4/src/nodes/SoTextureCoordinateCube.cpp /home/ed/Coin3D/coin4/src/nodes/SoTextureCoordinateCylinder.cpp /home/ed/Coin3D/coin4/src/nodes/SoTextureCoordinateDefault.cpp /home/ed/Coin3D/coin4/src/nodes/SoTextureCoordinateEnvironment.cpp /home/ed/Coin3D/coin4/src/nodes/SoTextureCoordinateFunction.cpp /home/ed/Coin3D/coin4/src/nodes/SoTextureCoordinateNormalMap.cpp /home/ed/Coin3D/coin4/src/nodes/SoTextureCoordinateObject.cpp /home/ed/Coin3D/coin4/src/nodes/SoTextureCoordinatePlane.cpp /home/ed/Coin3D/coin4/src/nodes/SoTextureCoordinateReflectionMap.cpp /home/ed/Coin3D/coin4/src/nodes/SoTextureCoordinateSphere.cpp /home/ed/Coin3D/coin4/src/nodes/SoTexture.cpp /home/ed/Coin3D/coin4/src/nodes/SoTextureCubeMap.cpp /home/ed/Coin3D/coin4/src/nodes/SoTextureMatrixTransform.cpp /home/ed/Coin3D/coin4/src/nodes/SoTextureScalePolicy.cpp /home/ed/Coin3D/coin4/src/nodes/SoTextureUnit.cpp /home/ed/Coin3D/coin4/src/nodes/SoTransformation.cpp /home/ed/Coin3D/coin4/src/nodes/SoTransform.cpp /home/ed/Coin3D/coin4/src/nodes/SoTransformSeparator.cpp /home/ed/Coin3D/coin4/src/nodes/SoTranslation.cpp /home/ed/Coin3D/coin4/src/nodes/SoTransparencyType.cpp /home/ed/Coin3D/coin4/src/nodes/SoUnits.cpp /home/ed/Coin3D/coin4/src/nodes/SoVertexAttributeBinding.cpp /home/ed/Coin3D/coin4/src/nodes/SoVertexAttribute.cpp /home/ed/Coin3D/coin4/src/nodes/SoVertexProperty.cpp /home/ed/Coin3D/coin4/src/nodes/SoWWWAnchor.cpp /home/ed/Coin3D/coin4/src/nodes/SoWWWInline.cpp /home/ed/Coin3D/coin4/src/profiler/SbProfilingData.cpp /home/ed/Coin3D/coin4/src/profiler/SoNodeVisualize.cpp /home/ed/Coin3D/coin4/src/profiler/SoProfiler.cpp /home/ed/Coin3D/coin4/src/profiler/SoProfilerElement.cpp /home/ed/Coin3D/coin4/src/profiler/SoProfilerOverlayKit.cpp /home/ed/Coin3D/coin4/src/profiler/SoProfilerStats.cpp /home/ed/Coin3D/coin4/src/profiler/SoProfilingReportGenerator.cpp /home/ed/Coin3D/coin4/src/projectors/SbCylinderPlaneProjector.cpp /home/ed/Coin3D/coin4/src/projectors/SbCylinderProjector.cpp /home/ed/Coin3D/coin4/src/projectors/SbCylinderSectionProjector.cpp /home/ed/Coin3D/coin4/src/projectors/SbCylinderSheetProjector.cpp /home/ed/Coin3D/coin4/src/projectors/SbLineProjector.cpp /home/ed/Coin3D/coin4/src/projectors/SbPlaneProjector.cpp /home/ed/Coin3D/coin4/src/projectors/SbProjector.cpp /home/ed/Coin3D/coin4/src/projectors/SbSpherePlaneProjector.cpp /home/ed/Coin3D/coin4/src/projectors/SbSphereProjector.cpp /home/ed/Coin3D/coin4/src/projectors/SbSphereSectionProjector.cpp /home/ed/Coin3D/coin4/src/projectors/SbSphereSheetProjector.cpp /home/ed/Coin3D/coin4/src/rendering/SoGLBigImage.cpp /home/ed/Coin3D/coin4/src/rendering/SoGL.cpp /home/ed/Coin3D/coin4/src/rendering/SoGLCubeMapImage.cpp /home/ed/Coin3D/coin4/src/rendering/SoGLDriverDatabase.cpp /home/ed/Coin3D/coin4/src/rendering/SoGLImage.cpp /home/ed/Coin3D/coin4/src/rendering/SoOffscreenRenderer.cpp /home/ed/Coin3D/coin4/src/rendering/SoRenderManager.cpp /home/ed/Coin3D/coin4/src/rendering/SoVBO.cpp /home/ed/Coin3D/coin4/src/rendering/SoVertexArrayIndexer.cpp /home/ed/Coin3D/coin4/src/scxml/ScXMLAbstractStateElt.cpp /home/ed/Coin3D/coin4/src/scxml/ScXMLAnchorElt.cpp /home/ed/Coin3D/coin4/src/scxml/ScXMLAssignElt.cpp /home/ed/Coin3D/coin4/src/scxml/ScXMLContentElt.cpp /home/ed/Coin3D/coin4/src/scxml/ScXML.cpp /home/ed/Coin3D/coin4/src/scxml/ScXMLDataElt.cpp /home/ed/Coin3D/coin4/src/scxml/ScXMLDataModelElt.cpp /home/ed/Coin3D/coin4/src/scxml/ScXMLDocument.cpp /home/ed/Coin3D/coin4/src/scxml/ScXMLECMAScriptEvaluator.cpp /home/ed/Coin3D/coin4/src/scxml/ScXMLElseElt.cpp /home/ed/Coin3D/coin4/src/scxml/ScXMLElseIfElt.cpp /home/ed/Coin3D/coin4/src/scxml/ScXMLElt.cpp /home/ed/Coin3D/coin4/src/scxml/ScXMLEvaluator.cpp /home/ed/Coin3D/coin4/src/scxml/ScXMLEvent.cpp /home/ed/Coin3D/coin4/src/scxml/ScXMLEventElt.cpp /home/ed/Coin3D/coin4/src/scxml/ScXMLEventTarget.cpp /home/ed/Coin3D/coin4/src/scxml/ScXMLExecutableElt.cpp /home/ed/Coin3D/coin4/src/scxml/ScXMLFinalElt.cpp /home/ed/Coin3D/coin4/src/scxml/ScXMLFinalizeElt.cpp /home/ed/Coin3D/coin4/src/scxml/ScXMLHistoryElt.cpp /home/ed/Coin3D/coin4/src/scxml/ScXMLIfElt.cpp /home/ed/Coin3D/coin4/src/scxml/ScXMLInitialElt.cpp /home/ed/Coin3D/coin4/src/scxml/ScXMLInvokeElt.cpp /home/ed/Coin3D/coin4/src/scxml/ScXMLLogElt.cpp /home/ed/Coin3D/coin4/src/scxml/ScXMLMinimumEvaluator.cpp /home/ed/Coin3D/coin4/src/scxml/ScXMLObject.cpp /home/ed/Coin3D/coin4/src/scxml/ScXMLOnEntryElt.cpp /home/ed/Coin3D/coin4/src/scxml/ScXMLOnExitElt.cpp /home/ed/Coin3D/coin4/src/scxml/ScXMLParallelElt.cpp /home/ed/Coin3D/coin4/src/scxml/ScXMLParamElt.cpp /home/ed/Coin3D/coin4/src/scxml/ScXMLScriptElt.cpp /home/ed/Coin3D/coin4/src/scxml/ScXMLScxmlElt.cpp /home/ed/Coin3D/coin4/src/scxml/ScXMLSendElt.cpp /home/ed/Coin3D/coin4/src/scxml/ScXMLStateElt.cpp /home/ed/Coin3D/coin4/src/scxml/ScXMLStateMachine.cpp /home/ed/Coin3D/coin4/src/scxml/ScXMLTransitionElt.cpp /home/ed/Coin3D/coin4/src/scxml/ScXMLValidateElt.cpp /home/ed/Coin3D/coin4/src/scxml/ScXMLXPathEvaluator.cpp /home/ed/Coin3D/coin4/src/sensors/SoAlarmSensor.cpp /home/ed/Coin3D/coin4/src/sensors/SoDataSensor.cpp /home/ed/Coin3D/coin4/src/sensors/SoDelayQueueSensor.cpp /home/ed/Coin3D/coin4/src/sensors/SoFieldSensor.cpp /home/ed/Coin3D/coin4/src/sensors/SoIdleSensor.cpp /home/ed/Coin3D/coin4/src/sensors/SoNodeSensor.cpp /home/ed/Coin3D/coin4/src/sensors/SoOneShotSensor.cpp /home/ed/Coin3D/coin4/src/sensors/SoPathSensor.cpp /home/ed/Coin3D/coin4/src/sensors/SoSensor.cpp /home/ed/Coin3D/coin4/src/sensors/SoSensorManager.cpp /home/ed/Coin3D/coin4/src/sensors/SoTimerQueueSensor.cpp /home/ed/Coin3D/coin4/src/sensors/SoTimerSensor.cpp /home/ed/Coin3D/coin4/src/shaders/SoFragmentShader.cpp /home/ed/Coin3D/coin4/src/shaders/SoGeometryShader.cpp /home/ed/Coin3D/coin4/src/shaders/SoShader.cpp /home/ed/Coin3D/coin4/src/shaders/SoShaderObject.cpp /home/ed/Coin3D/coin4/src/shaders/SoShaderParameter.cpp /home/ed/Coin3D/coin4/src/shaders/SoShaderProgram.cpp /home/ed/Coin3D/coin4/src/shaders/SoVertexShader.cpp /home/ed/Coin3D/coin4/src/shadows/SoGLShadowCullingElement.cpp /home/ed/Coin3D/coin4/src/shadows/SoShadowCulling.cpp /home/ed/Coin3D/coin4/src/shadows/SoShadowDirectionalLight.cpp /home/ed/Coin3D/coin4/src/shadows/SoShadowGroup.cpp /home/ed/Coin3D/coin4/src/shadows/SoShadowSpotLight.cpp /home/ed/Coin3D/coin4/src/shadows/SoShadowStyle.cpp /home/ed/Coin3D/coin4/src/shadows/SoShadowStyleElement.cpp /home/ed/Coin3D/coin4/src/shapenodes/SoAsciiText.cpp /home/ed/Coin3D/coin4/src/shapenodes/SoCone.cpp /home/ed/Coin3D/coin4/src/shapenodes/SoCube.cpp /home/ed/Coin3D/coin4/src/shapenodes/SoCylinder.cpp /home/ed/Coin3D/coin4/src/shapenodes/SoFaceSet.cpp /home/ed/Coin3D/coin4/src/shapenodes/SoImage.cpp /home/ed/Coin3D/coin4/src/shapenodes/SoIndexedFaceSet.cpp /home/ed/Coin3D/coin4/src/shapenodes/SoIndexedLineSet.cpp /home/ed/Coin3D/coin4/src/shapenodes/SoIndexedMarkerSet.cpp /home/ed/Coin3D/coin4/src/shapenodes/SoIndexedNurbsCurve.cpp /home/ed/Coin3D/coin4/src/shapenodes/SoIndexedNurbsSurface.cpp /home/ed/Coin3D/coin4/src/shapenodes/SoIndexedPointSet.cpp /home/ed/Coin3D/coin4/src/shapenodes/SoIndexedShape.cpp /home/ed/Coin3D/coin4/src/shapenodes/SoIndexedTriangleStripSet.cpp /home/ed/Coin3D/coin4/src/shapenodes/SoLineSet.cpp /home/ed/Coin3D/coin4/src/shapenodes/SoMarkerSet.cpp /home/ed/Coin3D/coin4/src/shapenodes/SoNonIndexedShape.cpp /home/ed/Coin3D/coin4/src/shapenodes/SoNurbsCurve.cpp /home/ed/Coin3D/coin4/src/shapenodes/SoNurbsSurface.cpp /home/ed/Coin3D/coin4/src/shapenodes/SoPointSet.cpp /home/ed/Coin3D/coin4/src/shapenodes/SoQuadMesh.cpp /home/ed/Coin3D/coin4/src/shapenodes/SoShape.cpp /home/ed/Coin3D/coin4/src/shapenodes/SoSphere.cpp /home/ed/Coin3D/coin4/src/shapenodes/SoText2.cpp /home/ed/Coin3D/coin4/src/shapenodes/SoText3.cpp /home/ed/Coin3D/coin4/src/shapenodes/SoTriangleStripSet.cpp /home/ed/Coin3D/coin4/src/shapenodes/SoVertexShape.cpp /home/ed/Coin3D/coin4/src/soscxml/ScXMLCoinEvaluator.cpp /home/ed/Coin3D/coin4/src/soscxml/SoScXMLEvent.cpp /home/ed/Coin3D/coin4/src/soscxml/SoScXMLStateMachine.cpp /home/ed/Coin3D/coin4/src/threads/barrier.cpp /home/ed/Coin3D/coin4/src/threads/condvar.cpp /home/ed/Coin3D/coin4/src/threads/fifo.cpp /home/ed/Coin3D/coin4/src/threads/mutex.cpp /home/ed/Coin3D/coin4/src/threads/recmutex.cpp /home/ed/Coin3D/coin4/src/threads/rwmutex.cpp /home/ed/Coin3D/coin4/src/threads/sched.cpp /home/ed/Coin3D/coin4/src/threads/schedp.h /home/ed/Coin3D/coin4/src/threads/storage.cpp /home/ed/Coin3D/coin4/src/threads/sync.cpp /home/ed/Coin3D/coin4/src/threads/thread.cpp /home/ed/Coin3D/coin4/src/threads/worker.cpp /home/ed/Coin3D/coin4/src/threads/wpool.cpp /home/ed/Coin3D/coin4/src/tidbits.cpp /home/ed/Coin3D/coin4/src/upgraders/SoPackedColorV20.cpp /home/ed/Coin3D/coin4/src/upgraders/SoShapeHintsV10.cpp /home/ed/Coin3D/coin4/src/upgraders/SoUpgrader.cpp /home/ed/Coin3D/coin4/src/vrml97/Anchor.cpp /home/ed/Coin3D/coin4/src/vrml97/Appearance.cpp /home/ed/Coin3D/coin4/src/vrml97/AudioClip.cpp /home/ed/Coin3D/coin4/src/vrml97/Background.cpp /home/ed/Coin3D/coin4/src/vrml97/Billboard.cpp /home/ed/Coin3D/coin4/src/vrml97/Box.cpp /home/ed/Coin3D/coin4/src/vrml97/Collision.cpp /home/ed/Coin3D/coin4/src/vrml97/Color.cpp /home/ed/Coin3D/coin4/src/vrml97/ColorInterpolator.cpp /home/ed/Coin3D/coin4/src/vrml97/Cone.cpp /home/ed/Coin3D/coin4/src/vrml97/Coordinate.cpp /home/ed/Coin3D/coin4/src/vrml97/CoordinateInterpolator.cpp /home/ed/Coin3D/coin4/src/vrml97/Cylinder.cpp /home/ed/Coin3D/coin4/src/vrml97/CylinderSensor.cpp /home/ed/Coin3D/coin4/src/vrml97/DirectionalLight.cpp /home/ed/Coin3D/coin4/src/vrml97/DragSensor.cpp /home/ed/Coin3D/coin4/src/vrml97/ElevationGrid.cpp /home/ed/Coin3D/coin4/src/vrml97/Extrusion.cpp /home/ed/Coin3D/coin4/src/vrml97/Fog.cpp /home/ed/Coin3D/coin4/src/vrml97/FontStyle.cpp /home/ed/Coin3D/coin4/src/vrml97/Geometry.cpp /home/ed/Coin3D/coin4/src/vrml97/Group.cpp /home/ed/Coin3D/coin4/src/vrml97/ImageTexture.cpp /home/ed/Coin3D/coin4/src/vrml97/IndexedFaceSet.cpp /home/ed/Coin3D/coin4/src/vrml97/IndexedLine.cpp /home/ed/Coin3D/coin4/src/vrml97/IndexedLineSet.cpp /home/ed/Coin3D/coin4/src/vrml97/IndexedShape.cpp /home/ed/Coin3D/coin4/src/vrml97/Inline.cpp /home/ed/Coin3D/coin4/src/vrml97/Interpolator.cpp /home/ed/Coin3D/coin4/src/vrml97/Light.cpp /home/ed/Coin3D/coin4/src/vrml97/LOD.cpp /home/ed/Coin3D/coin4/src/vrml97/Material.cpp /home/ed/Coin3D/coin4/src/vrml97/MovieTexture.cpp /home/ed/Coin3D/coin4/src/vrml97/NavigationInfo.cpp /home/ed/Coin3D/coin4/src/vrml97/Normal.cpp /home/ed/Coin3D/coin4/src/vrml97/NormalInterpolator.cpp /home/ed/Coin3D/coin4/src/vrml97/OrientationInterpolator.cpp /home/ed/Coin3D/coin4/src/vrml97/Parent.cpp /home/ed/Coin3D/coin4/src/vrml97/PixelTexture.cpp /home/ed/Coin3D/coin4/src/vrml97/PlaneSensor.cpp /home/ed/Coin3D/coin4/src/vrml97/PointLight.cpp /home/ed/Coin3D/coin4/src/vrml97/PointSet.cpp /home/ed/Coin3D/coin4/src/vrml97/PositionInterpolator.cpp /home/ed/Coin3D/coin4/src/vrml97/ProximitySensor.cpp /home/ed/Coin3D/coin4/src/vrml97/ScalarInterpolator.cpp /home/ed/Coin3D/coin4/src/vrml97/Script.cpp /home/ed/Coin3D/coin4/src/vrml97/Sensor.cpp /home/ed/Coin3D/coin4/src/vrml97/Shape.cpp /home/ed/Coin3D/coin4/src/vrml97/Sound.cpp /home/ed/Coin3D/coin4/src/vrml97/Sphere.cpp /home/ed/Coin3D/coin4/src/vrml97/SphereSensor.cpp /home/ed/Coin3D/coin4/src/vrml97/SpotLight.cpp /home/ed/Coin3D/coin4/src/vrml97/Switch.cpp /home/ed/Coin3D/coin4/src/vrml97/Text.cpp /home/ed/Coin3D/coin4/src/vrml97/TextureCoordinate.cpp /home/ed/Coin3D/coin4/src/vrml97/Texture.cpp /home/ed/Coin3D/coin4/src/vrml97/TextureTransform.cpp /home/ed/Coin3D/coin4/src/vrml97/TimeSensor.cpp /home/ed/Coin3D/coin4/src/vrml97/TouchSensor.cpp /home/ed/Coin3D/coin4/src/vrml97/Transform.cpp /home/ed/Coin3D/coin4/src/vrml97/VertexLine.cpp /home/ed/Coin3D/coin4/src/vrml97/VertexPoint.cpp /home/ed/Coin3D/coin4/src/vrml97/VertexShape.cpp /home/ed/Coin3D/coin4/src/vrml97/Viewpoint.cpp /home/ed/Coin3D/coin4/src/vrml97/VisibilitySensor.cpp /home/ed/Coin3D/coin4/src/vrml97/WorldInfo.cpp /home/ed/Coin3D/coin4/src/xml/attribute.cpp /home/ed/Coin3D/coin4/src/xml/document.cpp /home/ed/Coin3D/coin4/src/xml/element.cpp /home/ed/Coin3D/coin4/src/xml/types.cpp
DSUFFIX = d
DSYMUTIL = 
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
F77 = f77
FFLAGS = -g -O2
GREP = /bin/grep
HACKING_COMPACT_BUILD_FALSE = 
HACKING_COMPACT_BUILD_TRUE = #
HACKING_DYNAMIC_MODULES_FALSE = 
HACKING_DYNAMIC_MODULES_TRUE = #
HAVE_3DS_IMPORT_CAPABILITIES = 0
HAVE_DRAGGERS = 1
HAVE_FONTCONFIG_FALSE = 
HAVE_FONTCONFIG_TRUE = #
HAVE_FREETYPE_FALSE = 
HAVE_FREETYPE_TRUE = #
HAVE_JAVASCRIPT = 1
HAVE_MANIPULATORS = 1
HAVE_NODEKITS = 1
HAVE_SOUND = 1
HAVE_SPIDERMONKEY_VIA_LINKTIME_LINKING_FALSE = 
HAVE_SPIDERMONKEY_VIA_LINKTIME_LINKING_TRUE = #
HAVE_SUPERGLU = 0
HAVE_THREADS = 1
HAVE_THREADSAFE = 0
HAVE_VRML97 = 1
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBEXT = .so
LIBFLAGS = 
LIBOBJS = 
LIBS = -lGL -lXext -lSM -lICE -lX11 -ldl -lpthread
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
LT_AGE = 0
LT_CURRENT = 100
LT_REVISION = 0
MACOSX_10_2FF = false
MACOSX_10_2FF_FALSE = 
MACOSX_10_2FF_TRUE = #
MACOSX_10_3FF_FALSE = 
MACOSX_10_3FF_TRUE = #
MACOSX_DEPLOYMENT_TARGET = 
MACOSX_FALSE = 
MACOSX_NAME = 
MACOSX_PACKAGEABLE_FALSE = 
MACOSX_PACKAGEABLE_TRUE = #
MACOSX_TRUE = #
MACOSX_USE_DYNAMIC_LOOKUP_FALSE = 
MACOSX_USE_DYNAMIC_LOOKUP_TRUE = #
MAC_FRAMEWORK = false
MAC_FRAMEWORK_FALSE = 
MAC_FRAMEWORK_NAME = Inventor
MAC_FRAMEWORK_PREFIX = /Library/Frameworks
MAC_FRAMEWORK_TRUE = #
MAC_FRAMEWORK_VERSION = C
MAINT = #
MAINTAINER_MODE_FALSE = 
MAINTAINER_MODE_TRUE = #
MAKEINFO = ${SHELL} /home/ed/Coin3D/coin4/cfg/missing --run makeinfo
NMEDIT = 
OBJEXT = o
PACKAGE = Coin
PACKAGE_BUGREPORT = coin-support@coin3d.org
PACKAGE_NAME = Coin
PACKAGE_STRING = Coin 4.0.0a
PACKAGE_TARNAME = coin
PACKAGE_URL = 
PACKAGE_VERSION = 4.0.0a
PATH_SEPARATOR = :
RANLIB = ranlib
RFC822_DATE = Sat, 27 May 2017 19:45:38 -0400
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
SIM_INCLUDE_GLEXT_H = #include <GL/glext.h>
SIM_INCLUDE_GLU_H = #include <GL/glu.h>
SIM_INCLUDE_GL_H = #include <GL/gl.h>
SIM_INCLUDE_WINDOWS_H = /* #include <windows.h> - not needed on system */
STRIP = strip
SUFFIX = 
SUPERGLUPREFIX = Super
USE_SYSTEM_EXPAT_FALSE = 
USE_SYSTEM_EXPAT_TRUE = #
VERSION = 5.0.0a
WIN_PACKAGEABLE_FALSE = 
WIN_PACKAGEABLE_TRUE = #
XMKMF = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS =  -lSM -lICE
ac_compiler_gnu = yes
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = f77
ac_unique_file = src/misc/SoDB.cpp
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
cmp_avail = Yes
coin_build_dir = /home/ed/Coin3D/coin4_build
coin_configure_date = 20170527
coin_html_dir = /home/ed/Coin3D/coin4_build/html
coin_man_dir = /home/ed/Coin3D/coin4_build/man
coin_src_dir = /home/ed/Coin3D/coin4
coin_w32_build_dir = /home/ed/Coin3D/coin4_build
coin_w32_src_dir = /home/ed/Coin3D/coin4
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
frameworkdir = 
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${prefix}/share/doc/coin/html
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = /home/ed/Coin3D/coin4/cfg/install-sh
ivincludedir = ${prefix}/include
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = mkdir -p -- .
nop = 
oldincludedir = /usr/include
path_tag = 
pdfdir = ${docdir}
prefix = /home/ed/Coin3D/coin4_install
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sim_ac_doxygen_exe = 
sim_ac_dpkg_buildpackage_exe = /usr/bin/dpkg-buildpackage
sim_ac_makensis_exe = false
sim_ac_packagemaker_app = false
sim_ac_perl_exe = /usr/bin/perl
sim_ac_relative_src_dir = ../coin4
sim_ac_relative_src_dir_p = true
sim_ac_simage_configcmd = 
subdirs = 
sysconfdir = ${prefix}/etc
target = x86_64-unknown-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = unknown
CLEANFILES = \
	coin5.pdb \
	coin5.dll \
	coin5.exp \
	vc*.pdb


# **************************************************************************
# Extensions which might be present.
noinst_HEADERS = \
        unconfig.h \
        tidbitsp.h \
        coindefs.h \
        SbBasicP.h

EXTRADIST = \
        update-config.sh \
        Make-Common.tpl

ExtraIncludeDirs = -I$(top_srcdir)/include/Inventor/annex -I$(top_builddir)
SUPERGLUDIR = 
#SUPERGLUDIR = extensions/superglu
SUPERGLULIBADD = 
#SUPERGLULIBADD = $(SUPERGLUDIR)/lib${SUPERGLUPREFIX}GLU.la
SUPERGLULSTADD = 
#SUPERGLULSTADD = $(SUPERGLUDIR)/${SUPERGLUPREFIX}GLU.lst
SUBDIRS = \
	extensions xml actions base bundles caches details draggers elements \
	engines errors events fields fonts glue io manips misc rendering lists nodekits \
	navigation nodes shapenodes projectors sensors upgraders \
	3ds collision hardcopy shadows geo threads shaders profiler \
	vrml97 foreignfiles scxml soscxml doc .


# **************************************************************************
#SUBDIRS = 
DEFAULT_INCLUDES = -I$(top_builddir)/include -I$(top_srcdir)/include -I$(top_builddir)/src -I$(top_srcdir)/src $(ExtraIncludeDirs)

# **************************************************************************
#lib_LIBRARIES = coin5.lib
lib_LTLIBRARIES = libCoin.la

# hack to change libdir value when installing Mac OS X compiler framework
#libdir = $(MAC_FRAMEWORK_PREFIX)/$(MAC_FRAMEWORK_NAME).framework/Versions/$(MAC_FRAMEWORK_VERSION)/Libraries
libCoin_la_LIBADD = actions/libactions.la base/libbase.la       \
	bundles/libbundles.la caches/libcaches.la                       \
	elements/libelements.la elements/GL/libglelements.la            \
	engines/libengines.la errors/liberrors.la events/libevents.la   \
	fields/libfields.la fonts/libfonts.la glue/libglue.la           \
	io/libio.la misc/libmisc.la rendering/librendering.la           \
	lists/liblists.la nodekits/libnodekits.la nodes/libnodes.la     \
	shapenodes/libshapenodes.la projectors/libprojectors.la         \
	sensors/libsensors.la details/libdetails.la                     \
	draggers/libdraggers.la manips/libmanips.la                     \
	upgraders/libupgraders.la navigation/libnavigation.la           \
	3ds/libformat3ds.la collision/libcollision.la                   \
	hardcopy/libhardcopy.la threads/libthreads.la                   \
	shaders/libshaders.la shadows/libshadows.la geo/libgeo.la       \
	foreignfiles/libforeignfiles.la xml/libxml.la                   \
	xml/expat/libexpat.la profiler/libprofiler.la                   \
	vrml97/libvrml97.la scxml/libscxml.la soscxml/libsoscxml.la $(SUPERGLULIBADD)

#libCoin_la_LIBADD = 

# **************************************************************************
#libCoin_la_LIBADD = 
RegularSources = \
	tidbits.cpp


# **************************************************************************
# Source code files for local build & dist.
#RegularSources = \
#	actions/all-actions-cpp.cpp \
#	base/all-base-cpp.cpp \
#	bundles/all-bundles-cpp.cpp \
#	caches/all-caches-cpp.cpp \
#	elements/all-elements-cpp.cpp \
#	elements/GL/all-glelements-cpp.cpp \
#	engines/all-engines-cpp.cpp \
#	engines/all-engines-c.c \
#	errors/all-errors-cpp.cpp \
#	events/all-events-cpp.cpp \
#	fields/all-fields-cpp.cpp \
#	fonts/all-fonts-cpp.cpp \
#	glue/all-glue-cpp.cpp \
#	io/all-io-cpp.cpp \
#	misc/all-misc-cpp.cpp \
#	rendering/all-rendering-cpp.cpp \
#	lists/all-lists-cpp.cpp \
#	nodekits/all-nodekits-cpp.cpp \
#	nodes/all-nodes-cpp.cpp \
#	shapenodes/all-shapenodes-cpp.cpp \
#	projectors/all-projectors-cpp.cpp \
#	sensors/all-sensors-cpp.cpp \
#	details/all-details-cpp.cpp \
#	draggers/all-draggers-cpp.cpp \
#	manips/all-manips-cpp.cpp \
#	upgraders/all-upgraders-cpp.cpp \
#	navigation/all-navigation-cpp.cpp \
#	3ds/all-3ds-cpp.cpp \
#	collision/all-collision-cpp.cpp \
#	hardcopy/all-hardcopy-cpp.cpp \
#	threads/all-threads-cpp.cpp \
#	shaders/all-shaders-cpp.cpp \
#	shadows/all-shadows-cpp.cpp \
#	geo/all-geo-cpp.cpp \
#	foreignfiles/all-foreignfiles-cpp.cpp \
#	xml/all-xml-cpp.cpp \
#	xml/expat/all-expat-c.c \
#	profiler/all-profiler-cpp.cpp \
#	vrml97/all-vrml97-cpp.cpp \
#	scxml/all-scxml-cpp.cpp \
#	soscxml/all-soscxml-cpp.cpp \
#	tidbits.cpp

PrivateHeaders = 
libCoin_la_SOURCES = $(RegularSources)
coin5_lib_SOURCES = $(RegularSources)
EXTRA_libCoin_la_SOURCES = $(PrivateHeaders)
EXTRA_coin5_lib_SOURCES = $(PrivateHeaders)

# **************************************************************************
coin5_lib_LIBADD = actions/actions.lst       \
	base/base.lst bundles/bundles.lst caches/caches.lst             \
	elements/elements.lst elements/GL/glelements.lst                \
	engines/engines.lst errors/errors.lst events/events.lst         \
	fields/fields.lst fonts/fonts.lst glue/glue.lst io/io.lst       \
	misc/misc.lst rendering/rendering.lst lists/lists.lst           \
	nodekits/nodekits.lst nodes/nodes.lst                           \
	shapenodes/shapenodes.lst projectors/projectors.lst             \
	sensors/sensors.lst navigation/navigation.lst                   \
	details/details.lst draggers/draggers.lst manips/manips.lst     \
	upgraders/upgraders.lst 3ds/format3ds.lst                       \
	collision/collision.lst hardcopy/hardcopy.lst                   \
	threads/threads.lst shaders/shaders.lst shadows/shadows.lst     \
	geo/geo.lst foreignfiles/foreignfiles.lst xml/xml.lst           \
	xml/expat/expat.lst profiler/profiler.lst vrml97/vrml97.lst     \
	scxml/scxml.lst soscxml/soscxml.lst $(SUPERGLULSTADD)

LibtoolLinkArgs = -no-undefined
#LibtoolLinkArgs = -no-undefined -Wl,-twolevel_namespace -Wl,-undefined,error -Wl,-prebind -Wl,-seg1addr,0x3f000000 -Wl,-headerpad_max_install_names 
##LibtoolLinkArgs = -no-undefined -Wl,-twolevel_namespace -Wl,-undefined,dynamic_lookup -Wl,-headerpad_max_install_names 
libCoin_la_LDFLAGS = \
	$(LibtoolLinkArgs) \
	-version-info $(LT_CURRENT):$(LT_REVISION):$(LT_AGE)

all: discard.h config.h setup.h
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

discard.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/discard.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/discard.h
$(srcdir)/discard.h.in: # $(am__configure_deps) 
	cd $(top_srcdir) && $(AUTOHEADER)
	rm -f stamp-h1
	touch $@

config.h: stamp-h2
	@if test ! -f $@; then \
	  rm -f stamp-h2; \
	  $(MAKE) stamp-h2; \
	else :; fi

stamp-h2: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h2
	cd $(top_builddir) && $(SHELL) ./config.status src/config.h

setup.h: stamp-h3
	@if test ! -f $@; then \
	  rm -f stamp-h3; \
	  $(MAKE) stamp-h3; \
	else :; fi

stamp-h3: $(srcdir)/setup.h.in $(top_builddir)/config.status
	@rm -f stamp-h3
	cd $(top_builddir) && $(SHELL) ./config.status src/setup.h

distclean-hdr:
	-rm -f discard.h stamp-h1 config.h stamp-h2 setup.h stamp-h3
Coin.rc: $(top_builddir)/config.status $(srcdir)/Coin.rc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(libLIBRARIES_INSTALL) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(libLIBRARIES_INSTALL) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(RANLIB) '$(DESTDIR)$(libdir)/$$p'"; \
	    $(RANLIB) "$(DESTDIR)$(libdir)/$$p"; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libCoin.la: $(libCoin_la_OBJECTS) $(libCoin_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libCoin_la_LDFLAGS) $(libCoin_la_OBJECTS) $(libCoin_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/all-3ds-cpp.Plo
include ./$(DEPDIR)/all-3ds-cpp.Po
include ./$(DEPDIR)/all-actions-cpp.Plo
include ./$(DEPDIR)/all-actions-cpp.Po
include ./$(DEPDIR)/all-base-cpp.Plo
include ./$(DEPDIR)/all-base-cpp.Po
include ./$(DEPDIR)/all-bundles-cpp.Plo
include ./$(DEPDIR)/all-bundles-cpp.Po
include ./$(DEPDIR)/all-caches-cpp.Plo
include ./$(DEPDIR)/all-caches-cpp.Po
include ./$(DEPDIR)/all-collision-cpp.Plo
include ./$(DEPDIR)/all-collision-cpp.Po
include ./$(DEPDIR)/all-details-cpp.Plo
include ./$(DEPDIR)/all-details-cpp.Po
include ./$(DEPDIR)/all-draggers-cpp.Plo
include ./$(DEPDIR)/all-draggers-cpp.Po
include ./$(DEPDIR)/all-elements-cpp.Plo
include ./$(DEPDIR)/all-elements-cpp.Po
include ./$(DEPDIR)/all-engines-c.Plo
include ./$(DEPDIR)/all-engines-c.Po
include ./$(DEPDIR)/all-engines-cpp.Plo
include ./$(DEPDIR)/all-engines-cpp.Po
include ./$(DEPDIR)/all-errors-cpp.Plo
include ./$(DEPDIR)/all-errors-cpp.Po
include ./$(DEPDIR)/all-events-cpp.Plo
include ./$(DEPDIR)/all-events-cpp.Po
include ./$(DEPDIR)/all-expat-c.Plo
include ./$(DEPDIR)/all-expat-c.Po
include ./$(DEPDIR)/all-fields-cpp.Plo
include ./$(DEPDIR)/all-fields-cpp.Po
include ./$(DEPDIR)/all-fonts-cpp.Plo
include ./$(DEPDIR)/all-fonts-cpp.Po
include ./$(DEPDIR)/all-foreignfiles-cpp.Plo
include ./$(DEPDIR)/all-foreignfiles-cpp.Po
include ./$(DEPDIR)/all-geo-cpp.Plo
include ./$(DEPDIR)/all-geo-cpp.Po
include ./$(DEPDIR)/all-glelements-cpp.Plo
include ./$(DEPDIR)/all-glelements-cpp.Po
include ./$(DEPDIR)/all-glue-cpp.Plo
include ./$(DEPDIR)/all-glue-cpp.Po
include ./$(DEPDIR)/all-hardcopy-cpp.Plo
include ./$(DEPDIR)/all-hardcopy-cpp.Po
include ./$(DEPDIR)/all-io-cpp.Plo
include ./$(DEPDIR)/all-io-cpp.Po
include ./$(DEPDIR)/all-lists-cpp.Plo
include ./$(DEPDIR)/all-lists-cpp.Po
include ./$(DEPDIR)/all-manips-cpp.Plo
include ./$(DEPDIR)/all-manips-cpp.Po
include ./$(DEPDIR)/all-misc-cpp.Plo
include ./$(DEPDIR)/all-misc-cpp.Po
include ./$(DEPDIR)/all-navigation-cpp.Plo
include ./$(DEPDIR)/all-navigation-cpp.Po
include ./$(DEPDIR)/all-nodekits-cpp.Plo
include ./$(DEPDIR)/all-nodekits-cpp.Po
include ./$(DEPDIR)/all-nodes-cpp.Plo
include ./$(DEPDIR)/all-nodes-cpp.Po
include ./$(DEPDIR)/all-profiler-cpp.Plo
include ./$(DEPDIR)/all-profiler-cpp.Po
include ./$(DEPDIR)/all-projectors-cpp.Plo
include ./$(DEPDIR)/all-projectors-cpp.Po
include ./$(DEPDIR)/all-rendering-cpp.Plo
include ./$(DEPDIR)/all-rendering-cpp.Po
include ./$(DEPDIR)/all-scxml-cpp.Plo
include ./$(DEPDIR)/all-scxml-cpp.Po
include ./$(DEPDIR)/all-sensors-cpp.Plo
include ./$(DEPDIR)/all-sensors-cpp.Po
include ./$(DEPDIR)/all-shaders-cpp.Plo
include ./$(DEPDIR)/all-shaders-cpp.Po
include ./$(DEPDIR)/all-shadows-cpp.Plo
include ./$(DEPDIR)/all-shadows-cpp.Po
include ./$(DEPDIR)/all-shapenodes-cpp.Plo
include ./$(DEPDIR)/all-shapenodes-cpp.Po
include ./$(DEPDIR)/all-soscxml-cpp.Plo
include ./$(DEPDIR)/all-soscxml-cpp.Po
include ./$(DEPDIR)/all-threads-cpp.Plo
include ./$(DEPDIR)/all-threads-cpp.Po
include ./$(DEPDIR)/all-upgraders-cpp.Plo
include ./$(DEPDIR)/all-upgraders-cpp.Po
include ./$(DEPDIR)/all-vrml97-cpp.Plo
include ./$(DEPDIR)/all-vrml97-cpp.Po
include ./$(DEPDIR)/all-xml-cpp.Plo
include ./$(DEPDIR)/all-xml-cpp.Po
include ./$(DEPDIR)/tidbits.Plo
include ./$(DEPDIR)/tidbits.Po

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

all-engines-c.o: engines/all-engines-c.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT all-engines-c.o -MD -MP -MF "$(DEPDIR)/all-engines-c.Tpo" -c -o all-engines-c.o `test -f 'engines/all-engines-c.c' || echo '$(srcdir)/'`engines/all-engines-c.c; \
	then mv -f "$(DEPDIR)/all-engines-c.Tpo" "$(DEPDIR)/all-engines-c.Po"; else rm -f "$(DEPDIR)/all-engines-c.Tpo"; exit 1; fi
#	source='engines/all-engines-c.c' object='all-engines-c.o' libtool=no \
#	depfile='$(DEPDIR)/all-engines-c.Po' tmpdepfile='$(DEPDIR)/all-engines-c.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o all-engines-c.o `test -f 'engines/all-engines-c.c' || echo '$(srcdir)/'`engines/all-engines-c.c

all-engines-c.obj: engines/all-engines-c.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT all-engines-c.obj -MD -MP -MF "$(DEPDIR)/all-engines-c.Tpo" -c -o all-engines-c.obj `if test -f 'engines/all-engines-c.c'; then $(CYGPATH_W) 'engines/all-engines-c.c'; else $(CYGPATH_W) '$(srcdir)/engines/all-engines-c.c'; fi`; \
	then mv -f "$(DEPDIR)/all-engines-c.Tpo" "$(DEPDIR)/all-engines-c.Po"; else rm -f "$(DEPDIR)/all-engines-c.Tpo"; exit 1; fi
#	source='engines/all-engines-c.c' object='all-engines-c.obj' libtool=no \
#	depfile='$(DEPDIR)/all-engines-c.Po' tmpdepfile='$(DEPDIR)/all-engines-c.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o all-engines-c.obj `if test -f 'engines/all-engines-c.c'; then $(CYGPATH_W) 'engines/all-engines-c.c'; else $(CYGPATH_W) '$(srcdir)/engines/all-engines-c.c'; fi`

all-engines-c.lo: engines/all-engines-c.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT all-engines-c.lo -MD -MP -MF "$(DEPDIR)/all-engines-c.Tpo" -c -o all-engines-c.lo `test -f 'engines/all-engines-c.c' || echo '$(srcdir)/'`engines/all-engines-c.c; \
	then mv -f "$(DEPDIR)/all-engines-c.Tpo" "$(DEPDIR)/all-engines-c.Plo"; else rm -f "$(DEPDIR)/all-engines-c.Tpo"; exit 1; fi
#	source='engines/all-engines-c.c' object='all-engines-c.lo' libtool=yes \
#	depfile='$(DEPDIR)/all-engines-c.Plo' tmpdepfile='$(DEPDIR)/all-engines-c.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o all-engines-c.lo `test -f 'engines/all-engines-c.c' || echo '$(srcdir)/'`engines/all-engines-c.c

all-expat-c.o: xml/expat/all-expat-c.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT all-expat-c.o -MD -MP -MF "$(DEPDIR)/all-expat-c.Tpo" -c -o all-expat-c.o `test -f 'xml/expat/all-expat-c.c' || echo '$(srcdir)/'`xml/expat/all-expat-c.c; \
	then mv -f "$(DEPDIR)/all-expat-c.Tpo" "$(DEPDIR)/all-expat-c.Po"; else rm -f "$(DEPDIR)/all-expat-c.Tpo"; exit 1; fi
#	source='xml/expat/all-expat-c.c' object='all-expat-c.o' libtool=no \
#	depfile='$(DEPDIR)/all-expat-c.Po' tmpdepfile='$(DEPDIR)/all-expat-c.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o all-expat-c.o `test -f 'xml/expat/all-expat-c.c' || echo '$(srcdir)/'`xml/expat/all-expat-c.c

all-expat-c.obj: xml/expat/all-expat-c.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT all-expat-c.obj -MD -MP -MF "$(DEPDIR)/all-expat-c.Tpo" -c -o all-expat-c.obj `if test -f 'xml/expat/all-expat-c.c'; then $(CYGPATH_W) 'xml/expat/all-expat-c.c'; else $(CYGPATH_W) '$(srcdir)/xml/expat/all-expat-c.c'; fi`; \
	then mv -f "$(DEPDIR)/all-expat-c.Tpo" "$(DEPDIR)/all-expat-c.Po"; else rm -f "$(DEPDIR)/all-expat-c.Tpo"; exit 1; fi
#	source='xml/expat/all-expat-c.c' object='all-expat-c.obj' libtool=no \
#	depfile='$(DEPDIR)/all-expat-c.Po' tmpdepfile='$(DEPDIR)/all-expat-c.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o all-expat-c.obj `if test -f 'xml/expat/all-expat-c.c'; then $(CYGPATH_W) 'xml/expat/all-expat-c.c'; else $(CYGPATH_W) '$(srcdir)/xml/expat/all-expat-c.c'; fi`

all-expat-c.lo: xml/expat/all-expat-c.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT all-expat-c.lo -MD -MP -MF "$(DEPDIR)/all-expat-c.Tpo" -c -o all-expat-c.lo `test -f 'xml/expat/all-expat-c.c' || echo '$(srcdir)/'`xml/expat/all-expat-c.c; \
	then mv -f "$(DEPDIR)/all-expat-c.Tpo" "$(DEPDIR)/all-expat-c.Plo"; else rm -f "$(DEPDIR)/all-expat-c.Tpo"; exit 1; fi
#	source='xml/expat/all-expat-c.c' object='all-expat-c.lo' libtool=yes \
#	depfile='$(DEPDIR)/all-expat-c.Plo' tmpdepfile='$(DEPDIR)/all-expat-c.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o all-expat-c.lo `test -f 'xml/expat/all-expat-c.c' || echo '$(srcdir)/'`xml/expat/all-expat-c.c

.cpp.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

all-actions-cpp.o: actions/all-actions-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-actions-cpp.o -MD -MP -MF "$(DEPDIR)/all-actions-cpp.Tpo" -c -o all-actions-cpp.o `test -f 'actions/all-actions-cpp.cpp' || echo '$(srcdir)/'`actions/all-actions-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-actions-cpp.Tpo" "$(DEPDIR)/all-actions-cpp.Po"; else rm -f "$(DEPDIR)/all-actions-cpp.Tpo"; exit 1; fi
#	source='actions/all-actions-cpp.cpp' object='all-actions-cpp.o' libtool=no \
#	depfile='$(DEPDIR)/all-actions-cpp.Po' tmpdepfile='$(DEPDIR)/all-actions-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-actions-cpp.o `test -f 'actions/all-actions-cpp.cpp' || echo '$(srcdir)/'`actions/all-actions-cpp.cpp

all-actions-cpp.obj: actions/all-actions-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-actions-cpp.obj -MD -MP -MF "$(DEPDIR)/all-actions-cpp.Tpo" -c -o all-actions-cpp.obj `if test -f 'actions/all-actions-cpp.cpp'; then $(CYGPATH_W) 'actions/all-actions-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/actions/all-actions-cpp.cpp'; fi`; \
	then mv -f "$(DEPDIR)/all-actions-cpp.Tpo" "$(DEPDIR)/all-actions-cpp.Po"; else rm -f "$(DEPDIR)/all-actions-cpp.Tpo"; exit 1; fi
#	source='actions/all-actions-cpp.cpp' object='all-actions-cpp.obj' libtool=no \
#	depfile='$(DEPDIR)/all-actions-cpp.Po' tmpdepfile='$(DEPDIR)/all-actions-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-actions-cpp.obj `if test -f 'actions/all-actions-cpp.cpp'; then $(CYGPATH_W) 'actions/all-actions-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/actions/all-actions-cpp.cpp'; fi`

all-actions-cpp.lo: actions/all-actions-cpp.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-actions-cpp.lo -MD -MP -MF "$(DEPDIR)/all-actions-cpp.Tpo" -c -o all-actions-cpp.lo `test -f 'actions/all-actions-cpp.cpp' || echo '$(srcdir)/'`actions/all-actions-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-actions-cpp.Tpo" "$(DEPDIR)/all-actions-cpp.Plo"; else rm -f "$(DEPDIR)/all-actions-cpp.Tpo"; exit 1; fi
#	source='actions/all-actions-cpp.cpp' object='all-actions-cpp.lo' libtool=yes \
#	depfile='$(DEPDIR)/all-actions-cpp.Plo' tmpdepfile='$(DEPDIR)/all-actions-cpp.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-actions-cpp.lo `test -f 'actions/all-actions-cpp.cpp' || echo '$(srcdir)/'`actions/all-actions-cpp.cpp

all-base-cpp.o: base/all-base-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-base-cpp.o -MD -MP -MF "$(DEPDIR)/all-base-cpp.Tpo" -c -o all-base-cpp.o `test -f 'base/all-base-cpp.cpp' || echo '$(srcdir)/'`base/all-base-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-base-cpp.Tpo" "$(DEPDIR)/all-base-cpp.Po"; else rm -f "$(DEPDIR)/all-base-cpp.Tpo"; exit 1; fi
#	source='base/all-base-cpp.cpp' object='all-base-cpp.o' libtool=no \
#	depfile='$(DEPDIR)/all-base-cpp.Po' tmpdepfile='$(DEPDIR)/all-base-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-base-cpp.o `test -f 'base/all-base-cpp.cpp' || echo '$(srcdir)/'`base/all-base-cpp.cpp

all-base-cpp.obj: base/all-base-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-base-cpp.obj -MD -MP -MF "$(DEPDIR)/all-base-cpp.Tpo" -c -o all-base-cpp.obj `if test -f 'base/all-base-cpp.cpp'; then $(CYGPATH_W) 'base/all-base-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/base/all-base-cpp.cpp'; fi`; \
	then mv -f "$(DEPDIR)/all-base-cpp.Tpo" "$(DEPDIR)/all-base-cpp.Po"; else rm -f "$(DEPDIR)/all-base-cpp.Tpo"; exit 1; fi
#	source='base/all-base-cpp.cpp' object='all-base-cpp.obj' libtool=no \
#	depfile='$(DEPDIR)/all-base-cpp.Po' tmpdepfile='$(DEPDIR)/all-base-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-base-cpp.obj `if test -f 'base/all-base-cpp.cpp'; then $(CYGPATH_W) 'base/all-base-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/base/all-base-cpp.cpp'; fi`

all-base-cpp.lo: base/all-base-cpp.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-base-cpp.lo -MD -MP -MF "$(DEPDIR)/all-base-cpp.Tpo" -c -o all-base-cpp.lo `test -f 'base/all-base-cpp.cpp' || echo '$(srcdir)/'`base/all-base-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-base-cpp.Tpo" "$(DEPDIR)/all-base-cpp.Plo"; else rm -f "$(DEPDIR)/all-base-cpp.Tpo"; exit 1; fi
#	source='base/all-base-cpp.cpp' object='all-base-cpp.lo' libtool=yes \
#	depfile='$(DEPDIR)/all-base-cpp.Plo' tmpdepfile='$(DEPDIR)/all-base-cpp.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-base-cpp.lo `test -f 'base/all-base-cpp.cpp' || echo '$(srcdir)/'`base/all-base-cpp.cpp

all-bundles-cpp.o: bundles/all-bundles-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-bundles-cpp.o -MD -MP -MF "$(DEPDIR)/all-bundles-cpp.Tpo" -c -o all-bundles-cpp.o `test -f 'bundles/all-bundles-cpp.cpp' || echo '$(srcdir)/'`bundles/all-bundles-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-bundles-cpp.Tpo" "$(DEPDIR)/all-bundles-cpp.Po"; else rm -f "$(DEPDIR)/all-bundles-cpp.Tpo"; exit 1; fi
#	source='bundles/all-bundles-cpp.cpp' object='all-bundles-cpp.o' libtool=no \
#	depfile='$(DEPDIR)/all-bundles-cpp.Po' tmpdepfile='$(DEPDIR)/all-bundles-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-bundles-cpp.o `test -f 'bundles/all-bundles-cpp.cpp' || echo '$(srcdir)/'`bundles/all-bundles-cpp.cpp

all-bundles-cpp.obj: bundles/all-bundles-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-bundles-cpp.obj -MD -MP -MF "$(DEPDIR)/all-bundles-cpp.Tpo" -c -o all-bundles-cpp.obj `if test -f 'bundles/all-bundles-cpp.cpp'; then $(CYGPATH_W) 'bundles/all-bundles-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/bundles/all-bundles-cpp.cpp'; fi`; \
	then mv -f "$(DEPDIR)/all-bundles-cpp.Tpo" "$(DEPDIR)/all-bundles-cpp.Po"; else rm -f "$(DEPDIR)/all-bundles-cpp.Tpo"; exit 1; fi
#	source='bundles/all-bundles-cpp.cpp' object='all-bundles-cpp.obj' libtool=no \
#	depfile='$(DEPDIR)/all-bundles-cpp.Po' tmpdepfile='$(DEPDIR)/all-bundles-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-bundles-cpp.obj `if test -f 'bundles/all-bundles-cpp.cpp'; then $(CYGPATH_W) 'bundles/all-bundles-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/bundles/all-bundles-cpp.cpp'; fi`

all-bundles-cpp.lo: bundles/all-bundles-cpp.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-bundles-cpp.lo -MD -MP -MF "$(DEPDIR)/all-bundles-cpp.Tpo" -c -o all-bundles-cpp.lo `test -f 'bundles/all-bundles-cpp.cpp' || echo '$(srcdir)/'`bundles/all-bundles-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-bundles-cpp.Tpo" "$(DEPDIR)/all-bundles-cpp.Plo"; else rm -f "$(DEPDIR)/all-bundles-cpp.Tpo"; exit 1; fi
#	source='bundles/all-bundles-cpp.cpp' object='all-bundles-cpp.lo' libtool=yes \
#	depfile='$(DEPDIR)/all-bundles-cpp.Plo' tmpdepfile='$(DEPDIR)/all-bundles-cpp.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-bundles-cpp.lo `test -f 'bundles/all-bundles-cpp.cpp' || echo '$(srcdir)/'`bundles/all-bundles-cpp.cpp

all-caches-cpp.o: caches/all-caches-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-caches-cpp.o -MD -MP -MF "$(DEPDIR)/all-caches-cpp.Tpo" -c -o all-caches-cpp.o `test -f 'caches/all-caches-cpp.cpp' || echo '$(srcdir)/'`caches/all-caches-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-caches-cpp.Tpo" "$(DEPDIR)/all-caches-cpp.Po"; else rm -f "$(DEPDIR)/all-caches-cpp.Tpo"; exit 1; fi
#	source='caches/all-caches-cpp.cpp' object='all-caches-cpp.o' libtool=no \
#	depfile='$(DEPDIR)/all-caches-cpp.Po' tmpdepfile='$(DEPDIR)/all-caches-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-caches-cpp.o `test -f 'caches/all-caches-cpp.cpp' || echo '$(srcdir)/'`caches/all-caches-cpp.cpp

all-caches-cpp.obj: caches/all-caches-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-caches-cpp.obj -MD -MP -MF "$(DEPDIR)/all-caches-cpp.Tpo" -c -o all-caches-cpp.obj `if test -f 'caches/all-caches-cpp.cpp'; then $(CYGPATH_W) 'caches/all-caches-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/caches/all-caches-cpp.cpp'; fi`; \
	then mv -f "$(DEPDIR)/all-caches-cpp.Tpo" "$(DEPDIR)/all-caches-cpp.Po"; else rm -f "$(DEPDIR)/all-caches-cpp.Tpo"; exit 1; fi
#	source='caches/all-caches-cpp.cpp' object='all-caches-cpp.obj' libtool=no \
#	depfile='$(DEPDIR)/all-caches-cpp.Po' tmpdepfile='$(DEPDIR)/all-caches-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-caches-cpp.obj `if test -f 'caches/all-caches-cpp.cpp'; then $(CYGPATH_W) 'caches/all-caches-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/caches/all-caches-cpp.cpp'; fi`

all-caches-cpp.lo: caches/all-caches-cpp.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-caches-cpp.lo -MD -MP -MF "$(DEPDIR)/all-caches-cpp.Tpo" -c -o all-caches-cpp.lo `test -f 'caches/all-caches-cpp.cpp' || echo '$(srcdir)/'`caches/all-caches-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-caches-cpp.Tpo" "$(DEPDIR)/all-caches-cpp.Plo"; else rm -f "$(DEPDIR)/all-caches-cpp.Tpo"; exit 1; fi
#	source='caches/all-caches-cpp.cpp' object='all-caches-cpp.lo' libtool=yes \
#	depfile='$(DEPDIR)/all-caches-cpp.Plo' tmpdepfile='$(DEPDIR)/all-caches-cpp.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-caches-cpp.lo `test -f 'caches/all-caches-cpp.cpp' || echo '$(srcdir)/'`caches/all-caches-cpp.cpp

all-elements-cpp.o: elements/all-elements-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-elements-cpp.o -MD -MP -MF "$(DEPDIR)/all-elements-cpp.Tpo" -c -o all-elements-cpp.o `test -f 'elements/all-elements-cpp.cpp' || echo '$(srcdir)/'`elements/all-elements-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-elements-cpp.Tpo" "$(DEPDIR)/all-elements-cpp.Po"; else rm -f "$(DEPDIR)/all-elements-cpp.Tpo"; exit 1; fi
#	source='elements/all-elements-cpp.cpp' object='all-elements-cpp.o' libtool=no \
#	depfile='$(DEPDIR)/all-elements-cpp.Po' tmpdepfile='$(DEPDIR)/all-elements-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-elements-cpp.o `test -f 'elements/all-elements-cpp.cpp' || echo '$(srcdir)/'`elements/all-elements-cpp.cpp

all-elements-cpp.obj: elements/all-elements-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-elements-cpp.obj -MD -MP -MF "$(DEPDIR)/all-elements-cpp.Tpo" -c -o all-elements-cpp.obj `if test -f 'elements/all-elements-cpp.cpp'; then $(CYGPATH_W) 'elements/all-elements-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/elements/all-elements-cpp.cpp'; fi`; \
	then mv -f "$(DEPDIR)/all-elements-cpp.Tpo" "$(DEPDIR)/all-elements-cpp.Po"; else rm -f "$(DEPDIR)/all-elements-cpp.Tpo"; exit 1; fi
#	source='elements/all-elements-cpp.cpp' object='all-elements-cpp.obj' libtool=no \
#	depfile='$(DEPDIR)/all-elements-cpp.Po' tmpdepfile='$(DEPDIR)/all-elements-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-elements-cpp.obj `if test -f 'elements/all-elements-cpp.cpp'; then $(CYGPATH_W) 'elements/all-elements-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/elements/all-elements-cpp.cpp'; fi`

all-elements-cpp.lo: elements/all-elements-cpp.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-elements-cpp.lo -MD -MP -MF "$(DEPDIR)/all-elements-cpp.Tpo" -c -o all-elements-cpp.lo `test -f 'elements/all-elements-cpp.cpp' || echo '$(srcdir)/'`elements/all-elements-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-elements-cpp.Tpo" "$(DEPDIR)/all-elements-cpp.Plo"; else rm -f "$(DEPDIR)/all-elements-cpp.Tpo"; exit 1; fi
#	source='elements/all-elements-cpp.cpp' object='all-elements-cpp.lo' libtool=yes \
#	depfile='$(DEPDIR)/all-elements-cpp.Plo' tmpdepfile='$(DEPDIR)/all-elements-cpp.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-elements-cpp.lo `test -f 'elements/all-elements-cpp.cpp' || echo '$(srcdir)/'`elements/all-elements-cpp.cpp

all-glelements-cpp.o: elements/GL/all-glelements-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-glelements-cpp.o -MD -MP -MF "$(DEPDIR)/all-glelements-cpp.Tpo" -c -o all-glelements-cpp.o `test -f 'elements/GL/all-glelements-cpp.cpp' || echo '$(srcdir)/'`elements/GL/all-glelements-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-glelements-cpp.Tpo" "$(DEPDIR)/all-glelements-cpp.Po"; else rm -f "$(DEPDIR)/all-glelements-cpp.Tpo"; exit 1; fi
#	source='elements/GL/all-glelements-cpp.cpp' object='all-glelements-cpp.o' libtool=no \
#	depfile='$(DEPDIR)/all-glelements-cpp.Po' tmpdepfile='$(DEPDIR)/all-glelements-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-glelements-cpp.o `test -f 'elements/GL/all-glelements-cpp.cpp' || echo '$(srcdir)/'`elements/GL/all-glelements-cpp.cpp

all-glelements-cpp.obj: elements/GL/all-glelements-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-glelements-cpp.obj -MD -MP -MF "$(DEPDIR)/all-glelements-cpp.Tpo" -c -o all-glelements-cpp.obj `if test -f 'elements/GL/all-glelements-cpp.cpp'; then $(CYGPATH_W) 'elements/GL/all-glelements-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/elements/GL/all-glelements-cpp.cpp'; fi`; \
	then mv -f "$(DEPDIR)/all-glelements-cpp.Tpo" "$(DEPDIR)/all-glelements-cpp.Po"; else rm -f "$(DEPDIR)/all-glelements-cpp.Tpo"; exit 1; fi
#	source='elements/GL/all-glelements-cpp.cpp' object='all-glelements-cpp.obj' libtool=no \
#	depfile='$(DEPDIR)/all-glelements-cpp.Po' tmpdepfile='$(DEPDIR)/all-glelements-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-glelements-cpp.obj `if test -f 'elements/GL/all-glelements-cpp.cpp'; then $(CYGPATH_W) 'elements/GL/all-glelements-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/elements/GL/all-glelements-cpp.cpp'; fi`

all-glelements-cpp.lo: elements/GL/all-glelements-cpp.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-glelements-cpp.lo -MD -MP -MF "$(DEPDIR)/all-glelements-cpp.Tpo" -c -o all-glelements-cpp.lo `test -f 'elements/GL/all-glelements-cpp.cpp' || echo '$(srcdir)/'`elements/GL/all-glelements-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-glelements-cpp.Tpo" "$(DEPDIR)/all-glelements-cpp.Plo"; else rm -f "$(DEPDIR)/all-glelements-cpp.Tpo"; exit 1; fi
#	source='elements/GL/all-glelements-cpp.cpp' object='all-glelements-cpp.lo' libtool=yes \
#	depfile='$(DEPDIR)/all-glelements-cpp.Plo' tmpdepfile='$(DEPDIR)/all-glelements-cpp.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-glelements-cpp.lo `test -f 'elements/GL/all-glelements-cpp.cpp' || echo '$(srcdir)/'`elements/GL/all-glelements-cpp.cpp

all-engines-cpp.o: engines/all-engines-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-engines-cpp.o -MD -MP -MF "$(DEPDIR)/all-engines-cpp.Tpo" -c -o all-engines-cpp.o `test -f 'engines/all-engines-cpp.cpp' || echo '$(srcdir)/'`engines/all-engines-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-engines-cpp.Tpo" "$(DEPDIR)/all-engines-cpp.Po"; else rm -f "$(DEPDIR)/all-engines-cpp.Tpo"; exit 1; fi
#	source='engines/all-engines-cpp.cpp' object='all-engines-cpp.o' libtool=no \
#	depfile='$(DEPDIR)/all-engines-cpp.Po' tmpdepfile='$(DEPDIR)/all-engines-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-engines-cpp.o `test -f 'engines/all-engines-cpp.cpp' || echo '$(srcdir)/'`engines/all-engines-cpp.cpp

all-engines-cpp.obj: engines/all-engines-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-engines-cpp.obj -MD -MP -MF "$(DEPDIR)/all-engines-cpp.Tpo" -c -o all-engines-cpp.obj `if test -f 'engines/all-engines-cpp.cpp'; then $(CYGPATH_W) 'engines/all-engines-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/engines/all-engines-cpp.cpp'; fi`; \
	then mv -f "$(DEPDIR)/all-engines-cpp.Tpo" "$(DEPDIR)/all-engines-cpp.Po"; else rm -f "$(DEPDIR)/all-engines-cpp.Tpo"; exit 1; fi
#	source='engines/all-engines-cpp.cpp' object='all-engines-cpp.obj' libtool=no \
#	depfile='$(DEPDIR)/all-engines-cpp.Po' tmpdepfile='$(DEPDIR)/all-engines-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-engines-cpp.obj `if test -f 'engines/all-engines-cpp.cpp'; then $(CYGPATH_W) 'engines/all-engines-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/engines/all-engines-cpp.cpp'; fi`

all-engines-cpp.lo: engines/all-engines-cpp.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-engines-cpp.lo -MD -MP -MF "$(DEPDIR)/all-engines-cpp.Tpo" -c -o all-engines-cpp.lo `test -f 'engines/all-engines-cpp.cpp' || echo '$(srcdir)/'`engines/all-engines-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-engines-cpp.Tpo" "$(DEPDIR)/all-engines-cpp.Plo"; else rm -f "$(DEPDIR)/all-engines-cpp.Tpo"; exit 1; fi
#	source='engines/all-engines-cpp.cpp' object='all-engines-cpp.lo' libtool=yes \
#	depfile='$(DEPDIR)/all-engines-cpp.Plo' tmpdepfile='$(DEPDIR)/all-engines-cpp.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-engines-cpp.lo `test -f 'engines/all-engines-cpp.cpp' || echo '$(srcdir)/'`engines/all-engines-cpp.cpp

all-errors-cpp.o: errors/all-errors-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-errors-cpp.o -MD -MP -MF "$(DEPDIR)/all-errors-cpp.Tpo" -c -o all-errors-cpp.o `test -f 'errors/all-errors-cpp.cpp' || echo '$(srcdir)/'`errors/all-errors-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-errors-cpp.Tpo" "$(DEPDIR)/all-errors-cpp.Po"; else rm -f "$(DEPDIR)/all-errors-cpp.Tpo"; exit 1; fi
#	source='errors/all-errors-cpp.cpp' object='all-errors-cpp.o' libtool=no \
#	depfile='$(DEPDIR)/all-errors-cpp.Po' tmpdepfile='$(DEPDIR)/all-errors-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-errors-cpp.o `test -f 'errors/all-errors-cpp.cpp' || echo '$(srcdir)/'`errors/all-errors-cpp.cpp

all-errors-cpp.obj: errors/all-errors-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-errors-cpp.obj -MD -MP -MF "$(DEPDIR)/all-errors-cpp.Tpo" -c -o all-errors-cpp.obj `if test -f 'errors/all-errors-cpp.cpp'; then $(CYGPATH_W) 'errors/all-errors-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/errors/all-errors-cpp.cpp'; fi`; \
	then mv -f "$(DEPDIR)/all-errors-cpp.Tpo" "$(DEPDIR)/all-errors-cpp.Po"; else rm -f "$(DEPDIR)/all-errors-cpp.Tpo"; exit 1; fi
#	source='errors/all-errors-cpp.cpp' object='all-errors-cpp.obj' libtool=no \
#	depfile='$(DEPDIR)/all-errors-cpp.Po' tmpdepfile='$(DEPDIR)/all-errors-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-errors-cpp.obj `if test -f 'errors/all-errors-cpp.cpp'; then $(CYGPATH_W) 'errors/all-errors-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/errors/all-errors-cpp.cpp'; fi`

all-errors-cpp.lo: errors/all-errors-cpp.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-errors-cpp.lo -MD -MP -MF "$(DEPDIR)/all-errors-cpp.Tpo" -c -o all-errors-cpp.lo `test -f 'errors/all-errors-cpp.cpp' || echo '$(srcdir)/'`errors/all-errors-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-errors-cpp.Tpo" "$(DEPDIR)/all-errors-cpp.Plo"; else rm -f "$(DEPDIR)/all-errors-cpp.Tpo"; exit 1; fi
#	source='errors/all-errors-cpp.cpp' object='all-errors-cpp.lo' libtool=yes \
#	depfile='$(DEPDIR)/all-errors-cpp.Plo' tmpdepfile='$(DEPDIR)/all-errors-cpp.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-errors-cpp.lo `test -f 'errors/all-errors-cpp.cpp' || echo '$(srcdir)/'`errors/all-errors-cpp.cpp

all-events-cpp.o: events/all-events-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-events-cpp.o -MD -MP -MF "$(DEPDIR)/all-events-cpp.Tpo" -c -o all-events-cpp.o `test -f 'events/all-events-cpp.cpp' || echo '$(srcdir)/'`events/all-events-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-events-cpp.Tpo" "$(DEPDIR)/all-events-cpp.Po"; else rm -f "$(DEPDIR)/all-events-cpp.Tpo"; exit 1; fi
#	source='events/all-events-cpp.cpp' object='all-events-cpp.o' libtool=no \
#	depfile='$(DEPDIR)/all-events-cpp.Po' tmpdepfile='$(DEPDIR)/all-events-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-events-cpp.o `test -f 'events/all-events-cpp.cpp' || echo '$(srcdir)/'`events/all-events-cpp.cpp

all-events-cpp.obj: events/all-events-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-events-cpp.obj -MD -MP -MF "$(DEPDIR)/all-events-cpp.Tpo" -c -o all-events-cpp.obj `if test -f 'events/all-events-cpp.cpp'; then $(CYGPATH_W) 'events/all-events-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/events/all-events-cpp.cpp'; fi`; \
	then mv -f "$(DEPDIR)/all-events-cpp.Tpo" "$(DEPDIR)/all-events-cpp.Po"; else rm -f "$(DEPDIR)/all-events-cpp.Tpo"; exit 1; fi
#	source='events/all-events-cpp.cpp' object='all-events-cpp.obj' libtool=no \
#	depfile='$(DEPDIR)/all-events-cpp.Po' tmpdepfile='$(DEPDIR)/all-events-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-events-cpp.obj `if test -f 'events/all-events-cpp.cpp'; then $(CYGPATH_W) 'events/all-events-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/events/all-events-cpp.cpp'; fi`

all-events-cpp.lo: events/all-events-cpp.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-events-cpp.lo -MD -MP -MF "$(DEPDIR)/all-events-cpp.Tpo" -c -o all-events-cpp.lo `test -f 'events/all-events-cpp.cpp' || echo '$(srcdir)/'`events/all-events-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-events-cpp.Tpo" "$(DEPDIR)/all-events-cpp.Plo"; else rm -f "$(DEPDIR)/all-events-cpp.Tpo"; exit 1; fi
#	source='events/all-events-cpp.cpp' object='all-events-cpp.lo' libtool=yes \
#	depfile='$(DEPDIR)/all-events-cpp.Plo' tmpdepfile='$(DEPDIR)/all-events-cpp.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-events-cpp.lo `test -f 'events/all-events-cpp.cpp' || echo '$(srcdir)/'`events/all-events-cpp.cpp

all-fields-cpp.o: fields/all-fields-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-fields-cpp.o -MD -MP -MF "$(DEPDIR)/all-fields-cpp.Tpo" -c -o all-fields-cpp.o `test -f 'fields/all-fields-cpp.cpp' || echo '$(srcdir)/'`fields/all-fields-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-fields-cpp.Tpo" "$(DEPDIR)/all-fields-cpp.Po"; else rm -f "$(DEPDIR)/all-fields-cpp.Tpo"; exit 1; fi
#	source='fields/all-fields-cpp.cpp' object='all-fields-cpp.o' libtool=no \
#	depfile='$(DEPDIR)/all-fields-cpp.Po' tmpdepfile='$(DEPDIR)/all-fields-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-fields-cpp.o `test -f 'fields/all-fields-cpp.cpp' || echo '$(srcdir)/'`fields/all-fields-cpp.cpp

all-fields-cpp.obj: fields/all-fields-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-fields-cpp.obj -MD -MP -MF "$(DEPDIR)/all-fields-cpp.Tpo" -c -o all-fields-cpp.obj `if test -f 'fields/all-fields-cpp.cpp'; then $(CYGPATH_W) 'fields/all-fields-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/fields/all-fields-cpp.cpp'; fi`; \
	then mv -f "$(DEPDIR)/all-fields-cpp.Tpo" "$(DEPDIR)/all-fields-cpp.Po"; else rm -f "$(DEPDIR)/all-fields-cpp.Tpo"; exit 1; fi
#	source='fields/all-fields-cpp.cpp' object='all-fields-cpp.obj' libtool=no \
#	depfile='$(DEPDIR)/all-fields-cpp.Po' tmpdepfile='$(DEPDIR)/all-fields-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-fields-cpp.obj `if test -f 'fields/all-fields-cpp.cpp'; then $(CYGPATH_W) 'fields/all-fields-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/fields/all-fields-cpp.cpp'; fi`

all-fields-cpp.lo: fields/all-fields-cpp.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-fields-cpp.lo -MD -MP -MF "$(DEPDIR)/all-fields-cpp.Tpo" -c -o all-fields-cpp.lo `test -f 'fields/all-fields-cpp.cpp' || echo '$(srcdir)/'`fields/all-fields-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-fields-cpp.Tpo" "$(DEPDIR)/all-fields-cpp.Plo"; else rm -f "$(DEPDIR)/all-fields-cpp.Tpo"; exit 1; fi
#	source='fields/all-fields-cpp.cpp' object='all-fields-cpp.lo' libtool=yes \
#	depfile='$(DEPDIR)/all-fields-cpp.Plo' tmpdepfile='$(DEPDIR)/all-fields-cpp.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-fields-cpp.lo `test -f 'fields/all-fields-cpp.cpp' || echo '$(srcdir)/'`fields/all-fields-cpp.cpp

all-fonts-cpp.o: fonts/all-fonts-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-fonts-cpp.o -MD -MP -MF "$(DEPDIR)/all-fonts-cpp.Tpo" -c -o all-fonts-cpp.o `test -f 'fonts/all-fonts-cpp.cpp' || echo '$(srcdir)/'`fonts/all-fonts-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-fonts-cpp.Tpo" "$(DEPDIR)/all-fonts-cpp.Po"; else rm -f "$(DEPDIR)/all-fonts-cpp.Tpo"; exit 1; fi
#	source='fonts/all-fonts-cpp.cpp' object='all-fonts-cpp.o' libtool=no \
#	depfile='$(DEPDIR)/all-fonts-cpp.Po' tmpdepfile='$(DEPDIR)/all-fonts-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-fonts-cpp.o `test -f 'fonts/all-fonts-cpp.cpp' || echo '$(srcdir)/'`fonts/all-fonts-cpp.cpp

all-fonts-cpp.obj: fonts/all-fonts-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-fonts-cpp.obj -MD -MP -MF "$(DEPDIR)/all-fonts-cpp.Tpo" -c -o all-fonts-cpp.obj `if test -f 'fonts/all-fonts-cpp.cpp'; then $(CYGPATH_W) 'fonts/all-fonts-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/fonts/all-fonts-cpp.cpp'; fi`; \
	then mv -f "$(DEPDIR)/all-fonts-cpp.Tpo" "$(DEPDIR)/all-fonts-cpp.Po"; else rm -f "$(DEPDIR)/all-fonts-cpp.Tpo"; exit 1; fi
#	source='fonts/all-fonts-cpp.cpp' object='all-fonts-cpp.obj' libtool=no \
#	depfile='$(DEPDIR)/all-fonts-cpp.Po' tmpdepfile='$(DEPDIR)/all-fonts-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-fonts-cpp.obj `if test -f 'fonts/all-fonts-cpp.cpp'; then $(CYGPATH_W) 'fonts/all-fonts-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/fonts/all-fonts-cpp.cpp'; fi`

all-fonts-cpp.lo: fonts/all-fonts-cpp.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-fonts-cpp.lo -MD -MP -MF "$(DEPDIR)/all-fonts-cpp.Tpo" -c -o all-fonts-cpp.lo `test -f 'fonts/all-fonts-cpp.cpp' || echo '$(srcdir)/'`fonts/all-fonts-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-fonts-cpp.Tpo" "$(DEPDIR)/all-fonts-cpp.Plo"; else rm -f "$(DEPDIR)/all-fonts-cpp.Tpo"; exit 1; fi
#	source='fonts/all-fonts-cpp.cpp' object='all-fonts-cpp.lo' libtool=yes \
#	depfile='$(DEPDIR)/all-fonts-cpp.Plo' tmpdepfile='$(DEPDIR)/all-fonts-cpp.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-fonts-cpp.lo `test -f 'fonts/all-fonts-cpp.cpp' || echo '$(srcdir)/'`fonts/all-fonts-cpp.cpp

all-glue-cpp.o: glue/all-glue-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-glue-cpp.o -MD -MP -MF "$(DEPDIR)/all-glue-cpp.Tpo" -c -o all-glue-cpp.o `test -f 'glue/all-glue-cpp.cpp' || echo '$(srcdir)/'`glue/all-glue-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-glue-cpp.Tpo" "$(DEPDIR)/all-glue-cpp.Po"; else rm -f "$(DEPDIR)/all-glue-cpp.Tpo"; exit 1; fi
#	source='glue/all-glue-cpp.cpp' object='all-glue-cpp.o' libtool=no \
#	depfile='$(DEPDIR)/all-glue-cpp.Po' tmpdepfile='$(DEPDIR)/all-glue-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-glue-cpp.o `test -f 'glue/all-glue-cpp.cpp' || echo '$(srcdir)/'`glue/all-glue-cpp.cpp

all-glue-cpp.obj: glue/all-glue-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-glue-cpp.obj -MD -MP -MF "$(DEPDIR)/all-glue-cpp.Tpo" -c -o all-glue-cpp.obj `if test -f 'glue/all-glue-cpp.cpp'; then $(CYGPATH_W) 'glue/all-glue-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/glue/all-glue-cpp.cpp'; fi`; \
	then mv -f "$(DEPDIR)/all-glue-cpp.Tpo" "$(DEPDIR)/all-glue-cpp.Po"; else rm -f "$(DEPDIR)/all-glue-cpp.Tpo"; exit 1; fi
#	source='glue/all-glue-cpp.cpp' object='all-glue-cpp.obj' libtool=no \
#	depfile='$(DEPDIR)/all-glue-cpp.Po' tmpdepfile='$(DEPDIR)/all-glue-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-glue-cpp.obj `if test -f 'glue/all-glue-cpp.cpp'; then $(CYGPATH_W) 'glue/all-glue-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/glue/all-glue-cpp.cpp'; fi`

all-glue-cpp.lo: glue/all-glue-cpp.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-glue-cpp.lo -MD -MP -MF "$(DEPDIR)/all-glue-cpp.Tpo" -c -o all-glue-cpp.lo `test -f 'glue/all-glue-cpp.cpp' || echo '$(srcdir)/'`glue/all-glue-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-glue-cpp.Tpo" "$(DEPDIR)/all-glue-cpp.Plo"; else rm -f "$(DEPDIR)/all-glue-cpp.Tpo"; exit 1; fi
#	source='glue/all-glue-cpp.cpp' object='all-glue-cpp.lo' libtool=yes \
#	depfile='$(DEPDIR)/all-glue-cpp.Plo' tmpdepfile='$(DEPDIR)/all-glue-cpp.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-glue-cpp.lo `test -f 'glue/all-glue-cpp.cpp' || echo '$(srcdir)/'`glue/all-glue-cpp.cpp

all-io-cpp.o: io/all-io-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-io-cpp.o -MD -MP -MF "$(DEPDIR)/all-io-cpp.Tpo" -c -o all-io-cpp.o `test -f 'io/all-io-cpp.cpp' || echo '$(srcdir)/'`io/all-io-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-io-cpp.Tpo" "$(DEPDIR)/all-io-cpp.Po"; else rm -f "$(DEPDIR)/all-io-cpp.Tpo"; exit 1; fi
#	source='io/all-io-cpp.cpp' object='all-io-cpp.o' libtool=no \
#	depfile='$(DEPDIR)/all-io-cpp.Po' tmpdepfile='$(DEPDIR)/all-io-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-io-cpp.o `test -f 'io/all-io-cpp.cpp' || echo '$(srcdir)/'`io/all-io-cpp.cpp

all-io-cpp.obj: io/all-io-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-io-cpp.obj -MD -MP -MF "$(DEPDIR)/all-io-cpp.Tpo" -c -o all-io-cpp.obj `if test -f 'io/all-io-cpp.cpp'; then $(CYGPATH_W) 'io/all-io-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/io/all-io-cpp.cpp'; fi`; \
	then mv -f "$(DEPDIR)/all-io-cpp.Tpo" "$(DEPDIR)/all-io-cpp.Po"; else rm -f "$(DEPDIR)/all-io-cpp.Tpo"; exit 1; fi
#	source='io/all-io-cpp.cpp' object='all-io-cpp.obj' libtool=no \
#	depfile='$(DEPDIR)/all-io-cpp.Po' tmpdepfile='$(DEPDIR)/all-io-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-io-cpp.obj `if test -f 'io/all-io-cpp.cpp'; then $(CYGPATH_W) 'io/all-io-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/io/all-io-cpp.cpp'; fi`

all-io-cpp.lo: io/all-io-cpp.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-io-cpp.lo -MD -MP -MF "$(DEPDIR)/all-io-cpp.Tpo" -c -o all-io-cpp.lo `test -f 'io/all-io-cpp.cpp' || echo '$(srcdir)/'`io/all-io-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-io-cpp.Tpo" "$(DEPDIR)/all-io-cpp.Plo"; else rm -f "$(DEPDIR)/all-io-cpp.Tpo"; exit 1; fi
#	source='io/all-io-cpp.cpp' object='all-io-cpp.lo' libtool=yes \
#	depfile='$(DEPDIR)/all-io-cpp.Plo' tmpdepfile='$(DEPDIR)/all-io-cpp.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-io-cpp.lo `test -f 'io/all-io-cpp.cpp' || echo '$(srcdir)/'`io/all-io-cpp.cpp

all-misc-cpp.o: misc/all-misc-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-misc-cpp.o -MD -MP -MF "$(DEPDIR)/all-misc-cpp.Tpo" -c -o all-misc-cpp.o `test -f 'misc/all-misc-cpp.cpp' || echo '$(srcdir)/'`misc/all-misc-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-misc-cpp.Tpo" "$(DEPDIR)/all-misc-cpp.Po"; else rm -f "$(DEPDIR)/all-misc-cpp.Tpo"; exit 1; fi
#	source='misc/all-misc-cpp.cpp' object='all-misc-cpp.o' libtool=no \
#	depfile='$(DEPDIR)/all-misc-cpp.Po' tmpdepfile='$(DEPDIR)/all-misc-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-misc-cpp.o `test -f 'misc/all-misc-cpp.cpp' || echo '$(srcdir)/'`misc/all-misc-cpp.cpp

all-misc-cpp.obj: misc/all-misc-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-misc-cpp.obj -MD -MP -MF "$(DEPDIR)/all-misc-cpp.Tpo" -c -o all-misc-cpp.obj `if test -f 'misc/all-misc-cpp.cpp'; then $(CYGPATH_W) 'misc/all-misc-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/misc/all-misc-cpp.cpp'; fi`; \
	then mv -f "$(DEPDIR)/all-misc-cpp.Tpo" "$(DEPDIR)/all-misc-cpp.Po"; else rm -f "$(DEPDIR)/all-misc-cpp.Tpo"; exit 1; fi
#	source='misc/all-misc-cpp.cpp' object='all-misc-cpp.obj' libtool=no \
#	depfile='$(DEPDIR)/all-misc-cpp.Po' tmpdepfile='$(DEPDIR)/all-misc-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-misc-cpp.obj `if test -f 'misc/all-misc-cpp.cpp'; then $(CYGPATH_W) 'misc/all-misc-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/misc/all-misc-cpp.cpp'; fi`

all-misc-cpp.lo: misc/all-misc-cpp.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-misc-cpp.lo -MD -MP -MF "$(DEPDIR)/all-misc-cpp.Tpo" -c -o all-misc-cpp.lo `test -f 'misc/all-misc-cpp.cpp' || echo '$(srcdir)/'`misc/all-misc-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-misc-cpp.Tpo" "$(DEPDIR)/all-misc-cpp.Plo"; else rm -f "$(DEPDIR)/all-misc-cpp.Tpo"; exit 1; fi
#	source='misc/all-misc-cpp.cpp' object='all-misc-cpp.lo' libtool=yes \
#	depfile='$(DEPDIR)/all-misc-cpp.Plo' tmpdepfile='$(DEPDIR)/all-misc-cpp.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-misc-cpp.lo `test -f 'misc/all-misc-cpp.cpp' || echo '$(srcdir)/'`misc/all-misc-cpp.cpp

all-rendering-cpp.o: rendering/all-rendering-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-rendering-cpp.o -MD -MP -MF "$(DEPDIR)/all-rendering-cpp.Tpo" -c -o all-rendering-cpp.o `test -f 'rendering/all-rendering-cpp.cpp' || echo '$(srcdir)/'`rendering/all-rendering-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-rendering-cpp.Tpo" "$(DEPDIR)/all-rendering-cpp.Po"; else rm -f "$(DEPDIR)/all-rendering-cpp.Tpo"; exit 1; fi
#	source='rendering/all-rendering-cpp.cpp' object='all-rendering-cpp.o' libtool=no \
#	depfile='$(DEPDIR)/all-rendering-cpp.Po' tmpdepfile='$(DEPDIR)/all-rendering-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-rendering-cpp.o `test -f 'rendering/all-rendering-cpp.cpp' || echo '$(srcdir)/'`rendering/all-rendering-cpp.cpp

all-rendering-cpp.obj: rendering/all-rendering-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-rendering-cpp.obj -MD -MP -MF "$(DEPDIR)/all-rendering-cpp.Tpo" -c -o all-rendering-cpp.obj `if test -f 'rendering/all-rendering-cpp.cpp'; then $(CYGPATH_W) 'rendering/all-rendering-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/rendering/all-rendering-cpp.cpp'; fi`; \
	then mv -f "$(DEPDIR)/all-rendering-cpp.Tpo" "$(DEPDIR)/all-rendering-cpp.Po"; else rm -f "$(DEPDIR)/all-rendering-cpp.Tpo"; exit 1; fi
#	source='rendering/all-rendering-cpp.cpp' object='all-rendering-cpp.obj' libtool=no \
#	depfile='$(DEPDIR)/all-rendering-cpp.Po' tmpdepfile='$(DEPDIR)/all-rendering-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-rendering-cpp.obj `if test -f 'rendering/all-rendering-cpp.cpp'; then $(CYGPATH_W) 'rendering/all-rendering-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/rendering/all-rendering-cpp.cpp'; fi`

all-rendering-cpp.lo: rendering/all-rendering-cpp.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-rendering-cpp.lo -MD -MP -MF "$(DEPDIR)/all-rendering-cpp.Tpo" -c -o all-rendering-cpp.lo `test -f 'rendering/all-rendering-cpp.cpp' || echo '$(srcdir)/'`rendering/all-rendering-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-rendering-cpp.Tpo" "$(DEPDIR)/all-rendering-cpp.Plo"; else rm -f "$(DEPDIR)/all-rendering-cpp.Tpo"; exit 1; fi
#	source='rendering/all-rendering-cpp.cpp' object='all-rendering-cpp.lo' libtool=yes \
#	depfile='$(DEPDIR)/all-rendering-cpp.Plo' tmpdepfile='$(DEPDIR)/all-rendering-cpp.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-rendering-cpp.lo `test -f 'rendering/all-rendering-cpp.cpp' || echo '$(srcdir)/'`rendering/all-rendering-cpp.cpp

all-lists-cpp.o: lists/all-lists-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-lists-cpp.o -MD -MP -MF "$(DEPDIR)/all-lists-cpp.Tpo" -c -o all-lists-cpp.o `test -f 'lists/all-lists-cpp.cpp' || echo '$(srcdir)/'`lists/all-lists-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-lists-cpp.Tpo" "$(DEPDIR)/all-lists-cpp.Po"; else rm -f "$(DEPDIR)/all-lists-cpp.Tpo"; exit 1; fi
#	source='lists/all-lists-cpp.cpp' object='all-lists-cpp.o' libtool=no \
#	depfile='$(DEPDIR)/all-lists-cpp.Po' tmpdepfile='$(DEPDIR)/all-lists-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-lists-cpp.o `test -f 'lists/all-lists-cpp.cpp' || echo '$(srcdir)/'`lists/all-lists-cpp.cpp

all-lists-cpp.obj: lists/all-lists-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-lists-cpp.obj -MD -MP -MF "$(DEPDIR)/all-lists-cpp.Tpo" -c -o all-lists-cpp.obj `if test -f 'lists/all-lists-cpp.cpp'; then $(CYGPATH_W) 'lists/all-lists-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/lists/all-lists-cpp.cpp'; fi`; \
	then mv -f "$(DEPDIR)/all-lists-cpp.Tpo" "$(DEPDIR)/all-lists-cpp.Po"; else rm -f "$(DEPDIR)/all-lists-cpp.Tpo"; exit 1; fi
#	source='lists/all-lists-cpp.cpp' object='all-lists-cpp.obj' libtool=no \
#	depfile='$(DEPDIR)/all-lists-cpp.Po' tmpdepfile='$(DEPDIR)/all-lists-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-lists-cpp.obj `if test -f 'lists/all-lists-cpp.cpp'; then $(CYGPATH_W) 'lists/all-lists-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/lists/all-lists-cpp.cpp'; fi`

all-lists-cpp.lo: lists/all-lists-cpp.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-lists-cpp.lo -MD -MP -MF "$(DEPDIR)/all-lists-cpp.Tpo" -c -o all-lists-cpp.lo `test -f 'lists/all-lists-cpp.cpp' || echo '$(srcdir)/'`lists/all-lists-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-lists-cpp.Tpo" "$(DEPDIR)/all-lists-cpp.Plo"; else rm -f "$(DEPDIR)/all-lists-cpp.Tpo"; exit 1; fi
#	source='lists/all-lists-cpp.cpp' object='all-lists-cpp.lo' libtool=yes \
#	depfile='$(DEPDIR)/all-lists-cpp.Plo' tmpdepfile='$(DEPDIR)/all-lists-cpp.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-lists-cpp.lo `test -f 'lists/all-lists-cpp.cpp' || echo '$(srcdir)/'`lists/all-lists-cpp.cpp

all-nodekits-cpp.o: nodekits/all-nodekits-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-nodekits-cpp.o -MD -MP -MF "$(DEPDIR)/all-nodekits-cpp.Tpo" -c -o all-nodekits-cpp.o `test -f 'nodekits/all-nodekits-cpp.cpp' || echo '$(srcdir)/'`nodekits/all-nodekits-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-nodekits-cpp.Tpo" "$(DEPDIR)/all-nodekits-cpp.Po"; else rm -f "$(DEPDIR)/all-nodekits-cpp.Tpo"; exit 1; fi
#	source='nodekits/all-nodekits-cpp.cpp' object='all-nodekits-cpp.o' libtool=no \
#	depfile='$(DEPDIR)/all-nodekits-cpp.Po' tmpdepfile='$(DEPDIR)/all-nodekits-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-nodekits-cpp.o `test -f 'nodekits/all-nodekits-cpp.cpp' || echo '$(srcdir)/'`nodekits/all-nodekits-cpp.cpp

all-nodekits-cpp.obj: nodekits/all-nodekits-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-nodekits-cpp.obj -MD -MP -MF "$(DEPDIR)/all-nodekits-cpp.Tpo" -c -o all-nodekits-cpp.obj `if test -f 'nodekits/all-nodekits-cpp.cpp'; then $(CYGPATH_W) 'nodekits/all-nodekits-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/nodekits/all-nodekits-cpp.cpp'; fi`; \
	then mv -f "$(DEPDIR)/all-nodekits-cpp.Tpo" "$(DEPDIR)/all-nodekits-cpp.Po"; else rm -f "$(DEPDIR)/all-nodekits-cpp.Tpo"; exit 1; fi
#	source='nodekits/all-nodekits-cpp.cpp' object='all-nodekits-cpp.obj' libtool=no \
#	depfile='$(DEPDIR)/all-nodekits-cpp.Po' tmpdepfile='$(DEPDIR)/all-nodekits-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-nodekits-cpp.obj `if test -f 'nodekits/all-nodekits-cpp.cpp'; then $(CYGPATH_W) 'nodekits/all-nodekits-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/nodekits/all-nodekits-cpp.cpp'; fi`

all-nodekits-cpp.lo: nodekits/all-nodekits-cpp.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-nodekits-cpp.lo -MD -MP -MF "$(DEPDIR)/all-nodekits-cpp.Tpo" -c -o all-nodekits-cpp.lo `test -f 'nodekits/all-nodekits-cpp.cpp' || echo '$(srcdir)/'`nodekits/all-nodekits-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-nodekits-cpp.Tpo" "$(DEPDIR)/all-nodekits-cpp.Plo"; else rm -f "$(DEPDIR)/all-nodekits-cpp.Tpo"; exit 1; fi
#	source='nodekits/all-nodekits-cpp.cpp' object='all-nodekits-cpp.lo' libtool=yes \
#	depfile='$(DEPDIR)/all-nodekits-cpp.Plo' tmpdepfile='$(DEPDIR)/all-nodekits-cpp.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-nodekits-cpp.lo `test -f 'nodekits/all-nodekits-cpp.cpp' || echo '$(srcdir)/'`nodekits/all-nodekits-cpp.cpp

all-nodes-cpp.o: nodes/all-nodes-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-nodes-cpp.o -MD -MP -MF "$(DEPDIR)/all-nodes-cpp.Tpo" -c -o all-nodes-cpp.o `test -f 'nodes/all-nodes-cpp.cpp' || echo '$(srcdir)/'`nodes/all-nodes-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-nodes-cpp.Tpo" "$(DEPDIR)/all-nodes-cpp.Po"; else rm -f "$(DEPDIR)/all-nodes-cpp.Tpo"; exit 1; fi
#	source='nodes/all-nodes-cpp.cpp' object='all-nodes-cpp.o' libtool=no \
#	depfile='$(DEPDIR)/all-nodes-cpp.Po' tmpdepfile='$(DEPDIR)/all-nodes-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-nodes-cpp.o `test -f 'nodes/all-nodes-cpp.cpp' || echo '$(srcdir)/'`nodes/all-nodes-cpp.cpp

all-nodes-cpp.obj: nodes/all-nodes-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-nodes-cpp.obj -MD -MP -MF "$(DEPDIR)/all-nodes-cpp.Tpo" -c -o all-nodes-cpp.obj `if test -f 'nodes/all-nodes-cpp.cpp'; then $(CYGPATH_W) 'nodes/all-nodes-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/all-nodes-cpp.cpp'; fi`; \
	then mv -f "$(DEPDIR)/all-nodes-cpp.Tpo" "$(DEPDIR)/all-nodes-cpp.Po"; else rm -f "$(DEPDIR)/all-nodes-cpp.Tpo"; exit 1; fi
#	source='nodes/all-nodes-cpp.cpp' object='all-nodes-cpp.obj' libtool=no \
#	depfile='$(DEPDIR)/all-nodes-cpp.Po' tmpdepfile='$(DEPDIR)/all-nodes-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-nodes-cpp.obj `if test -f 'nodes/all-nodes-cpp.cpp'; then $(CYGPATH_W) 'nodes/all-nodes-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/all-nodes-cpp.cpp'; fi`

all-nodes-cpp.lo: nodes/all-nodes-cpp.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-nodes-cpp.lo -MD -MP -MF "$(DEPDIR)/all-nodes-cpp.Tpo" -c -o all-nodes-cpp.lo `test -f 'nodes/all-nodes-cpp.cpp' || echo '$(srcdir)/'`nodes/all-nodes-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-nodes-cpp.Tpo" "$(DEPDIR)/all-nodes-cpp.Plo"; else rm -f "$(DEPDIR)/all-nodes-cpp.Tpo"; exit 1; fi
#	source='nodes/all-nodes-cpp.cpp' object='all-nodes-cpp.lo' libtool=yes \
#	depfile='$(DEPDIR)/all-nodes-cpp.Plo' tmpdepfile='$(DEPDIR)/all-nodes-cpp.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-nodes-cpp.lo `test -f 'nodes/all-nodes-cpp.cpp' || echo '$(srcdir)/'`nodes/all-nodes-cpp.cpp

all-shapenodes-cpp.o: shapenodes/all-shapenodes-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-shapenodes-cpp.o -MD -MP -MF "$(DEPDIR)/all-shapenodes-cpp.Tpo" -c -o all-shapenodes-cpp.o `test -f 'shapenodes/all-shapenodes-cpp.cpp' || echo '$(srcdir)/'`shapenodes/all-shapenodes-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-shapenodes-cpp.Tpo" "$(DEPDIR)/all-shapenodes-cpp.Po"; else rm -f "$(DEPDIR)/all-shapenodes-cpp.Tpo"; exit 1; fi
#	source='shapenodes/all-shapenodes-cpp.cpp' object='all-shapenodes-cpp.o' libtool=no \
#	depfile='$(DEPDIR)/all-shapenodes-cpp.Po' tmpdepfile='$(DEPDIR)/all-shapenodes-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-shapenodes-cpp.o `test -f 'shapenodes/all-shapenodes-cpp.cpp' || echo '$(srcdir)/'`shapenodes/all-shapenodes-cpp.cpp

all-shapenodes-cpp.obj: shapenodes/all-shapenodes-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-shapenodes-cpp.obj -MD -MP -MF "$(DEPDIR)/all-shapenodes-cpp.Tpo" -c -o all-shapenodes-cpp.obj `if test -f 'shapenodes/all-shapenodes-cpp.cpp'; then $(CYGPATH_W) 'shapenodes/all-shapenodes-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/shapenodes/all-shapenodes-cpp.cpp'; fi`; \
	then mv -f "$(DEPDIR)/all-shapenodes-cpp.Tpo" "$(DEPDIR)/all-shapenodes-cpp.Po"; else rm -f "$(DEPDIR)/all-shapenodes-cpp.Tpo"; exit 1; fi
#	source='shapenodes/all-shapenodes-cpp.cpp' object='all-shapenodes-cpp.obj' libtool=no \
#	depfile='$(DEPDIR)/all-shapenodes-cpp.Po' tmpdepfile='$(DEPDIR)/all-shapenodes-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-shapenodes-cpp.obj `if test -f 'shapenodes/all-shapenodes-cpp.cpp'; then $(CYGPATH_W) 'shapenodes/all-shapenodes-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/shapenodes/all-shapenodes-cpp.cpp'; fi`

all-shapenodes-cpp.lo: shapenodes/all-shapenodes-cpp.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-shapenodes-cpp.lo -MD -MP -MF "$(DEPDIR)/all-shapenodes-cpp.Tpo" -c -o all-shapenodes-cpp.lo `test -f 'shapenodes/all-shapenodes-cpp.cpp' || echo '$(srcdir)/'`shapenodes/all-shapenodes-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-shapenodes-cpp.Tpo" "$(DEPDIR)/all-shapenodes-cpp.Plo"; else rm -f "$(DEPDIR)/all-shapenodes-cpp.Tpo"; exit 1; fi
#	source='shapenodes/all-shapenodes-cpp.cpp' object='all-shapenodes-cpp.lo' libtool=yes \
#	depfile='$(DEPDIR)/all-shapenodes-cpp.Plo' tmpdepfile='$(DEPDIR)/all-shapenodes-cpp.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-shapenodes-cpp.lo `test -f 'shapenodes/all-shapenodes-cpp.cpp' || echo '$(srcdir)/'`shapenodes/all-shapenodes-cpp.cpp

all-projectors-cpp.o: projectors/all-projectors-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-projectors-cpp.o -MD -MP -MF "$(DEPDIR)/all-projectors-cpp.Tpo" -c -o all-projectors-cpp.o `test -f 'projectors/all-projectors-cpp.cpp' || echo '$(srcdir)/'`projectors/all-projectors-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-projectors-cpp.Tpo" "$(DEPDIR)/all-projectors-cpp.Po"; else rm -f "$(DEPDIR)/all-projectors-cpp.Tpo"; exit 1; fi
#	source='projectors/all-projectors-cpp.cpp' object='all-projectors-cpp.o' libtool=no \
#	depfile='$(DEPDIR)/all-projectors-cpp.Po' tmpdepfile='$(DEPDIR)/all-projectors-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-projectors-cpp.o `test -f 'projectors/all-projectors-cpp.cpp' || echo '$(srcdir)/'`projectors/all-projectors-cpp.cpp

all-projectors-cpp.obj: projectors/all-projectors-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-projectors-cpp.obj -MD -MP -MF "$(DEPDIR)/all-projectors-cpp.Tpo" -c -o all-projectors-cpp.obj `if test -f 'projectors/all-projectors-cpp.cpp'; then $(CYGPATH_W) 'projectors/all-projectors-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/projectors/all-projectors-cpp.cpp'; fi`; \
	then mv -f "$(DEPDIR)/all-projectors-cpp.Tpo" "$(DEPDIR)/all-projectors-cpp.Po"; else rm -f "$(DEPDIR)/all-projectors-cpp.Tpo"; exit 1; fi
#	source='projectors/all-projectors-cpp.cpp' object='all-projectors-cpp.obj' libtool=no \
#	depfile='$(DEPDIR)/all-projectors-cpp.Po' tmpdepfile='$(DEPDIR)/all-projectors-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-projectors-cpp.obj `if test -f 'projectors/all-projectors-cpp.cpp'; then $(CYGPATH_W) 'projectors/all-projectors-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/projectors/all-projectors-cpp.cpp'; fi`

all-projectors-cpp.lo: projectors/all-projectors-cpp.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-projectors-cpp.lo -MD -MP -MF "$(DEPDIR)/all-projectors-cpp.Tpo" -c -o all-projectors-cpp.lo `test -f 'projectors/all-projectors-cpp.cpp' || echo '$(srcdir)/'`projectors/all-projectors-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-projectors-cpp.Tpo" "$(DEPDIR)/all-projectors-cpp.Plo"; else rm -f "$(DEPDIR)/all-projectors-cpp.Tpo"; exit 1; fi
#	source='projectors/all-projectors-cpp.cpp' object='all-projectors-cpp.lo' libtool=yes \
#	depfile='$(DEPDIR)/all-projectors-cpp.Plo' tmpdepfile='$(DEPDIR)/all-projectors-cpp.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-projectors-cpp.lo `test -f 'projectors/all-projectors-cpp.cpp' || echo '$(srcdir)/'`projectors/all-projectors-cpp.cpp

all-sensors-cpp.o: sensors/all-sensors-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-sensors-cpp.o -MD -MP -MF "$(DEPDIR)/all-sensors-cpp.Tpo" -c -o all-sensors-cpp.o `test -f 'sensors/all-sensors-cpp.cpp' || echo '$(srcdir)/'`sensors/all-sensors-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-sensors-cpp.Tpo" "$(DEPDIR)/all-sensors-cpp.Po"; else rm -f "$(DEPDIR)/all-sensors-cpp.Tpo"; exit 1; fi
#	source='sensors/all-sensors-cpp.cpp' object='all-sensors-cpp.o' libtool=no \
#	depfile='$(DEPDIR)/all-sensors-cpp.Po' tmpdepfile='$(DEPDIR)/all-sensors-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-sensors-cpp.o `test -f 'sensors/all-sensors-cpp.cpp' || echo '$(srcdir)/'`sensors/all-sensors-cpp.cpp

all-sensors-cpp.obj: sensors/all-sensors-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-sensors-cpp.obj -MD -MP -MF "$(DEPDIR)/all-sensors-cpp.Tpo" -c -o all-sensors-cpp.obj `if test -f 'sensors/all-sensors-cpp.cpp'; then $(CYGPATH_W) 'sensors/all-sensors-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/sensors/all-sensors-cpp.cpp'; fi`; \
	then mv -f "$(DEPDIR)/all-sensors-cpp.Tpo" "$(DEPDIR)/all-sensors-cpp.Po"; else rm -f "$(DEPDIR)/all-sensors-cpp.Tpo"; exit 1; fi
#	source='sensors/all-sensors-cpp.cpp' object='all-sensors-cpp.obj' libtool=no \
#	depfile='$(DEPDIR)/all-sensors-cpp.Po' tmpdepfile='$(DEPDIR)/all-sensors-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-sensors-cpp.obj `if test -f 'sensors/all-sensors-cpp.cpp'; then $(CYGPATH_W) 'sensors/all-sensors-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/sensors/all-sensors-cpp.cpp'; fi`

all-sensors-cpp.lo: sensors/all-sensors-cpp.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-sensors-cpp.lo -MD -MP -MF "$(DEPDIR)/all-sensors-cpp.Tpo" -c -o all-sensors-cpp.lo `test -f 'sensors/all-sensors-cpp.cpp' || echo '$(srcdir)/'`sensors/all-sensors-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-sensors-cpp.Tpo" "$(DEPDIR)/all-sensors-cpp.Plo"; else rm -f "$(DEPDIR)/all-sensors-cpp.Tpo"; exit 1; fi
#	source='sensors/all-sensors-cpp.cpp' object='all-sensors-cpp.lo' libtool=yes \
#	depfile='$(DEPDIR)/all-sensors-cpp.Plo' tmpdepfile='$(DEPDIR)/all-sensors-cpp.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-sensors-cpp.lo `test -f 'sensors/all-sensors-cpp.cpp' || echo '$(srcdir)/'`sensors/all-sensors-cpp.cpp

all-details-cpp.o: details/all-details-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-details-cpp.o -MD -MP -MF "$(DEPDIR)/all-details-cpp.Tpo" -c -o all-details-cpp.o `test -f 'details/all-details-cpp.cpp' || echo '$(srcdir)/'`details/all-details-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-details-cpp.Tpo" "$(DEPDIR)/all-details-cpp.Po"; else rm -f "$(DEPDIR)/all-details-cpp.Tpo"; exit 1; fi
#	source='details/all-details-cpp.cpp' object='all-details-cpp.o' libtool=no \
#	depfile='$(DEPDIR)/all-details-cpp.Po' tmpdepfile='$(DEPDIR)/all-details-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-details-cpp.o `test -f 'details/all-details-cpp.cpp' || echo '$(srcdir)/'`details/all-details-cpp.cpp

all-details-cpp.obj: details/all-details-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-details-cpp.obj -MD -MP -MF "$(DEPDIR)/all-details-cpp.Tpo" -c -o all-details-cpp.obj `if test -f 'details/all-details-cpp.cpp'; then $(CYGPATH_W) 'details/all-details-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/details/all-details-cpp.cpp'; fi`; \
	then mv -f "$(DEPDIR)/all-details-cpp.Tpo" "$(DEPDIR)/all-details-cpp.Po"; else rm -f "$(DEPDIR)/all-details-cpp.Tpo"; exit 1; fi
#	source='details/all-details-cpp.cpp' object='all-details-cpp.obj' libtool=no \
#	depfile='$(DEPDIR)/all-details-cpp.Po' tmpdepfile='$(DEPDIR)/all-details-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-details-cpp.obj `if test -f 'details/all-details-cpp.cpp'; then $(CYGPATH_W) 'details/all-details-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/details/all-details-cpp.cpp'; fi`

all-details-cpp.lo: details/all-details-cpp.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-details-cpp.lo -MD -MP -MF "$(DEPDIR)/all-details-cpp.Tpo" -c -o all-details-cpp.lo `test -f 'details/all-details-cpp.cpp' || echo '$(srcdir)/'`details/all-details-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-details-cpp.Tpo" "$(DEPDIR)/all-details-cpp.Plo"; else rm -f "$(DEPDIR)/all-details-cpp.Tpo"; exit 1; fi
#	source='details/all-details-cpp.cpp' object='all-details-cpp.lo' libtool=yes \
#	depfile='$(DEPDIR)/all-details-cpp.Plo' tmpdepfile='$(DEPDIR)/all-details-cpp.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-details-cpp.lo `test -f 'details/all-details-cpp.cpp' || echo '$(srcdir)/'`details/all-details-cpp.cpp

all-draggers-cpp.o: draggers/all-draggers-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-draggers-cpp.o -MD -MP -MF "$(DEPDIR)/all-draggers-cpp.Tpo" -c -o all-draggers-cpp.o `test -f 'draggers/all-draggers-cpp.cpp' || echo '$(srcdir)/'`draggers/all-draggers-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-draggers-cpp.Tpo" "$(DEPDIR)/all-draggers-cpp.Po"; else rm -f "$(DEPDIR)/all-draggers-cpp.Tpo"; exit 1; fi
#	source='draggers/all-draggers-cpp.cpp' object='all-draggers-cpp.o' libtool=no \
#	depfile='$(DEPDIR)/all-draggers-cpp.Po' tmpdepfile='$(DEPDIR)/all-draggers-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-draggers-cpp.o `test -f 'draggers/all-draggers-cpp.cpp' || echo '$(srcdir)/'`draggers/all-draggers-cpp.cpp

all-draggers-cpp.obj: draggers/all-draggers-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-draggers-cpp.obj -MD -MP -MF "$(DEPDIR)/all-draggers-cpp.Tpo" -c -o all-draggers-cpp.obj `if test -f 'draggers/all-draggers-cpp.cpp'; then $(CYGPATH_W) 'draggers/all-draggers-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/draggers/all-draggers-cpp.cpp'; fi`; \
	then mv -f "$(DEPDIR)/all-draggers-cpp.Tpo" "$(DEPDIR)/all-draggers-cpp.Po"; else rm -f "$(DEPDIR)/all-draggers-cpp.Tpo"; exit 1; fi
#	source='draggers/all-draggers-cpp.cpp' object='all-draggers-cpp.obj' libtool=no \
#	depfile='$(DEPDIR)/all-draggers-cpp.Po' tmpdepfile='$(DEPDIR)/all-draggers-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-draggers-cpp.obj `if test -f 'draggers/all-draggers-cpp.cpp'; then $(CYGPATH_W) 'draggers/all-draggers-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/draggers/all-draggers-cpp.cpp'; fi`

all-draggers-cpp.lo: draggers/all-draggers-cpp.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-draggers-cpp.lo -MD -MP -MF "$(DEPDIR)/all-draggers-cpp.Tpo" -c -o all-draggers-cpp.lo `test -f 'draggers/all-draggers-cpp.cpp' || echo '$(srcdir)/'`draggers/all-draggers-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-draggers-cpp.Tpo" "$(DEPDIR)/all-draggers-cpp.Plo"; else rm -f "$(DEPDIR)/all-draggers-cpp.Tpo"; exit 1; fi
#	source='draggers/all-draggers-cpp.cpp' object='all-draggers-cpp.lo' libtool=yes \
#	depfile='$(DEPDIR)/all-draggers-cpp.Plo' tmpdepfile='$(DEPDIR)/all-draggers-cpp.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-draggers-cpp.lo `test -f 'draggers/all-draggers-cpp.cpp' || echo '$(srcdir)/'`draggers/all-draggers-cpp.cpp

all-manips-cpp.o: manips/all-manips-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-manips-cpp.o -MD -MP -MF "$(DEPDIR)/all-manips-cpp.Tpo" -c -o all-manips-cpp.o `test -f 'manips/all-manips-cpp.cpp' || echo '$(srcdir)/'`manips/all-manips-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-manips-cpp.Tpo" "$(DEPDIR)/all-manips-cpp.Po"; else rm -f "$(DEPDIR)/all-manips-cpp.Tpo"; exit 1; fi
#	source='manips/all-manips-cpp.cpp' object='all-manips-cpp.o' libtool=no \
#	depfile='$(DEPDIR)/all-manips-cpp.Po' tmpdepfile='$(DEPDIR)/all-manips-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-manips-cpp.o `test -f 'manips/all-manips-cpp.cpp' || echo '$(srcdir)/'`manips/all-manips-cpp.cpp

all-manips-cpp.obj: manips/all-manips-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-manips-cpp.obj -MD -MP -MF "$(DEPDIR)/all-manips-cpp.Tpo" -c -o all-manips-cpp.obj `if test -f 'manips/all-manips-cpp.cpp'; then $(CYGPATH_W) 'manips/all-manips-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/manips/all-manips-cpp.cpp'; fi`; \
	then mv -f "$(DEPDIR)/all-manips-cpp.Tpo" "$(DEPDIR)/all-manips-cpp.Po"; else rm -f "$(DEPDIR)/all-manips-cpp.Tpo"; exit 1; fi
#	source='manips/all-manips-cpp.cpp' object='all-manips-cpp.obj' libtool=no \
#	depfile='$(DEPDIR)/all-manips-cpp.Po' tmpdepfile='$(DEPDIR)/all-manips-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-manips-cpp.obj `if test -f 'manips/all-manips-cpp.cpp'; then $(CYGPATH_W) 'manips/all-manips-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/manips/all-manips-cpp.cpp'; fi`

all-manips-cpp.lo: manips/all-manips-cpp.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-manips-cpp.lo -MD -MP -MF "$(DEPDIR)/all-manips-cpp.Tpo" -c -o all-manips-cpp.lo `test -f 'manips/all-manips-cpp.cpp' || echo '$(srcdir)/'`manips/all-manips-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-manips-cpp.Tpo" "$(DEPDIR)/all-manips-cpp.Plo"; else rm -f "$(DEPDIR)/all-manips-cpp.Tpo"; exit 1; fi
#	source='manips/all-manips-cpp.cpp' object='all-manips-cpp.lo' libtool=yes \
#	depfile='$(DEPDIR)/all-manips-cpp.Plo' tmpdepfile='$(DEPDIR)/all-manips-cpp.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-manips-cpp.lo `test -f 'manips/all-manips-cpp.cpp' || echo '$(srcdir)/'`manips/all-manips-cpp.cpp

all-upgraders-cpp.o: upgraders/all-upgraders-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-upgraders-cpp.o -MD -MP -MF "$(DEPDIR)/all-upgraders-cpp.Tpo" -c -o all-upgraders-cpp.o `test -f 'upgraders/all-upgraders-cpp.cpp' || echo '$(srcdir)/'`upgraders/all-upgraders-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-upgraders-cpp.Tpo" "$(DEPDIR)/all-upgraders-cpp.Po"; else rm -f "$(DEPDIR)/all-upgraders-cpp.Tpo"; exit 1; fi
#	source='upgraders/all-upgraders-cpp.cpp' object='all-upgraders-cpp.o' libtool=no \
#	depfile='$(DEPDIR)/all-upgraders-cpp.Po' tmpdepfile='$(DEPDIR)/all-upgraders-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-upgraders-cpp.o `test -f 'upgraders/all-upgraders-cpp.cpp' || echo '$(srcdir)/'`upgraders/all-upgraders-cpp.cpp

all-upgraders-cpp.obj: upgraders/all-upgraders-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-upgraders-cpp.obj -MD -MP -MF "$(DEPDIR)/all-upgraders-cpp.Tpo" -c -o all-upgraders-cpp.obj `if test -f 'upgraders/all-upgraders-cpp.cpp'; then $(CYGPATH_W) 'upgraders/all-upgraders-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/upgraders/all-upgraders-cpp.cpp'; fi`; \
	then mv -f "$(DEPDIR)/all-upgraders-cpp.Tpo" "$(DEPDIR)/all-upgraders-cpp.Po"; else rm -f "$(DEPDIR)/all-upgraders-cpp.Tpo"; exit 1; fi
#	source='upgraders/all-upgraders-cpp.cpp' object='all-upgraders-cpp.obj' libtool=no \
#	depfile='$(DEPDIR)/all-upgraders-cpp.Po' tmpdepfile='$(DEPDIR)/all-upgraders-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-upgraders-cpp.obj `if test -f 'upgraders/all-upgraders-cpp.cpp'; then $(CYGPATH_W) 'upgraders/all-upgraders-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/upgraders/all-upgraders-cpp.cpp'; fi`

all-upgraders-cpp.lo: upgraders/all-upgraders-cpp.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-upgraders-cpp.lo -MD -MP -MF "$(DEPDIR)/all-upgraders-cpp.Tpo" -c -o all-upgraders-cpp.lo `test -f 'upgraders/all-upgraders-cpp.cpp' || echo '$(srcdir)/'`upgraders/all-upgraders-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-upgraders-cpp.Tpo" "$(DEPDIR)/all-upgraders-cpp.Plo"; else rm -f "$(DEPDIR)/all-upgraders-cpp.Tpo"; exit 1; fi
#	source='upgraders/all-upgraders-cpp.cpp' object='all-upgraders-cpp.lo' libtool=yes \
#	depfile='$(DEPDIR)/all-upgraders-cpp.Plo' tmpdepfile='$(DEPDIR)/all-upgraders-cpp.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-upgraders-cpp.lo `test -f 'upgraders/all-upgraders-cpp.cpp' || echo '$(srcdir)/'`upgraders/all-upgraders-cpp.cpp

all-navigation-cpp.o: navigation/all-navigation-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-navigation-cpp.o -MD -MP -MF "$(DEPDIR)/all-navigation-cpp.Tpo" -c -o all-navigation-cpp.o `test -f 'navigation/all-navigation-cpp.cpp' || echo '$(srcdir)/'`navigation/all-navigation-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-navigation-cpp.Tpo" "$(DEPDIR)/all-navigation-cpp.Po"; else rm -f "$(DEPDIR)/all-navigation-cpp.Tpo"; exit 1; fi
#	source='navigation/all-navigation-cpp.cpp' object='all-navigation-cpp.o' libtool=no \
#	depfile='$(DEPDIR)/all-navigation-cpp.Po' tmpdepfile='$(DEPDIR)/all-navigation-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-navigation-cpp.o `test -f 'navigation/all-navigation-cpp.cpp' || echo '$(srcdir)/'`navigation/all-navigation-cpp.cpp

all-navigation-cpp.obj: navigation/all-navigation-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-navigation-cpp.obj -MD -MP -MF "$(DEPDIR)/all-navigation-cpp.Tpo" -c -o all-navigation-cpp.obj `if test -f 'navigation/all-navigation-cpp.cpp'; then $(CYGPATH_W) 'navigation/all-navigation-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/navigation/all-navigation-cpp.cpp'; fi`; \
	then mv -f "$(DEPDIR)/all-navigation-cpp.Tpo" "$(DEPDIR)/all-navigation-cpp.Po"; else rm -f "$(DEPDIR)/all-navigation-cpp.Tpo"; exit 1; fi
#	source='navigation/all-navigation-cpp.cpp' object='all-navigation-cpp.obj' libtool=no \
#	depfile='$(DEPDIR)/all-navigation-cpp.Po' tmpdepfile='$(DEPDIR)/all-navigation-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-navigation-cpp.obj `if test -f 'navigation/all-navigation-cpp.cpp'; then $(CYGPATH_W) 'navigation/all-navigation-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/navigation/all-navigation-cpp.cpp'; fi`

all-navigation-cpp.lo: navigation/all-navigation-cpp.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-navigation-cpp.lo -MD -MP -MF "$(DEPDIR)/all-navigation-cpp.Tpo" -c -o all-navigation-cpp.lo `test -f 'navigation/all-navigation-cpp.cpp' || echo '$(srcdir)/'`navigation/all-navigation-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-navigation-cpp.Tpo" "$(DEPDIR)/all-navigation-cpp.Plo"; else rm -f "$(DEPDIR)/all-navigation-cpp.Tpo"; exit 1; fi
#	source='navigation/all-navigation-cpp.cpp' object='all-navigation-cpp.lo' libtool=yes \
#	depfile='$(DEPDIR)/all-navigation-cpp.Plo' tmpdepfile='$(DEPDIR)/all-navigation-cpp.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-navigation-cpp.lo `test -f 'navigation/all-navigation-cpp.cpp' || echo '$(srcdir)/'`navigation/all-navigation-cpp.cpp

all-3ds-cpp.o: 3ds/all-3ds-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-3ds-cpp.o -MD -MP -MF "$(DEPDIR)/all-3ds-cpp.Tpo" -c -o all-3ds-cpp.o `test -f '3ds/all-3ds-cpp.cpp' || echo '$(srcdir)/'`3ds/all-3ds-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-3ds-cpp.Tpo" "$(DEPDIR)/all-3ds-cpp.Po"; else rm -f "$(DEPDIR)/all-3ds-cpp.Tpo"; exit 1; fi
#	source='3ds/all-3ds-cpp.cpp' object='all-3ds-cpp.o' libtool=no \
#	depfile='$(DEPDIR)/all-3ds-cpp.Po' tmpdepfile='$(DEPDIR)/all-3ds-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-3ds-cpp.o `test -f '3ds/all-3ds-cpp.cpp' || echo '$(srcdir)/'`3ds/all-3ds-cpp.cpp

all-3ds-cpp.obj: 3ds/all-3ds-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-3ds-cpp.obj -MD -MP -MF "$(DEPDIR)/all-3ds-cpp.Tpo" -c -o all-3ds-cpp.obj `if test -f '3ds/all-3ds-cpp.cpp'; then $(CYGPATH_W) '3ds/all-3ds-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/3ds/all-3ds-cpp.cpp'; fi`; \
	then mv -f "$(DEPDIR)/all-3ds-cpp.Tpo" "$(DEPDIR)/all-3ds-cpp.Po"; else rm -f "$(DEPDIR)/all-3ds-cpp.Tpo"; exit 1; fi
#	source='3ds/all-3ds-cpp.cpp' object='all-3ds-cpp.obj' libtool=no \
#	depfile='$(DEPDIR)/all-3ds-cpp.Po' tmpdepfile='$(DEPDIR)/all-3ds-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-3ds-cpp.obj `if test -f '3ds/all-3ds-cpp.cpp'; then $(CYGPATH_W) '3ds/all-3ds-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/3ds/all-3ds-cpp.cpp'; fi`

all-3ds-cpp.lo: 3ds/all-3ds-cpp.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-3ds-cpp.lo -MD -MP -MF "$(DEPDIR)/all-3ds-cpp.Tpo" -c -o all-3ds-cpp.lo `test -f '3ds/all-3ds-cpp.cpp' || echo '$(srcdir)/'`3ds/all-3ds-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-3ds-cpp.Tpo" "$(DEPDIR)/all-3ds-cpp.Plo"; else rm -f "$(DEPDIR)/all-3ds-cpp.Tpo"; exit 1; fi
#	source='3ds/all-3ds-cpp.cpp' object='all-3ds-cpp.lo' libtool=yes \
#	depfile='$(DEPDIR)/all-3ds-cpp.Plo' tmpdepfile='$(DEPDIR)/all-3ds-cpp.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-3ds-cpp.lo `test -f '3ds/all-3ds-cpp.cpp' || echo '$(srcdir)/'`3ds/all-3ds-cpp.cpp

all-collision-cpp.o: collision/all-collision-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-collision-cpp.o -MD -MP -MF "$(DEPDIR)/all-collision-cpp.Tpo" -c -o all-collision-cpp.o `test -f 'collision/all-collision-cpp.cpp' || echo '$(srcdir)/'`collision/all-collision-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-collision-cpp.Tpo" "$(DEPDIR)/all-collision-cpp.Po"; else rm -f "$(DEPDIR)/all-collision-cpp.Tpo"; exit 1; fi
#	source='collision/all-collision-cpp.cpp' object='all-collision-cpp.o' libtool=no \
#	depfile='$(DEPDIR)/all-collision-cpp.Po' tmpdepfile='$(DEPDIR)/all-collision-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-collision-cpp.o `test -f 'collision/all-collision-cpp.cpp' || echo '$(srcdir)/'`collision/all-collision-cpp.cpp

all-collision-cpp.obj: collision/all-collision-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-collision-cpp.obj -MD -MP -MF "$(DEPDIR)/all-collision-cpp.Tpo" -c -o all-collision-cpp.obj `if test -f 'collision/all-collision-cpp.cpp'; then $(CYGPATH_W) 'collision/all-collision-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/collision/all-collision-cpp.cpp'; fi`; \
	then mv -f "$(DEPDIR)/all-collision-cpp.Tpo" "$(DEPDIR)/all-collision-cpp.Po"; else rm -f "$(DEPDIR)/all-collision-cpp.Tpo"; exit 1; fi
#	source='collision/all-collision-cpp.cpp' object='all-collision-cpp.obj' libtool=no \
#	depfile='$(DEPDIR)/all-collision-cpp.Po' tmpdepfile='$(DEPDIR)/all-collision-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-collision-cpp.obj `if test -f 'collision/all-collision-cpp.cpp'; then $(CYGPATH_W) 'collision/all-collision-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/collision/all-collision-cpp.cpp'; fi`

all-collision-cpp.lo: collision/all-collision-cpp.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-collision-cpp.lo -MD -MP -MF "$(DEPDIR)/all-collision-cpp.Tpo" -c -o all-collision-cpp.lo `test -f 'collision/all-collision-cpp.cpp' || echo '$(srcdir)/'`collision/all-collision-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-collision-cpp.Tpo" "$(DEPDIR)/all-collision-cpp.Plo"; else rm -f "$(DEPDIR)/all-collision-cpp.Tpo"; exit 1; fi
#	source='collision/all-collision-cpp.cpp' object='all-collision-cpp.lo' libtool=yes \
#	depfile='$(DEPDIR)/all-collision-cpp.Plo' tmpdepfile='$(DEPDIR)/all-collision-cpp.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-collision-cpp.lo `test -f 'collision/all-collision-cpp.cpp' || echo '$(srcdir)/'`collision/all-collision-cpp.cpp

all-hardcopy-cpp.o: hardcopy/all-hardcopy-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-hardcopy-cpp.o -MD -MP -MF "$(DEPDIR)/all-hardcopy-cpp.Tpo" -c -o all-hardcopy-cpp.o `test -f 'hardcopy/all-hardcopy-cpp.cpp' || echo '$(srcdir)/'`hardcopy/all-hardcopy-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-hardcopy-cpp.Tpo" "$(DEPDIR)/all-hardcopy-cpp.Po"; else rm -f "$(DEPDIR)/all-hardcopy-cpp.Tpo"; exit 1; fi
#	source='hardcopy/all-hardcopy-cpp.cpp' object='all-hardcopy-cpp.o' libtool=no \
#	depfile='$(DEPDIR)/all-hardcopy-cpp.Po' tmpdepfile='$(DEPDIR)/all-hardcopy-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-hardcopy-cpp.o `test -f 'hardcopy/all-hardcopy-cpp.cpp' || echo '$(srcdir)/'`hardcopy/all-hardcopy-cpp.cpp

all-hardcopy-cpp.obj: hardcopy/all-hardcopy-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-hardcopy-cpp.obj -MD -MP -MF "$(DEPDIR)/all-hardcopy-cpp.Tpo" -c -o all-hardcopy-cpp.obj `if test -f 'hardcopy/all-hardcopy-cpp.cpp'; then $(CYGPATH_W) 'hardcopy/all-hardcopy-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/hardcopy/all-hardcopy-cpp.cpp'; fi`; \
	then mv -f "$(DEPDIR)/all-hardcopy-cpp.Tpo" "$(DEPDIR)/all-hardcopy-cpp.Po"; else rm -f "$(DEPDIR)/all-hardcopy-cpp.Tpo"; exit 1; fi
#	source='hardcopy/all-hardcopy-cpp.cpp' object='all-hardcopy-cpp.obj' libtool=no \
#	depfile='$(DEPDIR)/all-hardcopy-cpp.Po' tmpdepfile='$(DEPDIR)/all-hardcopy-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-hardcopy-cpp.obj `if test -f 'hardcopy/all-hardcopy-cpp.cpp'; then $(CYGPATH_W) 'hardcopy/all-hardcopy-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/hardcopy/all-hardcopy-cpp.cpp'; fi`

all-hardcopy-cpp.lo: hardcopy/all-hardcopy-cpp.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-hardcopy-cpp.lo -MD -MP -MF "$(DEPDIR)/all-hardcopy-cpp.Tpo" -c -o all-hardcopy-cpp.lo `test -f 'hardcopy/all-hardcopy-cpp.cpp' || echo '$(srcdir)/'`hardcopy/all-hardcopy-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-hardcopy-cpp.Tpo" "$(DEPDIR)/all-hardcopy-cpp.Plo"; else rm -f "$(DEPDIR)/all-hardcopy-cpp.Tpo"; exit 1; fi
#	source='hardcopy/all-hardcopy-cpp.cpp' object='all-hardcopy-cpp.lo' libtool=yes \
#	depfile='$(DEPDIR)/all-hardcopy-cpp.Plo' tmpdepfile='$(DEPDIR)/all-hardcopy-cpp.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-hardcopy-cpp.lo `test -f 'hardcopy/all-hardcopy-cpp.cpp' || echo '$(srcdir)/'`hardcopy/all-hardcopy-cpp.cpp

all-threads-cpp.o: threads/all-threads-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-threads-cpp.o -MD -MP -MF "$(DEPDIR)/all-threads-cpp.Tpo" -c -o all-threads-cpp.o `test -f 'threads/all-threads-cpp.cpp' || echo '$(srcdir)/'`threads/all-threads-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-threads-cpp.Tpo" "$(DEPDIR)/all-threads-cpp.Po"; else rm -f "$(DEPDIR)/all-threads-cpp.Tpo"; exit 1; fi
#	source='threads/all-threads-cpp.cpp' object='all-threads-cpp.o' libtool=no \
#	depfile='$(DEPDIR)/all-threads-cpp.Po' tmpdepfile='$(DEPDIR)/all-threads-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-threads-cpp.o `test -f 'threads/all-threads-cpp.cpp' || echo '$(srcdir)/'`threads/all-threads-cpp.cpp

all-threads-cpp.obj: threads/all-threads-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-threads-cpp.obj -MD -MP -MF "$(DEPDIR)/all-threads-cpp.Tpo" -c -o all-threads-cpp.obj `if test -f 'threads/all-threads-cpp.cpp'; then $(CYGPATH_W) 'threads/all-threads-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/threads/all-threads-cpp.cpp'; fi`; \
	then mv -f "$(DEPDIR)/all-threads-cpp.Tpo" "$(DEPDIR)/all-threads-cpp.Po"; else rm -f "$(DEPDIR)/all-threads-cpp.Tpo"; exit 1; fi
#	source='threads/all-threads-cpp.cpp' object='all-threads-cpp.obj' libtool=no \
#	depfile='$(DEPDIR)/all-threads-cpp.Po' tmpdepfile='$(DEPDIR)/all-threads-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-threads-cpp.obj `if test -f 'threads/all-threads-cpp.cpp'; then $(CYGPATH_W) 'threads/all-threads-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/threads/all-threads-cpp.cpp'; fi`

all-threads-cpp.lo: threads/all-threads-cpp.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-threads-cpp.lo -MD -MP -MF "$(DEPDIR)/all-threads-cpp.Tpo" -c -o all-threads-cpp.lo `test -f 'threads/all-threads-cpp.cpp' || echo '$(srcdir)/'`threads/all-threads-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-threads-cpp.Tpo" "$(DEPDIR)/all-threads-cpp.Plo"; else rm -f "$(DEPDIR)/all-threads-cpp.Tpo"; exit 1; fi
#	source='threads/all-threads-cpp.cpp' object='all-threads-cpp.lo' libtool=yes \
#	depfile='$(DEPDIR)/all-threads-cpp.Plo' tmpdepfile='$(DEPDIR)/all-threads-cpp.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-threads-cpp.lo `test -f 'threads/all-threads-cpp.cpp' || echo '$(srcdir)/'`threads/all-threads-cpp.cpp

all-shaders-cpp.o: shaders/all-shaders-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-shaders-cpp.o -MD -MP -MF "$(DEPDIR)/all-shaders-cpp.Tpo" -c -o all-shaders-cpp.o `test -f 'shaders/all-shaders-cpp.cpp' || echo '$(srcdir)/'`shaders/all-shaders-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-shaders-cpp.Tpo" "$(DEPDIR)/all-shaders-cpp.Po"; else rm -f "$(DEPDIR)/all-shaders-cpp.Tpo"; exit 1; fi
#	source='shaders/all-shaders-cpp.cpp' object='all-shaders-cpp.o' libtool=no \
#	depfile='$(DEPDIR)/all-shaders-cpp.Po' tmpdepfile='$(DEPDIR)/all-shaders-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-shaders-cpp.o `test -f 'shaders/all-shaders-cpp.cpp' || echo '$(srcdir)/'`shaders/all-shaders-cpp.cpp

all-shaders-cpp.obj: shaders/all-shaders-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-shaders-cpp.obj -MD -MP -MF "$(DEPDIR)/all-shaders-cpp.Tpo" -c -o all-shaders-cpp.obj `if test -f 'shaders/all-shaders-cpp.cpp'; then $(CYGPATH_W) 'shaders/all-shaders-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/shaders/all-shaders-cpp.cpp'; fi`; \
	then mv -f "$(DEPDIR)/all-shaders-cpp.Tpo" "$(DEPDIR)/all-shaders-cpp.Po"; else rm -f "$(DEPDIR)/all-shaders-cpp.Tpo"; exit 1; fi
#	source='shaders/all-shaders-cpp.cpp' object='all-shaders-cpp.obj' libtool=no \
#	depfile='$(DEPDIR)/all-shaders-cpp.Po' tmpdepfile='$(DEPDIR)/all-shaders-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-shaders-cpp.obj `if test -f 'shaders/all-shaders-cpp.cpp'; then $(CYGPATH_W) 'shaders/all-shaders-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/shaders/all-shaders-cpp.cpp'; fi`

all-shaders-cpp.lo: shaders/all-shaders-cpp.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-shaders-cpp.lo -MD -MP -MF "$(DEPDIR)/all-shaders-cpp.Tpo" -c -o all-shaders-cpp.lo `test -f 'shaders/all-shaders-cpp.cpp' || echo '$(srcdir)/'`shaders/all-shaders-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-shaders-cpp.Tpo" "$(DEPDIR)/all-shaders-cpp.Plo"; else rm -f "$(DEPDIR)/all-shaders-cpp.Tpo"; exit 1; fi
#	source='shaders/all-shaders-cpp.cpp' object='all-shaders-cpp.lo' libtool=yes \
#	depfile='$(DEPDIR)/all-shaders-cpp.Plo' tmpdepfile='$(DEPDIR)/all-shaders-cpp.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-shaders-cpp.lo `test -f 'shaders/all-shaders-cpp.cpp' || echo '$(srcdir)/'`shaders/all-shaders-cpp.cpp

all-shadows-cpp.o: shadows/all-shadows-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-shadows-cpp.o -MD -MP -MF "$(DEPDIR)/all-shadows-cpp.Tpo" -c -o all-shadows-cpp.o `test -f 'shadows/all-shadows-cpp.cpp' || echo '$(srcdir)/'`shadows/all-shadows-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-shadows-cpp.Tpo" "$(DEPDIR)/all-shadows-cpp.Po"; else rm -f "$(DEPDIR)/all-shadows-cpp.Tpo"; exit 1; fi
#	source='shadows/all-shadows-cpp.cpp' object='all-shadows-cpp.o' libtool=no \
#	depfile='$(DEPDIR)/all-shadows-cpp.Po' tmpdepfile='$(DEPDIR)/all-shadows-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-shadows-cpp.o `test -f 'shadows/all-shadows-cpp.cpp' || echo '$(srcdir)/'`shadows/all-shadows-cpp.cpp

all-shadows-cpp.obj: shadows/all-shadows-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-shadows-cpp.obj -MD -MP -MF "$(DEPDIR)/all-shadows-cpp.Tpo" -c -o all-shadows-cpp.obj `if test -f 'shadows/all-shadows-cpp.cpp'; then $(CYGPATH_W) 'shadows/all-shadows-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/shadows/all-shadows-cpp.cpp'; fi`; \
	then mv -f "$(DEPDIR)/all-shadows-cpp.Tpo" "$(DEPDIR)/all-shadows-cpp.Po"; else rm -f "$(DEPDIR)/all-shadows-cpp.Tpo"; exit 1; fi
#	source='shadows/all-shadows-cpp.cpp' object='all-shadows-cpp.obj' libtool=no \
#	depfile='$(DEPDIR)/all-shadows-cpp.Po' tmpdepfile='$(DEPDIR)/all-shadows-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-shadows-cpp.obj `if test -f 'shadows/all-shadows-cpp.cpp'; then $(CYGPATH_W) 'shadows/all-shadows-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/shadows/all-shadows-cpp.cpp'; fi`

all-shadows-cpp.lo: shadows/all-shadows-cpp.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-shadows-cpp.lo -MD -MP -MF "$(DEPDIR)/all-shadows-cpp.Tpo" -c -o all-shadows-cpp.lo `test -f 'shadows/all-shadows-cpp.cpp' || echo '$(srcdir)/'`shadows/all-shadows-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-shadows-cpp.Tpo" "$(DEPDIR)/all-shadows-cpp.Plo"; else rm -f "$(DEPDIR)/all-shadows-cpp.Tpo"; exit 1; fi
#	source='shadows/all-shadows-cpp.cpp' object='all-shadows-cpp.lo' libtool=yes \
#	depfile='$(DEPDIR)/all-shadows-cpp.Plo' tmpdepfile='$(DEPDIR)/all-shadows-cpp.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-shadows-cpp.lo `test -f 'shadows/all-shadows-cpp.cpp' || echo '$(srcdir)/'`shadows/all-shadows-cpp.cpp

all-geo-cpp.o: geo/all-geo-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-geo-cpp.o -MD -MP -MF "$(DEPDIR)/all-geo-cpp.Tpo" -c -o all-geo-cpp.o `test -f 'geo/all-geo-cpp.cpp' || echo '$(srcdir)/'`geo/all-geo-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-geo-cpp.Tpo" "$(DEPDIR)/all-geo-cpp.Po"; else rm -f "$(DEPDIR)/all-geo-cpp.Tpo"; exit 1; fi
#	source='geo/all-geo-cpp.cpp' object='all-geo-cpp.o' libtool=no \
#	depfile='$(DEPDIR)/all-geo-cpp.Po' tmpdepfile='$(DEPDIR)/all-geo-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-geo-cpp.o `test -f 'geo/all-geo-cpp.cpp' || echo '$(srcdir)/'`geo/all-geo-cpp.cpp

all-geo-cpp.obj: geo/all-geo-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-geo-cpp.obj -MD -MP -MF "$(DEPDIR)/all-geo-cpp.Tpo" -c -o all-geo-cpp.obj `if test -f 'geo/all-geo-cpp.cpp'; then $(CYGPATH_W) 'geo/all-geo-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/geo/all-geo-cpp.cpp'; fi`; \
	then mv -f "$(DEPDIR)/all-geo-cpp.Tpo" "$(DEPDIR)/all-geo-cpp.Po"; else rm -f "$(DEPDIR)/all-geo-cpp.Tpo"; exit 1; fi
#	source='geo/all-geo-cpp.cpp' object='all-geo-cpp.obj' libtool=no \
#	depfile='$(DEPDIR)/all-geo-cpp.Po' tmpdepfile='$(DEPDIR)/all-geo-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-geo-cpp.obj `if test -f 'geo/all-geo-cpp.cpp'; then $(CYGPATH_W) 'geo/all-geo-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/geo/all-geo-cpp.cpp'; fi`

all-geo-cpp.lo: geo/all-geo-cpp.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-geo-cpp.lo -MD -MP -MF "$(DEPDIR)/all-geo-cpp.Tpo" -c -o all-geo-cpp.lo `test -f 'geo/all-geo-cpp.cpp' || echo '$(srcdir)/'`geo/all-geo-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-geo-cpp.Tpo" "$(DEPDIR)/all-geo-cpp.Plo"; else rm -f "$(DEPDIR)/all-geo-cpp.Tpo"; exit 1; fi
#	source='geo/all-geo-cpp.cpp' object='all-geo-cpp.lo' libtool=yes \
#	depfile='$(DEPDIR)/all-geo-cpp.Plo' tmpdepfile='$(DEPDIR)/all-geo-cpp.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-geo-cpp.lo `test -f 'geo/all-geo-cpp.cpp' || echo '$(srcdir)/'`geo/all-geo-cpp.cpp

all-foreignfiles-cpp.o: foreignfiles/all-foreignfiles-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-foreignfiles-cpp.o -MD -MP -MF "$(DEPDIR)/all-foreignfiles-cpp.Tpo" -c -o all-foreignfiles-cpp.o `test -f 'foreignfiles/all-foreignfiles-cpp.cpp' || echo '$(srcdir)/'`foreignfiles/all-foreignfiles-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-foreignfiles-cpp.Tpo" "$(DEPDIR)/all-foreignfiles-cpp.Po"; else rm -f "$(DEPDIR)/all-foreignfiles-cpp.Tpo"; exit 1; fi
#	source='foreignfiles/all-foreignfiles-cpp.cpp' object='all-foreignfiles-cpp.o' libtool=no \
#	depfile='$(DEPDIR)/all-foreignfiles-cpp.Po' tmpdepfile='$(DEPDIR)/all-foreignfiles-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-foreignfiles-cpp.o `test -f 'foreignfiles/all-foreignfiles-cpp.cpp' || echo '$(srcdir)/'`foreignfiles/all-foreignfiles-cpp.cpp

all-foreignfiles-cpp.obj: foreignfiles/all-foreignfiles-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-foreignfiles-cpp.obj -MD -MP -MF "$(DEPDIR)/all-foreignfiles-cpp.Tpo" -c -o all-foreignfiles-cpp.obj `if test -f 'foreignfiles/all-foreignfiles-cpp.cpp'; then $(CYGPATH_W) 'foreignfiles/all-foreignfiles-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/foreignfiles/all-foreignfiles-cpp.cpp'; fi`; \
	then mv -f "$(DEPDIR)/all-foreignfiles-cpp.Tpo" "$(DEPDIR)/all-foreignfiles-cpp.Po"; else rm -f "$(DEPDIR)/all-foreignfiles-cpp.Tpo"; exit 1; fi
#	source='foreignfiles/all-foreignfiles-cpp.cpp' object='all-foreignfiles-cpp.obj' libtool=no \
#	depfile='$(DEPDIR)/all-foreignfiles-cpp.Po' tmpdepfile='$(DEPDIR)/all-foreignfiles-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-foreignfiles-cpp.obj `if test -f 'foreignfiles/all-foreignfiles-cpp.cpp'; then $(CYGPATH_W) 'foreignfiles/all-foreignfiles-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/foreignfiles/all-foreignfiles-cpp.cpp'; fi`

all-foreignfiles-cpp.lo: foreignfiles/all-foreignfiles-cpp.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-foreignfiles-cpp.lo -MD -MP -MF "$(DEPDIR)/all-foreignfiles-cpp.Tpo" -c -o all-foreignfiles-cpp.lo `test -f 'foreignfiles/all-foreignfiles-cpp.cpp' || echo '$(srcdir)/'`foreignfiles/all-foreignfiles-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-foreignfiles-cpp.Tpo" "$(DEPDIR)/all-foreignfiles-cpp.Plo"; else rm -f "$(DEPDIR)/all-foreignfiles-cpp.Tpo"; exit 1; fi
#	source='foreignfiles/all-foreignfiles-cpp.cpp' object='all-foreignfiles-cpp.lo' libtool=yes \
#	depfile='$(DEPDIR)/all-foreignfiles-cpp.Plo' tmpdepfile='$(DEPDIR)/all-foreignfiles-cpp.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-foreignfiles-cpp.lo `test -f 'foreignfiles/all-foreignfiles-cpp.cpp' || echo '$(srcdir)/'`foreignfiles/all-foreignfiles-cpp.cpp

all-xml-cpp.o: xml/all-xml-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-xml-cpp.o -MD -MP -MF "$(DEPDIR)/all-xml-cpp.Tpo" -c -o all-xml-cpp.o `test -f 'xml/all-xml-cpp.cpp' || echo '$(srcdir)/'`xml/all-xml-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-xml-cpp.Tpo" "$(DEPDIR)/all-xml-cpp.Po"; else rm -f "$(DEPDIR)/all-xml-cpp.Tpo"; exit 1; fi
#	source='xml/all-xml-cpp.cpp' object='all-xml-cpp.o' libtool=no \
#	depfile='$(DEPDIR)/all-xml-cpp.Po' tmpdepfile='$(DEPDIR)/all-xml-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-xml-cpp.o `test -f 'xml/all-xml-cpp.cpp' || echo '$(srcdir)/'`xml/all-xml-cpp.cpp

all-xml-cpp.obj: xml/all-xml-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-xml-cpp.obj -MD -MP -MF "$(DEPDIR)/all-xml-cpp.Tpo" -c -o all-xml-cpp.obj `if test -f 'xml/all-xml-cpp.cpp'; then $(CYGPATH_W) 'xml/all-xml-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/xml/all-xml-cpp.cpp'; fi`; \
	then mv -f "$(DEPDIR)/all-xml-cpp.Tpo" "$(DEPDIR)/all-xml-cpp.Po"; else rm -f "$(DEPDIR)/all-xml-cpp.Tpo"; exit 1; fi
#	source='xml/all-xml-cpp.cpp' object='all-xml-cpp.obj' libtool=no \
#	depfile='$(DEPDIR)/all-xml-cpp.Po' tmpdepfile='$(DEPDIR)/all-xml-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-xml-cpp.obj `if test -f 'xml/all-xml-cpp.cpp'; then $(CYGPATH_W) 'xml/all-xml-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/xml/all-xml-cpp.cpp'; fi`

all-xml-cpp.lo: xml/all-xml-cpp.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-xml-cpp.lo -MD -MP -MF "$(DEPDIR)/all-xml-cpp.Tpo" -c -o all-xml-cpp.lo `test -f 'xml/all-xml-cpp.cpp' || echo '$(srcdir)/'`xml/all-xml-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-xml-cpp.Tpo" "$(DEPDIR)/all-xml-cpp.Plo"; else rm -f "$(DEPDIR)/all-xml-cpp.Tpo"; exit 1; fi
#	source='xml/all-xml-cpp.cpp' object='all-xml-cpp.lo' libtool=yes \
#	depfile='$(DEPDIR)/all-xml-cpp.Plo' tmpdepfile='$(DEPDIR)/all-xml-cpp.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-xml-cpp.lo `test -f 'xml/all-xml-cpp.cpp' || echo '$(srcdir)/'`xml/all-xml-cpp.cpp

all-profiler-cpp.o: profiler/all-profiler-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-profiler-cpp.o -MD -MP -MF "$(DEPDIR)/all-profiler-cpp.Tpo" -c -o all-profiler-cpp.o `test -f 'profiler/all-profiler-cpp.cpp' || echo '$(srcdir)/'`profiler/all-profiler-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-profiler-cpp.Tpo" "$(DEPDIR)/all-profiler-cpp.Po"; else rm -f "$(DEPDIR)/all-profiler-cpp.Tpo"; exit 1; fi
#	source='profiler/all-profiler-cpp.cpp' object='all-profiler-cpp.o' libtool=no \
#	depfile='$(DEPDIR)/all-profiler-cpp.Po' tmpdepfile='$(DEPDIR)/all-profiler-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-profiler-cpp.o `test -f 'profiler/all-profiler-cpp.cpp' || echo '$(srcdir)/'`profiler/all-profiler-cpp.cpp

all-profiler-cpp.obj: profiler/all-profiler-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-profiler-cpp.obj -MD -MP -MF "$(DEPDIR)/all-profiler-cpp.Tpo" -c -o all-profiler-cpp.obj `if test -f 'profiler/all-profiler-cpp.cpp'; then $(CYGPATH_W) 'profiler/all-profiler-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/profiler/all-profiler-cpp.cpp'; fi`; \
	then mv -f "$(DEPDIR)/all-profiler-cpp.Tpo" "$(DEPDIR)/all-profiler-cpp.Po"; else rm -f "$(DEPDIR)/all-profiler-cpp.Tpo"; exit 1; fi
#	source='profiler/all-profiler-cpp.cpp' object='all-profiler-cpp.obj' libtool=no \
#	depfile='$(DEPDIR)/all-profiler-cpp.Po' tmpdepfile='$(DEPDIR)/all-profiler-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-profiler-cpp.obj `if test -f 'profiler/all-profiler-cpp.cpp'; then $(CYGPATH_W) 'profiler/all-profiler-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/profiler/all-profiler-cpp.cpp'; fi`

all-profiler-cpp.lo: profiler/all-profiler-cpp.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-profiler-cpp.lo -MD -MP -MF "$(DEPDIR)/all-profiler-cpp.Tpo" -c -o all-profiler-cpp.lo `test -f 'profiler/all-profiler-cpp.cpp' || echo '$(srcdir)/'`profiler/all-profiler-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-profiler-cpp.Tpo" "$(DEPDIR)/all-profiler-cpp.Plo"; else rm -f "$(DEPDIR)/all-profiler-cpp.Tpo"; exit 1; fi
#	source='profiler/all-profiler-cpp.cpp' object='all-profiler-cpp.lo' libtool=yes \
#	depfile='$(DEPDIR)/all-profiler-cpp.Plo' tmpdepfile='$(DEPDIR)/all-profiler-cpp.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-profiler-cpp.lo `test -f 'profiler/all-profiler-cpp.cpp' || echo '$(srcdir)/'`profiler/all-profiler-cpp.cpp

all-vrml97-cpp.o: vrml97/all-vrml97-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-vrml97-cpp.o -MD -MP -MF "$(DEPDIR)/all-vrml97-cpp.Tpo" -c -o all-vrml97-cpp.o `test -f 'vrml97/all-vrml97-cpp.cpp' || echo '$(srcdir)/'`vrml97/all-vrml97-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-vrml97-cpp.Tpo" "$(DEPDIR)/all-vrml97-cpp.Po"; else rm -f "$(DEPDIR)/all-vrml97-cpp.Tpo"; exit 1; fi
#	source='vrml97/all-vrml97-cpp.cpp' object='all-vrml97-cpp.o' libtool=no \
#	depfile='$(DEPDIR)/all-vrml97-cpp.Po' tmpdepfile='$(DEPDIR)/all-vrml97-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-vrml97-cpp.o `test -f 'vrml97/all-vrml97-cpp.cpp' || echo '$(srcdir)/'`vrml97/all-vrml97-cpp.cpp

all-vrml97-cpp.obj: vrml97/all-vrml97-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-vrml97-cpp.obj -MD -MP -MF "$(DEPDIR)/all-vrml97-cpp.Tpo" -c -o all-vrml97-cpp.obj `if test -f 'vrml97/all-vrml97-cpp.cpp'; then $(CYGPATH_W) 'vrml97/all-vrml97-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/vrml97/all-vrml97-cpp.cpp'; fi`; \
	then mv -f "$(DEPDIR)/all-vrml97-cpp.Tpo" "$(DEPDIR)/all-vrml97-cpp.Po"; else rm -f "$(DEPDIR)/all-vrml97-cpp.Tpo"; exit 1; fi
#	source='vrml97/all-vrml97-cpp.cpp' object='all-vrml97-cpp.obj' libtool=no \
#	depfile='$(DEPDIR)/all-vrml97-cpp.Po' tmpdepfile='$(DEPDIR)/all-vrml97-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-vrml97-cpp.obj `if test -f 'vrml97/all-vrml97-cpp.cpp'; then $(CYGPATH_W) 'vrml97/all-vrml97-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/vrml97/all-vrml97-cpp.cpp'; fi`

all-vrml97-cpp.lo: vrml97/all-vrml97-cpp.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-vrml97-cpp.lo -MD -MP -MF "$(DEPDIR)/all-vrml97-cpp.Tpo" -c -o all-vrml97-cpp.lo `test -f 'vrml97/all-vrml97-cpp.cpp' || echo '$(srcdir)/'`vrml97/all-vrml97-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-vrml97-cpp.Tpo" "$(DEPDIR)/all-vrml97-cpp.Plo"; else rm -f "$(DEPDIR)/all-vrml97-cpp.Tpo"; exit 1; fi
#	source='vrml97/all-vrml97-cpp.cpp' object='all-vrml97-cpp.lo' libtool=yes \
#	depfile='$(DEPDIR)/all-vrml97-cpp.Plo' tmpdepfile='$(DEPDIR)/all-vrml97-cpp.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-vrml97-cpp.lo `test -f 'vrml97/all-vrml97-cpp.cpp' || echo '$(srcdir)/'`vrml97/all-vrml97-cpp.cpp

all-scxml-cpp.o: scxml/all-scxml-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-scxml-cpp.o -MD -MP -MF "$(DEPDIR)/all-scxml-cpp.Tpo" -c -o all-scxml-cpp.o `test -f 'scxml/all-scxml-cpp.cpp' || echo '$(srcdir)/'`scxml/all-scxml-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-scxml-cpp.Tpo" "$(DEPDIR)/all-scxml-cpp.Po"; else rm -f "$(DEPDIR)/all-scxml-cpp.Tpo"; exit 1; fi
#	source='scxml/all-scxml-cpp.cpp' object='all-scxml-cpp.o' libtool=no \
#	depfile='$(DEPDIR)/all-scxml-cpp.Po' tmpdepfile='$(DEPDIR)/all-scxml-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-scxml-cpp.o `test -f 'scxml/all-scxml-cpp.cpp' || echo '$(srcdir)/'`scxml/all-scxml-cpp.cpp

all-scxml-cpp.obj: scxml/all-scxml-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-scxml-cpp.obj -MD -MP -MF "$(DEPDIR)/all-scxml-cpp.Tpo" -c -o all-scxml-cpp.obj `if test -f 'scxml/all-scxml-cpp.cpp'; then $(CYGPATH_W) 'scxml/all-scxml-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/scxml/all-scxml-cpp.cpp'; fi`; \
	then mv -f "$(DEPDIR)/all-scxml-cpp.Tpo" "$(DEPDIR)/all-scxml-cpp.Po"; else rm -f "$(DEPDIR)/all-scxml-cpp.Tpo"; exit 1; fi
#	source='scxml/all-scxml-cpp.cpp' object='all-scxml-cpp.obj' libtool=no \
#	depfile='$(DEPDIR)/all-scxml-cpp.Po' tmpdepfile='$(DEPDIR)/all-scxml-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-scxml-cpp.obj `if test -f 'scxml/all-scxml-cpp.cpp'; then $(CYGPATH_W) 'scxml/all-scxml-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/scxml/all-scxml-cpp.cpp'; fi`

all-scxml-cpp.lo: scxml/all-scxml-cpp.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-scxml-cpp.lo -MD -MP -MF "$(DEPDIR)/all-scxml-cpp.Tpo" -c -o all-scxml-cpp.lo `test -f 'scxml/all-scxml-cpp.cpp' || echo '$(srcdir)/'`scxml/all-scxml-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-scxml-cpp.Tpo" "$(DEPDIR)/all-scxml-cpp.Plo"; else rm -f "$(DEPDIR)/all-scxml-cpp.Tpo"; exit 1; fi
#	source='scxml/all-scxml-cpp.cpp' object='all-scxml-cpp.lo' libtool=yes \
#	depfile='$(DEPDIR)/all-scxml-cpp.Plo' tmpdepfile='$(DEPDIR)/all-scxml-cpp.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-scxml-cpp.lo `test -f 'scxml/all-scxml-cpp.cpp' || echo '$(srcdir)/'`scxml/all-scxml-cpp.cpp

all-soscxml-cpp.o: soscxml/all-soscxml-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-soscxml-cpp.o -MD -MP -MF "$(DEPDIR)/all-soscxml-cpp.Tpo" -c -o all-soscxml-cpp.o `test -f 'soscxml/all-soscxml-cpp.cpp' || echo '$(srcdir)/'`soscxml/all-soscxml-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-soscxml-cpp.Tpo" "$(DEPDIR)/all-soscxml-cpp.Po"; else rm -f "$(DEPDIR)/all-soscxml-cpp.Tpo"; exit 1; fi
#	source='soscxml/all-soscxml-cpp.cpp' object='all-soscxml-cpp.o' libtool=no \
#	depfile='$(DEPDIR)/all-soscxml-cpp.Po' tmpdepfile='$(DEPDIR)/all-soscxml-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-soscxml-cpp.o `test -f 'soscxml/all-soscxml-cpp.cpp' || echo '$(srcdir)/'`soscxml/all-soscxml-cpp.cpp

all-soscxml-cpp.obj: soscxml/all-soscxml-cpp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-soscxml-cpp.obj -MD -MP -MF "$(DEPDIR)/all-soscxml-cpp.Tpo" -c -o all-soscxml-cpp.obj `if test -f 'soscxml/all-soscxml-cpp.cpp'; then $(CYGPATH_W) 'soscxml/all-soscxml-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/soscxml/all-soscxml-cpp.cpp'; fi`; \
	then mv -f "$(DEPDIR)/all-soscxml-cpp.Tpo" "$(DEPDIR)/all-soscxml-cpp.Po"; else rm -f "$(DEPDIR)/all-soscxml-cpp.Tpo"; exit 1; fi
#	source='soscxml/all-soscxml-cpp.cpp' object='all-soscxml-cpp.obj' libtool=no \
#	depfile='$(DEPDIR)/all-soscxml-cpp.Po' tmpdepfile='$(DEPDIR)/all-soscxml-cpp.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-soscxml-cpp.obj `if test -f 'soscxml/all-soscxml-cpp.cpp'; then $(CYGPATH_W) 'soscxml/all-soscxml-cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/soscxml/all-soscxml-cpp.cpp'; fi`

all-soscxml-cpp.lo: soscxml/all-soscxml-cpp.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT all-soscxml-cpp.lo -MD -MP -MF "$(DEPDIR)/all-soscxml-cpp.Tpo" -c -o all-soscxml-cpp.lo `test -f 'soscxml/all-soscxml-cpp.cpp' || echo '$(srcdir)/'`soscxml/all-soscxml-cpp.cpp; \
	then mv -f "$(DEPDIR)/all-soscxml-cpp.Tpo" "$(DEPDIR)/all-soscxml-cpp.Plo"; else rm -f "$(DEPDIR)/all-soscxml-cpp.Tpo"; exit 1; fi
#	source='soscxml/all-soscxml-cpp.cpp' object='all-soscxml-cpp.lo' libtool=yes \
#	depfile='$(DEPDIR)/all-soscxml-cpp.Plo' tmpdepfile='$(DEPDIR)/all-soscxml-cpp.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o all-soscxml-cpp.lo `test -f 'soscxml/all-soscxml-cpp.cpp' || echo '$(srcdir)/'`soscxml/all-soscxml-cpp.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES) discard.h.in config.h.in setup.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS) discard.h.in config.h.in setup.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES) discard.h.in config.h.in setup.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) discard.h.in config.h.in setup.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || mkdir "$(distdir)/$$subdir" \
	    || exit 1; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="../$(top_distdir)" \
	        distdir="../$(distdir)/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LIBRARIES) $(LTLIBRARIES) $(HEADERS) discard.h \
		config.h setup.h
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(libdir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-libLIBRARIES clean-libLTLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am: install-data-local

install-exec-am: install-exec-local install-libLIBRARIES \
	install-libLTLIBRARIES

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-info-am uninstall-libLIBRARIES \
	uninstall-libLTLIBRARIES uninstall-local

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
	clean clean-generic clean-libLIBRARIES clean-libLTLIBRARIES \
	clean-libtool clean-recursive ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-libtool distclean-recursive distclean-tags distdir \
	dvi dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-data-local install-exec \
	install-exec-am install-exec-local install-info \
	install-info-am install-libLIBRARIES install-libLTLIBRARIES \
	install-man install-strip installcheck installcheck-am \
	installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic maintainer-clean-recursive \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool mostlyclean-recursive pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am uninstall-info-am \
	uninstall-libLIBRARIES uninstall-libLTLIBRARIES \
	uninstall-local


# **************************************************************************
# Installation information.

# On Mac OS 10.2 or later, create two-level namespace binaries and use
# prebinding. Also pad the install_name to make it possible to change
# it later (e.g. to include the library in an app bundle).  On Mac OS
# 10.3 or later, use -undefined dynamic_lookup to delay symbol lookup
# to runtime (needed to make enable_hacking work)

# Must export deployment target environment, since it is required by
# the linker to allow the -undefined dynamic_lookup flag.
##export MACOSX_DEPLOYMENT_TARGET=

# **************************************************************************
# Custom rule for linking a Visual C++ (MS Windows) library.

coin5.lib: Makefile Coin.RES \
  $(coin5_lib_OBJECTS) \
  $(coin5_lib_DEPENDENCIES)
	@basename="coin5"; \
	rm -f "$$basename.dll" "$$basename.lib"; \
	echo "Linking $$basename.lib..."; \
	echo $(CC) $(LDFLAGS) $(LIBFLAGS) \
	  $(coin5_lib_OBJECTS) \
	  $(coin5_lib_LIBADD) $(LIBS) Coin.RES; \
	$(CC) $(LDFLAGS) $(LIBFLAGS) \
	  $(coin5_lib_OBJECTS) \
	  $(coin5_lib_LIBADD) $(LIBS) Coin.RES ;

# **************************************************************************

#install-data-local: install-exec-am
#	cd $(DESTDIR)$(MAC_FRAMEWORK_PREFIX)/$(MAC_FRAMEWORK_NAME).framework/Versions/Current && ln -sf Libraries/libCoin.dylib $(MAC_FRAMEWORK_NAME) && cd -; \
#	cd $(DESTDIR)$(MAC_FRAMEWORK_PREFIX)/$(MAC_FRAMEWORK_NAME).framework && ln -sf Versions/Current/$(MAC_FRAMEWORK_NAME) $(MAC_FRAMEWORK_NAME) && install_name_tool -id $(MAC_FRAMEWORK_NAME).framework/Versions/$(MAC_FRAMEWORK_VERSION)/$(MAC_FRAMEWORK_NAME) $(MAC_FRAMEWORK_NAME) && cd -;
install-data-local:
	@basename="coin5"; \
	for ext in lib; do \
	  file="$$basename.$$ext"; \
	  if test -f "$$file"; then \
	    $(mkinstalldirs) "$(DESTDIR)$(libdir)"; \
	    echo " $(INSTALL_DATA) $$file $(DESTDIR)$(libdir)/$$file"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(libdir)/$$file" || exit 1; \
	  fi \
	done;

#install-exec-local: coin5.lib
#	@basename="coin5"; \
#	for ext in dll pdb; do \
#	  file="$$basename.$$ext"; \
#	  if test -f "$$file"; then \
#	    $(mkinstalldirs) "$(DESTDIR)$(bindir)"; \
#	    echo " $(INSTALL_PROGRAM) $$file $(DESTDIR)$(bindir)/$$file"; \
#	    $(INSTALL_PROGRAM) "$$file" "$(DESTDIR)$(bindir)/$$file" || exit 1; \
#	  fi \
#	done
install-exec-local:

install-symlinks:
	@for dir in \
	    actions base bundles caches details draggers elements engines \
	    errors events fields fonts glue io manips misc lists nodekits \
	    nodes navigation shapenodes projectors sensors upgraders 3ds \
	    collision hardcopy threads shaders shadows geo xml vrml97 \
	    foreignfiles ; do \
              (cd $$dir; $(MAKE) install-symlinks;) \
        done ; 

uninstall-local:
	@basename="coin5"; \
	for file in \
	  "$(DESTDIR)$(bindir)/$$basename.dll" \
	  "$(DESTDIR)$(bindir)/$$basename.pdb" \
	  "$(DESTDIR)$(libdir)/$$basename.lib" \
	  "$(DESTDIR)$(MAC_FRAMEWORK_PREFIX)/$(MAC_FRAMEWORK_NAME).framework/$(MAKE_FRAMEWORK_NAME)"; do \
	  if test -f "$$file"; then \
	    echo " rm -f" "$$file"; \
	    rm -f "$$file"; \
	  fi \
	done; \
	baseincdir="$(DESTDIR)$(libCoinincdir)"; \
	for dir in \
	  "$$baseincdir/3ds" \
	  "$$baseincdir/actions" \
	  "$$baseincdir/base" \
	  "$$baseincdir/bundles" \
	  "$$baseincdir/caches" \
	  "$$baseincdir/collision" \
	  "$$baseincdir/details" \
	  "$$baseincdir/draggers" \
	  "$$baseincdir/elements" \
	  "$$baseincdir/engines" \
	  "$$baseincdir/errors" \
	  "$$baseincdir/events" \
	  "$$baseincdir/fields" \
	  "$$baseincdir/fonts" \
	  "$$baseincdir/glue" \
	  "$$baseincdir/hardcopy" \
	  "$$baseincdir/lists" \
	  "$$baseincdir/lock" \
	  "$$baseincdir/manips" \
	  "$$baseincdir/misc" \
	  "$$baseincdir/nodekits" \
	  "$$baseincdir/nodes" \
	  "$$baseincdir/navigation" \
	  "$$baseincdir/projectors" \
	  "$$baseincdir/sensors" \
	  "$$baseincdir/system" \
	  "$$baseincdir/threads" \
	  "$$baseincdir/upgraders" \
	  "$$baseincdir/VRMLnodes" \
	  "$$baseincdir/MPEG" \
	  "$$baseincdir/XML" \
	  "$$baseincdir/C/XML" \
	  "$$baseincdir/C/base" \
	  "$$baseincdir/C/errors" \
	  "$$baseincdir/C/glue" \
	  "$$baseincdir/C/threads" \
	  "$$baseincdir/C" \
	  "$$baseincdir"; do \
	  if test -d "$$dir"; then \
	    echo " rmdir $$dir"; \
	    rmdir "$$dir"; \
	  fi \
	done; \
	:

Coin.RES: Coin.rc
	rc Coin.rc
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
