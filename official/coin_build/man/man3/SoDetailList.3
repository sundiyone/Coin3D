.TH "SoDetailList" 3 "Sun May 28 2017" "Version 4.0.0a" "Coin" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SoDetailList \- The \fBSoDetailList\fP class is a container for pointers to \fBSoDetail\fP objects\&.
.PP
This list class will delete the details when destructed/truncated, or when a detail in the list is replaced by another detail\&. The caller is responsible for allocating the details passed to the list, but should not deallocate them since this will be handled by the list\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Inventor/lists/SoDetailList\&.h>\fP
.PP
Inherits \fBSbPList\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSoDetailList\fP (void)"
.br
.ti -1c
.RI "\fBSoDetailList\fP (const \fBint\fP sizehint)"
.br
.ti -1c
.RI "\fBSoDetailList\fP (const \fBSoDetailList\fP &l)"
.br
.ti -1c
.RI "\fB~SoDetailList\fP ()"
.br
.ti -1c
.RI "void \fBappend\fP (\fBSoDetail\fP *detail)"
.br
.ti -1c
.RI "void \fBinsert\fP (\fBSoDetail\fP *detail, const \fBint\fP insertbefore)"
.br
.ti -1c
.RI "void \fBtruncate\fP (const \fBint\fP length, const \fBint\fP \fBfit\fP=0)"
.br
.ti -1c
.RI "void \fBcopy\fP (const \fBSoDetailList\fP &l)"
.br
.ti -1c
.RI "\fBSoDetailList\fP & \fBoperator=\fP (const \fBSoDetailList\fP &l)"
.br
.ti -1c
.RI "\fBSoDetail\fP * \fBoperator[]\fP (const \fBint\fP idx) const"
.br
.ti -1c
.RI "void \fBset\fP (const \fBint\fP index, \fBSoDetail\fP *item)"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
The \fBSoDetailList\fP class is a container for pointers to \fBSoDetail\fP objects\&.
.PP
This list class will delete the details when destructed/truncated, or when a detail in the list is replaced by another detail\&. The caller is responsible for allocating the details passed to the list, but should not deallocate them since this will be handled by the list\&. 


.PP
\fBSee also:\fP
.RS 4
\fBSbPList\fP 
.RE
.PP

.SH "Constructor & Destructor Documentation"
.PP 
.SS "SoDetailList::SoDetailList (void)\fC [inline]\fP"
Default constructor\&. 
.SS "SoDetailList::SoDetailList (const \fBint\fP sizehint)\fC [inline]\fP"
This constructor initializes the internal allocated size for the list to \fIsizehint\fP\&. Note that the list will still initially contain zero items\&.
.PP
\fBSee also:\fP
.RS 4
\fBSbList::SbList(const int sizehint)\fP 
.RE
.PP

.SS "SoDetailList::SoDetailList (const \fBSoDetailList\fP & l)"
Copy constructor\&. 
.SS "SoDetailList::~SoDetailList ()"
Destructor\&. 
.SH "Member Function Documentation"
.PP 
.SS "void SoDetailList::truncate (const \fBint\fP length, const \fBint\fP fit = \fC0\fP)"
Overridden to delete truncated items\&. 
.SS "void SoDetailList::copy (const \fBSoDetailList\fP & l)"
Overridden to copy items, not just pointers\&. 
.SS "\fBSoDetail\fP * SoDetailList::operator[] (const \fBint\fP idx) const\fC [inline]\fP"
Returns element at \fIidx\fP\&.
.PP
Will automatically expand the size of the internal array if \fIidx\fP is outside the current bounds of the list\&. The values of any additional pointers are then set to \fCNULL\fP\&. 
.SS "void SoDetailList::set (const \fBint\fP idx, \fBSoDetail\fP * detail)"
Overridden to delete old item\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Coin from the source code\&.
