.TH "SoTextureCoordinateBundle" 3 "Sun May 28 2017" "Version 4.0.0a" "Coin" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SoTextureCoordinateBundle \- The \fBSoTextureCoordinateBundle\fP class simplifies texture coordinate handling\&.
.PP
It is unlikely that application programmers should need to know how to use this class, as it is mostly intended for internal use\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <include/Inventor/bundles/SoTextureCoordinateBundle\&.h>\fP
.PP
Inherits \fBSoBundle\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSoTextureCoordinateBundle\fP (\fBSoAction\fP *const action, const SbBool forRendering, const SbBool setUpDefault=TRUE)"
.br
.ti -1c
.RI "\fB~SoTextureCoordinateBundle\fP ()"
.br
.ti -1c
.RI "SbBool \fBneedCoordinates\fP (void) const"
.br
.ti -1c
.RI "SbBool \fBisFunction\fP (void) const"
.br
.ti -1c
.RI "const \fBSbVec4f\fP & \fBget\fP (const \fBint\fP index)"
.br
.ti -1c
.RI "const \fBSbVec4f\fP & \fBget\fP (const \fBSbVec3f\fP &point, const \fBSbVec3f\fP &normal)"
.br
.ti -1c
.RI "void \fBsend\fP (const \fBint\fP index) const"
.br
.ti -1c
.RI "void \fBsend\fP (const \fBint\fP index, const \fBSbVec3f\fP &point, const \fBSbVec3f\fP &normal) const"
.br
.ti -1c
.RI "SbBool \fBneedIndices\fP (void) const"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
The \fBSoTextureCoordinateBundle\fP class simplifies texture coordinate handling\&.
.PP
It is unlikely that application programmers should need to know how to use this class, as it is mostly intended for internal use\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "SoTextureCoordinateBundle::SoTextureCoordinateBundle (\fBSoAction\fP *const action, const SbBool forRendering, const SbBool setUpDefault = \fCTRUE\fP)"
Constructor with \fIaction\fP being the action applied to the node\&. The \fIforRendering\fP parameter must be \fITRUE\fP if the bundle is to be used for sending texture coordinates to GL during rendering\&. The \fIsetUpDefault\fP must be \fITRUE\fP if default texture coordinates should be generated\&. 
.SS "SoTextureCoordinateBundle::~SoTextureCoordinateBundle ()"
Destructor\&. 
.SH "Member Function Documentation"
.PP 
.SS "SbBool SoTextureCoordinateBundle::needCoordinates (void) const"
Returns \fITRUE\fP if texture coordinates is needed during rendering\&. 
.SS "SbBool SoTextureCoordinateBundle::isFunction (void) const"
Returns \fITRUE\fP if a texture coordinate function should be used\&. 
.SS "const \fBSbVec4f\fP & SoTextureCoordinateBundle::get (const \fBint\fP index)"
Returns the texture coordinates at index \fIindex\fP\&. Should only be used if \fBSoTextureCoordinateBundle::isFunction()\fP is \fIFALSE\fP\&. 
.SS "const \fBSbVec4f\fP & SoTextureCoordinateBundle::get (const \fBSbVec3f\fP & point, const \fBSbVec3f\fP & normal)"
Returns the texture coordinates based on \fIpoint\fP and \fInormal\fP\&. Should only be used if \fBSoTextureCoordinateBundle::isFunction()\fP is \fITRUE\fP\&. 
.SS "void SoTextureCoordinateBundle::send (const \fBint\fP index) const\fC [inline]\fP"
Send texture coordinates to GL\&. Should only be used if \fBSoTextureCoordinateBundle::isFunction()\fP is \fIFALSE\fP\&. 
.SS "void SoTextureCoordinateBundle::send (const \fBint\fP index, const \fBSbVec3f\fP & point, const \fBSbVec3f\fP & normal) const\fC [inline]\fP"
Convenience function that will make it transparent to the rendering code if ordinary texture coordinates or function texture coordinates are used\&. 
.SS "SbBool SoTextureCoordinateBundle::needIndices (void) const"
Returns \fITRUE\fP if \fBisFunction()\fP is \fITRUE\fP, but the texture coordinate indices are needed either by bump mapping or by one of the other texture units\&.
.PP
\fBSince:\fP
.RS 4
Coin 2\&.2 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Coin from the source code\&.
