.TH "SoLightPath" 3 "Sun May 28 2017" "Version 4.0.0a" "Coin" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SoLightPath \- The \fBSoLightPath\fP class is a light version of \fBSoPath\fP\&.
.PP
\fBSoLightPath\fP can be used if you only need a temporary path, and don't want the overhead that comes with an \fBSoPath\fP (ref, unref, auditing etc)\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Inventor/misc/SoLightPath\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSoLightPath\fP (\fBSoNode\fP *node, const \fBint\fP approxlength)"
.br
.ti -1c
.RI "\fBSoLightPath\fP (const \fBint\fP approxlength)"
.br
.ti -1c
.RI "\fB~SoLightPath\fP ()"
.br
.ti -1c
.RI "void \fBsetHead\fP (\fBSoNode\fP *const node)"
.br
.ti -1c
.RI "void \fBappend\fP (const \fBint\fP childindex)"
.br
.ti -1c
.RI "void \fBpush\fP (const \fBint\fP childindex)"
.br
.ti -1c
.RI "void \fBpop\fP (void)"
.br
.ti -1c
.RI "void \fBsetTail\fP (const \fBint\fP childindex)"
.br
.ti -1c
.RI "\fBSoNode\fP * \fBgetTail\fP (void) const"
.br
.ti -1c
.RI "\fBSoNode\fP * \fBgetHead\fP (void) const"
.br
.ti -1c
.RI "\fBSoNode\fP * \fBgetNode\fP (const \fBint\fP index) const"
.br
.ti -1c
.RI "\fBint\fP \fBgetIndex\fP (const \fBint\fP index) const"
.br
.ti -1c
.RI "\fBint\fP \fBgetFullLength\fP () const"
.br
.ti -1c
.RI "void \fBtruncate\fP (const \fBint\fP startindex)"
.br
.ti -1c
.RI "void \fBmakeTempPath\fP (\fBSoTempPath\fP *path) const"
.br
.in -1c
.SH "Detailed Description"
.PP 
The \fBSoLightPath\fP class is a light version of \fBSoPath\fP\&.
.PP
\fBSoLightPath\fP can be used if you only need a temporary path, and don't want the overhead that comes with an \fBSoPath\fP (ref, unref, auditing etc)\&. 

It is your responsibility to make sure the path is valid before using it\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "SoLightPath::SoLightPath (\fBSoNode\fP * headnodeptr, const \fBint\fP approxlength)"
A constructor\&. Supply the head node and the approximate length of the path\&. 
.SS "SoLightPath::SoLightPath (const \fBint\fP approxlength)"
A constructor\&. Supply the appriximate length of the path\&. 
.SS "SoLightPath::~SoLightPath ()"
Destructor\&. 
.SH "Member Function Documentation"
.PP 
.SS "void SoLightPath::setHead (\fBSoNode\fP *const node)"
Sets head of path\&. Truncates path to length 1\&. 
.SS "void SoLightPath::append (const \fBint\fP childindex)"
Appends a childindex to the path\&. 
.SS "void SoLightPath::push (const \fBint\fP childindex)"
Same as \fBappend()\fP\&. 
.SS "void SoLightPath::pop (void)"
Pops off the last child\&. 
.SS "void SoLightPath::setTail (const \fBint\fP childindex)"
Sets the tail of the path\&. 
.SS "\fBSoNode\fP * SoLightPath::getTail (void) const"
Returns the tail node of the path\&. Uses \fBgetNode()\fP\&. 
.SS "\fBSoNode\fP * SoLightPath::getHead (void) const"
Returns the head node\&. 
.SS "\fBSoNode\fP * SoLightPath::getNode (const \fBint\fP index) const"
Returns the indexth node in path\&. 
.SS "\fBint\fP SoLightPath::getIndex (const \fBint\fP index) const"
Returns the child index of the indexth node in the path\&. 
.SS "\fBint\fP SoLightPath::getFullLength (void) const"
Returns the length of the path\&. 
.SS "void SoLightPath::truncate (const \fBint\fP startindex)"
Truncates the path from \fIstartindex\fP\&. 
.SS "void SoLightPath::makeTempPath (\fBSoTempPath\fP * path) const"
Updates \fIpath\fP to be the same path as this path\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Coin from the source code\&.
