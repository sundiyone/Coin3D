.TH "scxml" 3 "Sun May 28 2017" "Version 4.0.0a" "Coin" \" -*- nroff -*-
.ad l
.nh
.SH NAME
scxml \- This set of classes is a basic implementation of State Chart XML\&.  

.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBScXML\fP"
.br
.RI "namespace for static ScXML-related functions\&. "
.ti -1c
.RI "class \fBScXMLObject\fP"
.br
.RI "Base class for all SCXML objects\&. "
.ti -1c
.RI "class \fBScXMLEvent\fP"
.br
.RI "Base class for events sent to SCXML state machines\&. "
.ti -1c
.RI "class \fBScXMLEventTarget\fP"
.br
.RI "base class for event targets for inter-system event communication "
.ti -1c
.RI "class \fBScXMLStateMachine\fP"
.br
.RI "Manager for processing events and setting states in SCXML structures\&. "
.ti -1c
.RI "class \fBScXMLElt\fP"
.br
.RI "base class for all SCXML elements\&. "
.ti -1c
.RI "class \fBScXMLEltReader\fP"
.br
.RI "base class for element reader objects "
.ti -1c
.RI "class \fBScXMLScxmlElt\fP"
.br
.RI "implements the <scxml> SCXML element\&. "
.ti -1c
.RI "class \fBScXMLInitialElt\fP"
.br
.RI "implements the <initial> SCXML element\&. "
.ti -1c
.RI "class \fBScXMLAbstractStateElt\fP"
.br
.RI "abstract base class for the SCXML 'state' elements\&. "
.ti -1c
.RI "class \fBScXMLStateElt\fP"
.br
.RI "implements the <state> SCXML element\&. "
.ti -1c
.RI "class \fBScXMLParallelElt\fP"
.br
.RI "implements the <parallel> SCXML element\&. "
.ti -1c
.RI "class \fBScXMLFinalElt\fP"
.br
.RI "implements the <final> SCXML element\&. "
.ti -1c
.RI "class \fBScXMLOnEntryElt\fP"
.br
.RI "implements the <onentry> SCXML element\&. "
.ti -1c
.RI "class \fBScXMLOnExitElt\fP"
.br
.RI "implements the <onexit> SCXML element\&. "
.ti -1c
.RI "class \fBScXMLTransitionElt\fP"
.br
.RI "the \fC<transition>\fP SCXML element\&. "
.ti -1c
.RI "class \fBScXMLHistoryElt\fP"
.br
.RI "implements the <history> SCXML element\&. "
.ti -1c
.RI "class \fBScXMLExecutableElt\fP"
.br
.RI "base class for all SCXML elements with executable content\&. "
.ti -1c
.RI "class \fBScXMLEventElt\fP"
.br
.RI "implements the <event> SCXML element\&. "
.ti -1c
.RI "class \fBScXMLIfElt\fP"
.br
.RI "implements the <if> SCXML element\&. "
.ti -1c
.RI "class \fBScXMLElseIfElt\fP"
.br
.RI "implements the <elseif> SCXML element\&. "
.ti -1c
.RI "class \fBScXMLElseElt\fP"
.br
.RI "implements the <else> SCXML element\&. "
.ti -1c
.RI "class \fBScXMLLogElt\fP"
.br
.RI "implements the <log> SCXML element\&. "
.ti -1c
.RI "class \fBScXMLDataModelElt\fP"
.br
.RI "implements the <datamodel> SCXML element\&. "
.ti -1c
.RI "class \fBScXMLDataElt\fP"
.br
.RI "the \fC<data>\fP SCXML element\&. "
.ti -1c
.RI "class \fBScXMLAssignElt\fP"
.br
.RI "the <assign> SCXML element\&. "
.ti -1c
.RI "class \fBScXMLValidateElt\fP"
.br
.RI "implements the <validate> SCXML element\&. "
.ti -1c
.RI "class \fBScXMLSendElt\fP"
.br
.RI "the \fC<\fP send> SCXML element\&. "
.ti -1c
.RI "class \fBScXMLInvokeElt\fP"
.br
.RI "implements the <invoke> SCXML element\&. "
.ti -1c
.RI "class \fBScXMLParamElt\fP"
.br
.RI "implements the <param> SCXML element\&. "
.ti -1c
.RI "class \fBScXMLFinalizeElt\fP"
.br
.RI "implements the <finalize> SCXML element\&. "
.ti -1c
.RI "class \fBScXMLContentElt\fP"
.br
.RI "implements the <content> SCXML element\&. "
.ti -1c
.RI "class \fBScXMLAnchorElt\fP"
.br
.RI "implements the <anchor> SCXML element\&. "
.ti -1c
.RI "class \fBScXMLScriptElt\fP"
.br
.RI "implements the <script> SCXML element\&. "
.ti -1c
.RI "class \fBScXMLEvaluator\fP"
.br
.RI "defines an interface for profile-dependent evaluators\&. "
.ti -1c
.RI "class \fBScXMLDataObj\fP"
.br
.RI "base class for evaluator data objects in the SCXML data module "
.ti -1c
.RI "class \fBScXMLConstantDataObj\fP"
.br
.RI "base class for immediate data values "
.ti -1c
.RI "class \fBScXMLReferenceDataObj\fP"
.br
.RI "A data object representing a reference to another object in the data model\&. "
.ti -1c
.RI "class \fBScXMLAndOpExprDataObj\fP"
.br
.RI "Implements the logical AND operator\&. "
.ti -1c
.RI "class \fBScXMLMinimumExprDataObj\fP"
.br
.RI "implements the data objects for the evaluator for the minimum profile\&. "
.ti -1c
.RI "class \fBScXMLMinimumEvaluator\fP"
.br
.RI "implements the evaluator for the minimum profile\&. "
.ti -1c
.RI "class \fBScXMLXPathEvaluator\fP"
.br
.RI "implements the XPath evaluator\&. "
.ti -1c
.RI "class \fBScXMLECMAScriptEvaluator\fP"
.br
.RI "evaluator for the ECMAScript profile\&. "
.in -1c
.SH "Detailed Description"
.PP 
This set of classes is a basic implementation of State Chart XML\&. 

It is not complete, nor is it necessary conformant to those parts it implements\&.
.PP
Currently Coin uses SCXML for managing 3D viewer user interaction (the non-model-interaction part) - the examiner navigation mode in layman terms\&.
.PP
The Draft Specification for SCXML is at http://www.w3.org/TR/scxml/\&.
.PP
\fBSee also:\fP
.RS 4
\fBNavigation Classes\fP
.RE
.PP
\fBSince:\fP
.RS 4
Coin 3\&.0 
.RE
.PP
State Chart XML
The \fBScXML\fP part of Coin is a basic, non-conformant, partial implementation of State Chart XML, based on the W3C Working Draft 16 May 2008 of SCXML http://www.w3.org/TR/2008/WD-scxml-20080516/\&. The latest version should be at http://www.w3.org/TR/scxml/\&. Read that document for a basic understanding how SCXML documents should be constructed\&.
.PP
Coin uses SCXML for setting up its navigation systems, to be able to remove hardcoded logic for user navigation and externalize it into XML files\&. This makes it easy for users to customize the navigation system for their own purposes\&.
.PP
Unsupported Items:
.PP
.IP "\(bu" 2
The <parallel> element is not supported as intended with parallel states\&. Coin will just treat it as an ordinary <state> element for now\&. Parallel states is not high up on the priority list, so expect this to be handled after a lot of other functionality is in place\&.
.IP "\(bu" 2
The <datamodel>-related part of the specification is not fully supported\&.
.IP "\(bu" 2
The 'target' attribute in the <transition> element can only identify a single state currently, not multiple as you would have to when having support for <parallel> elements (which we don't have)\&.
.IP "\(bu" 2
The virtual state elements like <history> and <anchor> are just implemented as dummy states for now and do not do anything in relation to what they should actually do\&.
.PP
.PP
For learning more about how \fBScXML\fP is implemented and used in Coin, take a look at $COINDIR/scxml/navigation/examiner\&.xml (or in the Coin source directory, data/scxml/navigation/examiner\&.xml) for an example of how an SCXML system for camera navigation looks, and look at the source files in src/navigation/ for the C++ counterparts to the same SCXML navigation system\&.
.PP
\fBSince:\fP
.RS 4
Coin 3\&.0 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Coin from the source code\&.
