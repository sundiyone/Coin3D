.TH "SoFontStyle" 3 "Sun May 28 2017" "Version 4.0.0a" "Coin" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SoFontStyle \- The \fBSoFontStyle\fP class changes the appearance of fonts for text rendering nodes\&.
.PP
Successive text rendering nodes will use fonts with the style settings of this node, if a font with the given settings can be found and loaded from the system\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Inventor/nodes/SoFontStyle\&.h>\fP
.PP
Inherits \fBSoFont\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBFamily\fP { \fBSERIF\fP, \fBSANS\fP, \fBTYPEWRITER\fP }"
.br
.ti -1c
.RI "enum \fBStyle\fP { \fBNONE\fP, \fBBOLD\fP, \fBITALIC\fP }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual \fBSoType\fP \fBgetTypeId\fP (void) const"
.br
.RI "Returns the type identification of an object derived from a class inheriting \fBSoBase\fP\&. This is used for run-time type checking and 'downward' casting\&. "
.ti -1c
.RI "\fBSoFontStyle\fP (void)"
.br
.ti -1c
.RI "\fBSbString\fP \fBgetFontName\fP (void) const"
.br
.ti -1c
.RI "virtual void \fBdoAction\fP (\fBSoAction\fP *action)"
.br
.ti -1c
.RI "virtual void \fBgetBoundingBox\fP (\fBSoGetBoundingBoxAction\fP *action)"
.br
.ti -1c
.RI "virtual void \fBGLRender\fP (\fBSoGLRenderAction\fP *action)"
.br
.ti -1c
.RI "virtual void \fBcallback\fP (\fBSoCallbackAction\fP *action)"
.br
.ti -1c
.RI "virtual void \fBpick\fP (\fBSoPickAction\fP *action)"
.br
.ti -1c
.RI "virtual void \fBgetPrimitiveCount\fP (\fBSoGetPrimitiveCountAction\fP *action)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBSoType\fP \fBgetClassTypeId\fP (void)"
.br
.ti -1c
.RI "static void \fBinitClass\fP (void)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBSoSFEnum\fP \fBfamily\fP"
.br
.ti -1c
.RI "\fBSoSFBitMask\fP \fBstyle\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual const \fBSoFieldData\fP * \fBgetFieldData\fP (void) const"
.br
.ti -1c
.RI "virtual \fB~SoFontStyle\fP ()"
.br
.in -1c
.SS "Static Protected Member Functions"

.in +1c
.ti -1c
.RI "static const \fBSoFieldData\fP ** \fBgetFieldDataPtr\fP (void)"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
The \fBSoFontStyle\fP class changes the appearance of fonts for text rendering nodes\&.
.PP
Successive text rendering nodes will use fonts with the style settings of this node, if a font with the given settings can be found and loaded from the system\&. 

If the specified font style cannot be found on the client system, a default fallback will be used\&. So the application programmer must consider \fBSoFontStyle\fP nodes as nodes giving \fIhints\fP about font settings, as you are \fInot\fP guaranteed to get exactly what you want\&.
.PP
Currently the SERIF family is mapped to 'Times New Roman', SANS is mapped to 'Arial' and TYPEWRITER is mapped to 'Courier New'\&.
.PP
Please note that this node is inheriting \fI\fBSoFont\fP\fP\&. Previous font settings in a branch will therefore be overwritten with the default values of \fI\fBSoFont\fP\fP if an empty \fI\fBSoFontStyle\fP\fP node is inserted in the branch\&.
.PP
\fINB!\fP This node is provided for reasons of compatibility with Open Inventor 2\&.1 but will in most cases result in the default font being rendered\&. It is highly recommended to use the \fBSoFont\fP node instead\&.
.PP
\fBFILE FORMAT/DEFAULTS:\fP 
.PP
.nf
FontStyle {
    name "defaultFont"
    size 10
    family SERIF
    style ()
}

.fi
.PP
.PP
\fBSince:\fP
.RS 4
Inventor 2\&.1 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBSoFont\fP, \fBSoText2\fP, \fBSoText3\fP, \fBSoAsciiText\fP 
.RE
.PP

.SH "Member Enumeration Documentation"
.PP 
.SS "enum \fBSoFontStyle::Family\fP"
Enumeration of the font family to use\&. 
.SS "enum \fBSoFontStyle::Style\fP"
Enumeration of font style characteristics\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "SoFontStyle::SoFontStyle (void)"
Constructor\&. 
.SS "SoFontStyle::~SoFontStyle ()\fC [protected]\fP, \fC [virtual]\fP"
Destructor\&. 
.SH "Member Function Documentation"
.PP 
.SS "\fBSoType\fP SoFontStyle::getTypeId (void) const\fC [virtual]\fP"

.PP
Returns the type identification of an object derived from a class inheriting \fBSoBase\fP\&. This is used for run-time type checking and 'downward' casting\&. Usage example:
.PP
.PP
.nf
void foo(SoNode * node)
{
  if (node->getTypeId() == SoFile::getClassTypeId()) {
    SoFile * filenode = (SoFile *)node;  // safe downward cast, knows the type
  }
}
.fi
.PP
.PP
For application programmers wanting to extend the library with new nodes, engines, nodekits, draggers or others: this method needs to be overridden in \fIall\fP subclasses\&. This is typically done as part of setting up the full type system for extension classes, which is usually accomplished by using the pre-defined macros available through for instance \fBInventor/nodes/SoSubNode\&.h\fP (SO_NODE_INIT_CLASS and SO_NODE_CONSTRUCTOR for node classes), \fBInventor/engines/SoSubEngine\&.h\fP (for engine classes) and so on\&.
.PP
For more information on writing Coin extensions, see the class documentation of the toplevel superclasses for the various class groups\&. 
.PP
Reimplemented from \fBSoFont\fP\&.
.SS "const \fBSoFieldData\fP * SoFontStyle::getFieldData (void) const\fC [protected]\fP, \fC [virtual]\fP"
Returns a pointer to the class-wide field data storage object for this instance\&. If no fields are present, returns \fCNULL\fP\&. 
.PP
Reimplemented from \fBSoFont\fP\&.
.SS "\fBSbString\fP SoFontStyle::getFontName (void) const"
Returns a system-specific text string to use for font loading, based on the style settings of this node\&. 
.SS "void SoFontStyle::doAction (\fBSoAction\fP * action)\fC [virtual]\fP"
This function performs the typical operation of a node for any action\&. 
.PP
Reimplemented from \fBSoFont\fP\&.
.SS "void SoFontStyle::getBoundingBox (\fBSoGetBoundingBoxAction\fP * action)\fC [virtual]\fP"
Action method for the \fBSoGetBoundingBoxAction\fP\&.
.PP
Calculates bounding box and center coordinates for node and modifies the values of the \fIaction\fP to encompass the bounding box for this node and to shift the center point for the scene more towards the one for this node\&.
.PP
Nodes influencing how geometry nodes calculates their bounding box also overrides this method to change the relevant state variables\&. 
.PP
Reimplemented from \fBSoFont\fP\&.
.SS "void SoFontStyle::GLRender (\fBSoGLRenderAction\fP * action)\fC [virtual]\fP"
Action method for the \fBSoGLRenderAction\fP\&.
.PP
This is called during rendering traversals\&. Nodes influencing the rendering state in any way or who wants to throw geometry primitives at OpenGL overrides this method\&. 
.PP
Reimplemented from \fBSoFont\fP\&.
.SS "void SoFontStyle::callback (\fBSoCallbackAction\fP * action)\fC [virtual]\fP"
Action method for \fBSoCallbackAction\fP\&.
.PP
Simply updates the state according to how the node behaves for the render action, so the application programmer can use the \fBSoCallbackAction\fP for extracting information about the scene graph\&. 
.PP
Reimplemented from \fBSoFont\fP\&.
.SS "void SoFontStyle::pick (\fBSoPickAction\fP * action)\fC [virtual]\fP"
Action method for \fBSoPickAction\fP\&.
.PP
Does common processing for \fBSoPickAction\fP \fIaction\fP instances\&. 
.PP
Reimplemented from \fBSoFont\fP\&.
.SS "void SoFontStyle::getPrimitiveCount (\fBSoGetPrimitiveCountAction\fP * action)\fC [virtual]\fP"
Action method for the \fBSoGetPrimitiveCountAction\fP\&.
.PP
Calculates the number of triangle, line segment and point primitives for the node and adds these to the counters of the \fIaction\fP\&.
.PP
Nodes influencing how geometry nodes calculates their primitive count also overrides this method to change the relevant state variables\&. 
.PP
Reimplemented from \fBSoFont\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBSoSFEnum\fP SoFontStyle::family"
Font family hint\&. 
.SS "\fBSoSFBitMask\fP SoFontStyle::style"
Font style hint\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Coin from the source code\&.
