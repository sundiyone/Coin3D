.TH "SoEngineOutput" 3 "Sun May 28 2017" "Version 4.0.0a" "Coin" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SoEngineOutput \- The \fBSoEngineOutput\fP class is the output slots in \fBSoEngine\fP instances\&.
.PP
\fBSoEngineOutput\fP has methods for convenient handling of the connections made from \fBSoEngine\fP objects to \fBSoField\fP objects\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Inventor/engines/SoEngine\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSoEngineOutput\fP (void)"
.br
.ti -1c
.RI "virtual \fB~SoEngineOutput\fP (void)"
.br
.ti -1c
.RI "\fBSoType\fP \fBgetConnectionType\fP (void) const"
.br
.ti -1c
.RI "\fBint\fP \fBgetForwardConnections\fP (\fBSoFieldList\fP &fl) const"
.br
.ti -1c
.RI "void \fBenable\fP (const SbBool flag)"
.br
.ti -1c
.RI "SbBool \fBisEnabled\fP (void) const"
.br
.ti -1c
.RI "\fBSoEngine\fP * \fBgetContainer\fP (void) const"
.br
.ti -1c
.RI "\fBSoNodeEngine\fP * \fBgetNodeContainer\fP (void) const"
.br
.ti -1c
.RI "SbBool \fBisNodeEngineOutput\fP (void) const"
.br
.ti -1c
.RI "void \fBsetContainer\fP (\fBSoEngine\fP *engine)"
.br
.ti -1c
.RI "void \fBsetNodeContainer\fP (\fBSoNodeEngine\fP *nodeengine)"
.br
.ti -1c
.RI "void \fBaddConnection\fP (\fBSoField\fP *f)"
.br
.ti -1c
.RI "void \fBremoveConnection\fP (\fBSoField\fP *f)"
.br
.ti -1c
.RI "\fBint\fP \fBgetNumConnections\fP (void) const"
.br
.ti -1c
.RI "\fBSoField\fP * \fBoperator[]\fP (\fBint\fP i) const"
.br
.ti -1c
.RI "void \fBprepareToWrite\fP (void) const"
.br
.ti -1c
.RI "void \fBdoneWriting\fP (void) const"
.br
.ti -1c
.RI "void \fBtouchSlaves\fP (\fBSoNotList\fP *nl, SbBool donotify)"
.br
.ti -1c
.RI "\fBSoFieldContainer\fP * \fBgetFieldContainer\fP (void)"
.br
.in -1c
.SH "Detailed Description"
.PP 
The \fBSoEngineOutput\fP class is the output slots in \fBSoEngine\fP instances\&.
.PP
\fBSoEngineOutput\fP has methods for convenient handling of the connections made from \fBSoEngine\fP objects to \fBSoField\fP objects\&. 


.PP
\fBSee also:\fP
.RS 4
\fBSoEngine\fP, \fBSoField\fP 
.RE
.PP

.SH "Constructor & Destructor Documentation"
.PP 
.SS "SoEngineOutput::SoEngineOutput (void)"
Constructor\&. The \fBSoEngineOutput\fP will initially not be contained within an \fBSoEngine\fP nor will it have any slave fields attached\&.
.PP
\fBSee also:\fP
.RS 4
\fBsetContainer()\fP 
.RE
.PP

.SS "SoEngineOutput::~SoEngineOutput (void)\fC [virtual]\fP"
Destructor\&. 
.SH "Member Function Documentation"
.PP 
.SS "\fBSoType\fP SoEngineOutput::getConnectionType (void) const"
Returns the type of the engine output\&. 
.SS "\fBint\fP SoEngineOutput::getForwardConnections (\fBSoFieldList\fP & fl) const"
Adds all slave fields connected to this output to \fIfl\fP\&. Returns the number of slaves\&.
.PP
\fBSee also:\fP
.RS 4
\fBaddConnection()\fP 
.PP
\fBremoveConnection()\fP 
.RE
.PP

.SS "void SoEngineOutput::enable (const SbBool flag)"
Sets the enabled flag\&. If output is disabled, the fields connected to this output will not be changed when the engine is evaluated\&.
.PP
\fBSee also:\fP
.RS 4
\fBisEnabled()\fP\&. 
.RE
.PP

.SS "SbBool SoEngineOutput::isEnabled (void) const"
Returns status of the enabled flag\&.
.PP
\fBSee also:\fP
.RS 4
\fBenable()\fP\&. 
.RE
.PP

.SS "\fBSoEngine\fP * SoEngineOutput::getContainer (void) const"
Returns the engine containing this output\&. If the engine containing this output is a NodeEngine, this method returns NULL\&.
.PP
\fBSee also:\fP
.RS 4
\fBsetContainer()\fP, \fBgetNodeContainer()\fP 
.RE
.PP

.SS "\fBSoNodeEngine\fP * SoEngineOutput::getNodeContainer (void) const"
Returns the node engine containing this output\&. If the engine containing this output is not a NodeEgine, this method returns NULL\&.
.PP
This function is an extension for Coin, and it is not available in the original SGI Open Inventor v2\&.1 API\&.
.PP
\fBSee also:\fP
.RS 4
\fBsetNodeContainer()\fP, \fBgetContainer()\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Coin 2\&.0 
.RE
.PP

.SS "SbBool SoEngineOutput::isNodeEngineOutput (void) const"
Returns \fITRUE\fP if the container is a NodeEngine\&.
.PP
This function is an extension for Coin, and it is not available in the original SGI Open Inventor v2\&.1 API\&.
.PP
\fBSee also:\fP
.RS 4
\fBgetNodeContainer()\fP, \fBgetContainer()\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Coin 2\&.0 
.RE
.PP

.SS "void SoEngineOutput::setContainer (\fBSoEngine\fP * engine)"
Sets the engine containing this output\&.
.PP
\fBSee also:\fP
.RS 4
\fBgetContainer()\fP 
.RE
.PP

.SS "void SoEngineOutput::setNodeContainer (\fBSoNodeEngine\fP * nodeengine)"
Sets the NodeEngine containing this output\&.
.PP
This function is an extension for Coin, and it is not available in the original SGI Open Inventor v2\&.1 API\&.
.PP
\fBSee also:\fP
.RS 4
\fBgetNodeContainer()\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Coin 2\&.0 
.RE
.PP

.SS "void SoEngineOutput::addConnection (\fBSoField\fP * f)"
Adds \fIf\fP to the list of connections from this output\&.
.PP
Adds 1 to the reference count of the container engine\&.
.PP
\fBSee also:\fP
.RS 4
\fBremoveConnection()\fP, \fBgetForwardConnections()\fP 
.RE
.PP

.SS "void SoEngineOutput::removeConnection (\fBSoField\fP * f)"
Removes \fIf\fP from the list of connections from this output\&.
.PP
Subtracts 1 from the reference count of the container engine\&. If the reference count reaches zero (which will happen if this was the last connection and the application programmer did not explicitly \fIref\fP the engine), the container engine will be deallocated\&.
.PP
\fBSee also:\fP
.RS 4
\fBaddConnection()\fP, \fBgetForwardConnections()\fP 
.RE
.PP

.SS "\fBint\fP SoEngineOutput::getNumConnections (void) const"
Returns the number of fields in the list of connections\&.
.PP
\fBSee also:\fP
.RS 4
operator[], \fBaddConnection()\fP 
.RE
.PP

.SS "\fBSoEngineOutput\fP * SoEngineOutput::operator[] (\fBint\fP i) const"
Returns the field at index \fIi\fP in the list of connections\&.
.PP
Please note that this might not be the same field as the one the output was originally connected to, since a field converted might have been inserted to converted the output to match the field type\&.
.PP
\fBSee also:\fP
.RS 4
\fBgetNumConnections()\fP
.RE
.PP
Returns element at \fIidx\fP\&.
.PP
Will automatically expand the size of the internal array if \fIidx\fP is outside the current bounds of the list\&. The values of any additional pointers are then set to \fCNULL\fP\&. 
.SS "void SoEngineOutput::prepareToWrite (void) const"
Disables notifications on fields connected to this output\&. This is done before the engine is evaulated, since the fields we are going to write into have already been notified\&.
.PP
\fBSee also:\fP
.RS 4
\fBdoneWriting()\fP 
.RE
.PP

.SS "void SoEngineOutput::doneWriting (void) const"
Restores the notification flags on fields connected to this output after evaluating\&.
.PP
\fBSee also:\fP
.RS 4
\fBprepareToWrite()\fP 
.RE
.PP

.SS "void SoEngineOutput::touchSlaves (\fBSoNotList\fP * nl, SbBool donotify)"
Notify the fields attached to this engine output that the output value has changed\&.
.PP
If \fIdonotify\fP is \fCTRUE\fP, propagate the notification to the fields\&. Otherwise just mark the fields 'dirty' for re-evalution\&.
.PP
Note that this method is not part of the original Open Inventor API\&. 
.SS "\fBSoFieldContainer\fP * SoEngineOutput::getFieldContainer (void)"
Convenience method that returns a field container\&. This method can be used both for NodeEngine and Engine outputs\&.
.PP
This function is an extension for Coin, and it is not available in the original SGI Open Inventor v2\&.1 API\&.
.PP
\fBSince:\fP
.RS 4
Coin 2\&.0 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Coin from the source code\&.
