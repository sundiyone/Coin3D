.TH "SoPathList" 3 "Sun May 28 2017" "Version 4.0.0a" "Coin" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SoPathList \- The \fBSoPathList\fP class is a container for pointers to \fBSoPath\fP objects\&.
.PP
As this class inherits \fBSoBaseList\fP, referencing and dereferencing will default be done on the objects at \fBappend()\fP, \fBremove()\fP, \fBinsert()\fP etc\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Inventor/lists/SoPathList\&.h>\fP
.PP
Inherits \fBSoBaseList\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSoPathList\fP (void)"
.br
.ti -1c
.RI "\fBSoPathList\fP (const \fBint\fP size)"
.br
.ti -1c
.RI "\fBSoPathList\fP (const \fBSoPathList\fP &pl)"
.br
.ti -1c
.RI "\fB~SoPathList\fP ()"
.br
.ti -1c
.RI "void \fBappend\fP (\fBSoPath\fP *const path)"
.br
.ti -1c
.RI "\fBSoPath\fP * \fBoperator[]\fP (const \fBint\fP i) const"
.br
.ti -1c
.RI "\fBSoPathList\fP & \fBoperator=\fP (const \fBSoPathList\fP &pl)"
.br
.ti -1c
.RI "\fBint\fP \fBfindPath\fP (const \fBSoPath\fP &path) const"
.br
.ti -1c
.RI "void \fBsort\fP (void)"
.br
.ti -1c
.RI "void \fBuniquify\fP (void)"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
The \fBSoPathList\fP class is a container for pointers to \fBSoPath\fP objects\&.
.PP
As this class inherits \fBSoBaseList\fP, referencing and dereferencing will default be done on the objects at \fBappend()\fP, \fBremove()\fP, \fBinsert()\fP etc\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "SoPathList::SoPathList (void)"
Default constructor\&. 
.SS "SoPathList::SoPathList (const \fBint\fP size)"
Constructor with a hint about the number of elements the list will hold\&.
.PP
\fBSee also:\fP
.RS 4
\fBSoBaseList::SoBaseList(const int)\fP 
.RE
.PP

.SS "SoPathList::SoPathList (const \fBSoPathList\fP & pl)"
Copy constructor\&.
.PP
Does a shallow copy of the \fBSoPath\fP pointer values, but updates reference count\&.
.PP
\fBSee also:\fP
.RS 4
\fBSoBaseList::SoBaseList(const SoBaseList &)\fP 
.RE
.PP

.SS "SoPathList::~SoPathList ()"
Destructor\&.
.PP
\fBSee also:\fP
.RS 4
\fBSoBaseList::~SoBaseList()\fP 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "void SoPathList::append (\fBSoPath\fP *const path)"
Append \fIptr\fP to the list\&.
.PP
\fBSee also:\fP
.RS 4
\fBSoBaseList::append()\fP 
.RE
.PP

.SS "\fBSoPath\fP * SoPathList::operator[] (const \fBint\fP i) const"
Return node pointer at index \fIi\fP\&.
.PP
\fBSee also:\fP
.RS 4
\fBSoBaseList::operator[]()\fP 
.RE
.PP

.SS "\fBSoPathList\fP & SoPathList::operator= (const \fBSoPathList\fP & pl)"
Shallow copy of contents of list \fIpl\fP to this list\&.
.PP
\fBSee also:\fP
.RS 4
\fBSoBaseList::operator=()\fP 
.RE
.PP

.SS "\fBint\fP SoPathList::findPath (const \fBSoPath\fP & path) const"
Find and return index of first item equal to \fIpath\fP\&. 
.SS "void SoPathList::sort (void)"
Sort paths in list according to how early they are run into when traversing the scene graph\&. 
.SS "void SoPathList::uniquify (void)"
Removes identical paths and paths that go through the tail of another path\&.
.PP
Note that this method assumes the list to be in a sorted order\&.
.PP
\fBSee also:\fP
.RS 4
\fBsort()\fP 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Coin from the source code\&.
