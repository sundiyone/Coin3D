.TH "SoTexture3Transform" 3 "Sun May 28 2017" "Version 4.0.0a" "Coin" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SoTexture3Transform \- The \fBSoTexture3Transform\fP class is used to define 3D texture transformations\&.
.PP
Textures applied to shapes in the scene can be transformed by 'prefixing' in the state with instances of this node type\&. Translations, rotations and scaling in 3D can all be done\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Inventor/nodes/SoTexture3Transform\&.h>\fP
.PP
Inherits \fBSoNode\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual \fBSoType\fP \fBgetTypeId\fP (void) const"
.br
.RI "Returns the type identification of an object derived from a class inheriting \fBSoBase\fP\&. This is used for run-time type checking and 'downward' casting\&. "
.ti -1c
.RI "\fBSoTexture3Transform\fP (void)"
.br
.ti -1c
.RI "virtual void \fBdoAction\fP (\fBSoAction\fP *action)"
.br
.ti -1c
.RI "virtual void \fBcallback\fP (\fBSoCallbackAction\fP *action)"
.br
.ti -1c
.RI "virtual void \fBGLRender\fP (\fBSoGLRenderAction\fP *action)"
.br
.ti -1c
.RI "virtual void \fBgetMatrix\fP (\fBSoGetMatrixAction\fP *action)"
.br
.ti -1c
.RI "virtual void \fBpick\fP (\fBSoPickAction\fP *action)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBSoType\fP \fBgetClassTypeId\fP (void)"
.br
.ti -1c
.RI "static void \fBinitClass\fP (void)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBSoSFVec3f\fP \fBtranslation\fP"
.br
.ti -1c
.RI "\fBSoSFRotation\fP \fBrotation\fP"
.br
.ti -1c
.RI "\fBSoSFVec3f\fP \fBscaleFactor\fP"
.br
.ti -1c
.RI "\fBSoSFRotation\fP \fBscaleOrientation\fP"
.br
.ti -1c
.RI "\fBSoSFVec3f\fP \fBcenter\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual const \fBSoFieldData\fP * \fBgetFieldData\fP (void) const"
.br
.ti -1c
.RI "virtual \fB~SoTexture3Transform\fP ()"
.br
.in -1c
.SS "Static Protected Member Functions"

.in +1c
.ti -1c
.RI "static const \fBSoFieldData\fP ** \fBgetFieldDataPtr\fP (void)"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
The \fBSoTexture3Transform\fP class is used to define 3D texture transformations\&.
.PP
Textures applied to shapes in the scene can be transformed by 'prefixing' in the state with instances of this node type\&. Translations, rotations and scaling in 3D can all be done\&. 

The default settings of this node's fields equals a 'null
transform', ie no transformation\&.
.PP
Be aware that this class is an extension for Coin, and it is not available in the original SGI Open Inventor v2\&.1 API\&.
.PP
\fBFILE FORMAT/DEFAULTS:\fP 
.PP
.nf
Texture3Transform {
    translation 0 0 0
    rotation 0 0 1  0
    scaleFactor 1 1 1
    scaleOrientation 0 0 1  0
    center 0 0 0
}

.fi
.PP
.PP
\fBSee also:\fP
.RS 4
\fBSoTexture2Transform\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Coin 2\&.0 
.PP
TGS Inventor 2\&.6 
.RE
.PP

.SH "Constructor & Destructor Documentation"
.PP 
.SS "SoTexture3Transform::SoTexture3Transform (void)"
Constructor\&. 
.SS "SoTexture3Transform::~SoTexture3Transform ()\fC [protected]\fP, \fC [virtual]\fP"
Destructor\&. 
.SH "Member Function Documentation"
.PP 
.SS "\fBSoType\fP SoTexture3Transform::getTypeId (void) const\fC [virtual]\fP"

.PP
Returns the type identification of an object derived from a class inheriting \fBSoBase\fP\&. This is used for run-time type checking and 'downward' casting\&. Usage example:
.PP
.PP
.nf
void foo(SoNode * node)
{
  if (node->getTypeId() == SoFile::getClassTypeId()) {
    SoFile * filenode = (SoFile *)node;  // safe downward cast, knows the type
  }
}
.fi
.PP
.PP
For application programmers wanting to extend the library with new nodes, engines, nodekits, draggers or others: this method needs to be overridden in \fIall\fP subclasses\&. This is typically done as part of setting up the full type system for extension classes, which is usually accomplished by using the pre-defined macros available through for instance \fBInventor/nodes/SoSubNode\&.h\fP (SO_NODE_INIT_CLASS and SO_NODE_CONSTRUCTOR for node classes), \fBInventor/engines/SoSubEngine\&.h\fP (for engine classes) and so on\&.
.PP
For more information on writing Coin extensions, see the class documentation of the toplevel superclasses for the various class groups\&. 
.PP
Implements \fBSoBase\fP\&.
.SS "const \fBSoFieldData\fP * SoTexture3Transform::getFieldData (void) const\fC [protected]\fP, \fC [virtual]\fP"
Returns a pointer to the class-wide field data storage object for this instance\&. If no fields are present, returns \fCNULL\fP\&. 
.PP
Reimplemented from \fBSoFieldContainer\fP\&.
.SS "void SoTexture3Transform::doAction (\fBSoAction\fP * action)\fC [virtual]\fP"
This function performs the typical operation of a node for any action\&. 
.PP
Reimplemented from \fBSoNode\fP\&.
.SS "void SoTexture3Transform::callback (\fBSoCallbackAction\fP * action)\fC [virtual]\fP"
Action method for \fBSoCallbackAction\fP\&.
.PP
Simply updates the state according to how the node behaves for the render action, so the application programmer can use the \fBSoCallbackAction\fP for extracting information about the scene graph\&. 
.PP
Reimplemented from \fBSoNode\fP\&.
.SS "void SoTexture3Transform::GLRender (\fBSoGLRenderAction\fP * action)\fC [virtual]\fP"
Action method for the \fBSoGLRenderAction\fP\&.
.PP
This is called during rendering traversals\&. Nodes influencing the rendering state in any way or who wants to throw geometry primitives at OpenGL overrides this method\&. 
.PP
Reimplemented from \fBSoNode\fP\&.
.SS "void SoTexture3Transform::getMatrix (\fBSoGetMatrixAction\fP * action)\fC [virtual]\fP"
Action method for \fBSoGetMatrixAction\fP\&.
.PP
Updates \fIaction\fP by accumulating with the transformation matrix of this node (if any)\&. 
.PP
Reimplemented from \fBSoNode\fP\&.
.SS "void SoTexture3Transform::pick (\fBSoPickAction\fP * action)\fC [virtual]\fP"
Action method for \fBSoPickAction\fP\&.
.PP
Does common processing for \fBSoPickAction\fP \fIaction\fP instances\&. 
.PP
Reimplemented from \fBSoNode\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBSoSFVec3f\fP SoTexture3Transform::translation"
Texture coordinate translation\&. Default value is [0, 0, 0]\&. 
.SS "\fBSoSFRotation\fP SoTexture3Transform::rotation"
Texture coordinate rotation (s is x-axis, t is y-axis and r is z-axis)\&. Defaults to an identity rotation (ie zero rotation)\&. 
.SS "\fBSoSFVec3f\fP SoTexture3Transform::scaleFactor"
Texture coordinate scale factors\&. Default value is [1, 1, 1]\&. 
.SS "\fBSoSFRotation\fP SoTexture3Transform::scaleOrientation"
The orientation the texture is set to before scaling\&. Defaults to an identity rotation (ie zero rotation)\&. 
.SS "\fBSoSFVec3f\fP SoTexture3Transform::center"
Center for scale and rotation\&. Default value is [0, 0, 0]\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Coin from the source code\&.
