.TH "SoSpotLight" 3 "Sun May 28 2017" "Version 4.0.0a" "Coin" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SoSpotLight \- The \fBSoSpotLight\fP class is a node type for light sources with a cone shaped lightvolume\&.
.PP
Spotlights are light sources with a position and a direction\&. They can be thought of as a pointlight with a lampshade\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Inventor/nodes/SoSpotLight\&.h>\fP
.PP
Inherits \fBSoLight\fP\&.
.PP
Inherited by \fBSoShadowSpotLight\fP, and \fBSoSpotLightManip\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual \fBSoType\fP \fBgetTypeId\fP (void) const"
.br
.RI "Returns the type identification of an object derived from a class inheriting \fBSoBase\fP\&. This is used for run-time type checking and 'downward' casting\&. "
.ti -1c
.RI "\fBSoSpotLight\fP (void)"
.br
.ti -1c
.RI "virtual void \fBGLRender\fP (\fBSoGLRenderAction\fP *action)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBSoType\fP \fBgetClassTypeId\fP (void)"
.br
.ti -1c
.RI "static void \fBinitClass\fP (void)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBSoSFVec3f\fP \fBlocation\fP"
.br
.ti -1c
.RI "\fBSoSFVec3f\fP \fBdirection\fP"
.br
.ti -1c
.RI "\fBSoSFFloat\fP \fBdropOffRate\fP"
.br
.ti -1c
.RI "\fBSoSFFloat\fP \fBcutOffAngle\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual const \fBSoFieldData\fP * \fBgetFieldData\fP (void) const"
.br
.ti -1c
.RI "virtual \fB~SoSpotLight\fP ()"
.br
.in -1c
.SS "Static Protected Member Functions"

.in +1c
.ti -1c
.RI "static const \fBSoFieldData\fP ** \fBgetFieldDataPtr\fP (void)"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
The \fBSoSpotLight\fP class is a node type for light sources with a cone shaped lightvolume\&.
.PP
Spotlights are light sources with a position and a direction\&. They can be thought of as a pointlight with a lampshade\&. 

See also documentation of parent class for important information regarding light sources in general\&.
.PP
\fBFILE FORMAT/DEFAULTS:\fP 
.PP
.nf
SpotLight {
    on TRUE
    intensity 1
    color 1 1 1
    location 0 0 1
    direction 0 0 -1
    dropOffRate 0
    cutOffAngle 0\&.78539819
}

.fi
.PP
.PP
\fBSee also:\fP
.RS 4
\fBSoSpotLight\fP 
.RE
.PP

.SH "Constructor & Destructor Documentation"
.PP 
.SS "SoSpotLight::SoSpotLight (void)"
Constructor\&. 
.SS "SoSpotLight::~SoSpotLight ()\fC [protected]\fP, \fC [virtual]\fP"
Destructor\&. 
.SH "Member Function Documentation"
.PP 
.SS "\fBSoType\fP SoSpotLight::getTypeId (void) const\fC [virtual]\fP"

.PP
Returns the type identification of an object derived from a class inheriting \fBSoBase\fP\&. This is used for run-time type checking and 'downward' casting\&. Usage example:
.PP
.PP
.nf
void foo(SoNode * node)
{
  if (node->getTypeId() == SoFile::getClassTypeId()) {
    SoFile * filenode = (SoFile *)node;  // safe downward cast, knows the type
  }
}
.fi
.PP
.PP
For application programmers wanting to extend the library with new nodes, engines, nodekits, draggers or others: this method needs to be overridden in \fIall\fP subclasses\&. This is typically done as part of setting up the full type system for extension classes, which is usually accomplished by using the pre-defined macros available through for instance \fBInventor/nodes/SoSubNode\&.h\fP (SO_NODE_INIT_CLASS and SO_NODE_CONSTRUCTOR for node classes), \fBInventor/engines/SoSubEngine\&.h\fP (for engine classes) and so on\&.
.PP
For more information on writing Coin extensions, see the class documentation of the toplevel superclasses for the various class groups\&. 
.PP
Reimplemented from \fBSoLight\fP\&.
.PP
Reimplemented in \fBSoSpotLightManip\fP, and \fBSoShadowSpotLight\fP\&.
.SS "const \fBSoFieldData\fP * SoSpotLight::getFieldData (void) const\fC [protected]\fP, \fC [virtual]\fP"
Returns a pointer to the class-wide field data storage object for this instance\&. If no fields are present, returns \fCNULL\fP\&. 
.PP
Reimplemented from \fBSoLight\fP\&.
.PP
Reimplemented in \fBSoSpotLightManip\fP, and \fBSoShadowSpotLight\fP\&.
.SS "void SoSpotLight::GLRender (\fBSoGLRenderAction\fP * action)\fC [virtual]\fP"
Action method for the \fBSoGLRenderAction\fP\&.
.PP
This is called during rendering traversals\&. Nodes influencing the rendering state in any way or who wants to throw geometry primitives at OpenGL overrides this method\&. 
.PP
Reimplemented from \fBSoNode\fP\&.
.PP
Reimplemented in \fBSoSpotLightManip\fP, and \fBSoShadowSpotLight\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBSoSFVec3f\fP SoSpotLight::location"
3D position of light source\&. Default position is <0, 0, 1>\&. 
.SS "\fBSoSFVec3f\fP SoSpotLight::direction"
Direction vector, where the light is pointing\&. Default is to point along the negative z-axis\&. 
.SS "\fBSoSFFloat\fP SoSpotLight::dropOffRate"
The rate of intensity drop-off from the ray along the direction vector\&. Value must be between 0\&.0 (equal intensity for the whole cone of light), to 1\&.0 (a narrow intensity ray)\&.
.PP
Default value is 0\&.0\&. 
.SS "\fBSoSFFloat\fP SoSpotLight::cutOffAngle"
The angle in radians from the direction vector where there will be no light outside (i\&.e\&. the angle of the 'lampshade')\&. Default value is PI/4\&.0 (i\&.e\&. 45°)\&. The value of this field will be clamped to [0\&.0, PI/2] before it is used\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Coin from the source code\&.
