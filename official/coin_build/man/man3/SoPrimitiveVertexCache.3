.TH "SoPrimitiveVertexCache" 3 "Sun May 28 2017" "Version 4.0.0a" "Coin" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SoPrimitiveVertexCache
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <include/Inventor/caches/SoPrimitiveVertexCache\&.h>\fP
.PP
Inherits \fBSoCache\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBArrays\fP { \fBNORMAL\fP = 0x01, \fBTEXCOORD\fP = 0x02, \fBCOLOR\fP = 0x04, \fBALL\fP = (NORMAL|TEXCOORD|COLOR) }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSoPrimitiveVertexCache\fP (\fBSoState\fP *state)"
.br
.ti -1c
.RI "virtual \fB~SoPrimitiveVertexCache\fP ()"
.br
.ti -1c
.RI "virtual SbBool \fBisValid\fP (const \fBSoState\fP *state) const"
.br
.ti -1c
.RI "void \fBclose\fP (\fBSoState\fP *state)"
.br
.ti -1c
.RI "void \fBrenderTriangles\fP (\fBSoState\fP *state, const \fBint\fP arrays=ALL) const"
.br
.ti -1c
.RI "void \fBrenderLines\fP (\fBSoState\fP *state, const \fBint\fP arrays=ALL) const"
.br
.ti -1c
.RI "void \fBrenderPoints\fP (\fBSoState\fP *state, const \fBint\fP array=ALL) const"
.br
.ti -1c
.RI "void \fBaddTriangle\fP (const \fBSoPrimitiveVertex\fP *v0, const \fBSoPrimitiveVertex\fP *v1, const \fBSoPrimitiveVertex\fP *v2, const \fBint\fP *pointdetailidx=NULL)"
.br
.ti -1c
.RI "void \fBaddLine\fP (const \fBSoPrimitiveVertex\fP *v0, const \fBSoPrimitiveVertex\fP *v1)"
.br
.ti -1c
.RI "void \fBaddPoint\fP (const \fBSoPrimitiveVertex\fP *v)"
.br
.ti -1c
.RI "\fBint\fP \fBgetNumVertices\fP (void) const"
.br
.ti -1c
.RI "const \fBSbVec3f\fP * \fBgetVertexArray\fP (void) const"
.br
.ti -1c
.RI "const \fBSbVec3f\fP * \fBgetNormalArray\fP (void) const"
.br
.ti -1c
.RI "const \fBSbVec4f\fP * \fBgetTexCoordArray\fP (void) const"
.br
.ti -1c
.RI "const \fBSbVec2f\fP * \fBgetBumpCoordArray\fP (void) const"
.br
.ti -1c
.RI "const uint8_t * \fBgetColorArray\fP (void) const"
.br
.ti -1c
.RI "\fBint\fP \fBgetNumTriangleIndices\fP (void) const"
.br
.ti -1c
.RI "const GLint * \fBgetTriangleIndices\fP (void) const"
.br
.ti -1c
.RI "int32_t \fBgetTriangleIndex\fP (const \fBint\fP idx) const"
.br
.ti -1c
.RI "SbBool \fBcolorPerVertex\fP (void) const"
.br
.ti -1c
.RI "const \fBSbVec4f\fP * \fBgetMultiTextureCoordinateArray\fP (const \fBint\fP unit) const"
.br
.ti -1c
.RI "\fBint\fP \fBgetNumLineIndices\fP (void) const"
.br
.ti -1c
.RI "const GLint * \fBgetLineIndices\fP (void) const"
.br
.ti -1c
.RI "\fBint\fP \fBgetNumPointIndices\fP (void) const"
.br
.ti -1c
.RI "const GLint * \fBgetPointIndices\fP (void) const"
.br
.ti -1c
.RI "void \fBfit\fP (void)"
.br
.ti -1c
.RI "void \fBdepthSortTriangles\fP (\fBSoState\fP *state)"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
The SoPrimitiveVertexClass is used to cache generated triangles\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "SoPrimitiveVertexCache::SoPrimitiveVertexCache (\fBSoState\fP * state)"
Constructor\&. 
.SS "SoPrimitiveVertexCache::~SoPrimitiveVertexCache ()\fC [virtual]\fP"
Destructor\&. 
.SH "Member Function Documentation"
.PP 
.SS "SbBool SoPrimitiveVertexCache::isValid (const \fBSoState\fP * state) const\fC [virtual]\fP"
Return \fITRUE\fP if this cache is valid, \fIFALSE\fP otherwise\&. 
.PP
Reimplemented from \fBSoCache\fP\&.
.SS "void SoPrimitiveVertexCache::close (\fBSoState\fP * state)"
Closes the cache after it's created\&. Takes care of \fBSoGLLazyElement\fP synchronization\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Coin from the source code\&.
