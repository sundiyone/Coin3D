.TH "SoSFNode" 3 "Sun May 28 2017" "Version 4.0.0a" "Coin" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SoSFNode \- The \fBSoSFNode\fP class is a container for a single node\&.
.PP
This field container stores a pointer to a Coin node\&. It takes care of the necessary functionality for handling copy, import and export operations\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Inventor/fields/SoSFNode\&.h>\fP
.PP
Inherits \fBSoSField\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual \fBSoType\fP \fBgetTypeId\fP (void) const"
.br
.ti -1c
.RI "virtual void \fBcopyFrom\fP (const \fBSoField\fP &field)"
.br
.ti -1c
.RI "const \fBSoSFNode\fP & \fBoperator=\fP (const \fBSoSFNode\fP &field)"
.br
.ti -1c
.RI "virtual SbBool \fBisSame\fP (const \fBSoField\fP &field) const"
.br
.ti -1c
.RI "\fBSoNode\fP * \fBgetValue\fP (void) const"
.br
.ti -1c
.RI "void \fBsetValue\fP (\fBSoNode\fP *newvalue)"
.br
.ti -1c
.RI "\fBSoNode\fP * \fBoperator=\fP (\fBSoNode\fP *newvalue)"
.br
.ti -1c
.RI "\fBint\fP \fBoperator==\fP (const \fBSoSFNode\fP &field) const"
.br
.ti -1c
.RI "\fBint\fP \fBoperator!=\fP (const \fBSoSFNode\fP &field) const"
.br
.ti -1c
.RI "virtual void \fBfixCopy\fP (SbBool copyconnections)"
.br
.ti -1c
.RI "virtual SbBool \fBreferencesCopy\fP (void) const"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static void * \fBcreateInstance\fP (void)"
.br
.ti -1c
.RI "static \fBSoType\fP \fBgetClassTypeId\fP (void)"
.br
.ti -1c
.RI "static void \fBinitClass\fP (void)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBSoNode\fP * \fBvalue\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
The \fBSoSFNode\fP class is a container for a single node\&.
.PP
This field container stores a pointer to a Coin node\&. It takes care of the necessary functionality for handling copy, import and export operations\&. 

Note that the node pointer stored in a field instance of this type may be a \fCNULL\fP pointer\&.
.PP
\fBSee also:\fP
.RS 4
\fBSoNode\fP, \fBSoMFNode\fP 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "\fBSoType\fP SoSFNode::getTypeId (void) const\fC [virtual]\fP"
Returns the type identification instance which uniquely identifies the Coin field class the object belongs to\&.
.PP
\fBSee also:\fP
.RS 4
getClassTypeId(), \fBSoType\fP 
.RE
.PP

.PP
Implements \fBSoField\fP\&.
.SS "void SoSFNode::copyFrom (const \fBSoField\fP & f)\fC [virtual]\fP"
Copy value(s) from \fIf\fP into this field\&. \fIf\fP must be of the same type as this field\&. 
.PP
Implements \fBSoField\fP\&.
.SS "SbBool SoSFNode::isSame (const \fBSoField\fP & f) const\fC [virtual]\fP"
Check for equal type and value(s)\&. 
.PP
Implements \fBSoField\fP\&.
.SS "void SoSFNode::fixCopy (SbBool copyconnections)\fC [virtual]\fP"
This method is internally called after \fBSoField::copyFrom()\fP during scene graph copies, and should do the operations necessary for fixing up the field instance after it has gotten a new value\&.
.PP
The default method in the \fBSoField\fP superclass does nothing\&.
.PP
The application programmer should normally not need to consider this method, unless he constructs a complex field type which contains new references to container instances (i\&.e\&. nodes or engines)\&. Overriding this method is then necessary to update the reference pointers, as they could have been duplicated during the copy operation\&. 
.PP
Reimplemented from \fBSoField\fP\&.
.SS "SbBool SoSFNode::referencesCopy (void) const\fC [virtual]\fP"
Returns \fCTRUE\fP if this field has references to any containers in the scene graph which are also duplicated during the copy operation\&.
.PP
Note that this method \fIonly\fP is valid to call during copy operations\&.
.PP
See also the note about the relevance of the \fBfixCopy()\fP method for application programmers, as it is applicable on this method aswell\&. 
.PP
Reimplemented from \fBSoField\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Coin from the source code\&.
