.TH "SoTriggerAny" 3 "Sun May 28 2017" "Version 4.0.0a" "Coin" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SoTriggerAny \- The \fBSoTriggerAny\fP class is a fan-in engine for triggers\&.
.PP
When any one of the input triggers are 'pulsed', any field connected as a slave to the engine output will be notified\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Inventor/engines/SoTriggerAny\&.h>\fP
.PP
Inherits \fBSoEngine\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual \fBSoType\fP \fBgetTypeId\fP (void) const"
.br
.RI "Returns the type identification of an object derived from a class inheriting \fBSoBase\fP\&. This is used for run-time type checking and 'downward' casting\&. "
.ti -1c
.RI "virtual const \fBSoFieldData\fP * \fBgetFieldData\fP (void) const"
.br
.ti -1c
.RI "virtual const \fBSoEngineOutputData\fP * \fBgetOutputData\fP (void) const"
.br
.ti -1c
.RI "\fBSoTriggerAny\fP (void)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBSoType\fP \fBgetClassTypeId\fP (void)"
.br
.ti -1c
.RI "static void * \fBcreateInstance\fP (void)"
.br
.ti -1c
.RI "static void \fBinitClass\fP (void)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBSoSFTrigger\fP \fBinput0\fP"
.br
.ti -1c
.RI "\fBSoSFTrigger\fP \fBinput1\fP"
.br
.ti -1c
.RI "\fBSoSFTrigger\fP \fBinput2\fP"
.br
.ti -1c
.RI "\fBSoSFTrigger\fP \fBinput3\fP"
.br
.ti -1c
.RI "\fBSoSFTrigger\fP \fBinput4\fP"
.br
.ti -1c
.RI "\fBSoSFTrigger\fP \fBinput5\fP"
.br
.ti -1c
.RI "\fBSoSFTrigger\fP \fBinput6\fP"
.br
.ti -1c
.RI "\fBSoSFTrigger\fP \fBinput7\fP"
.br
.ti -1c
.RI "\fBSoSFTrigger\fP \fBinput8\fP"
.br
.ti -1c
.RI "\fBSoSFTrigger\fP \fBinput9\fP"
.br
.ti -1c
.RI "\fBSoEngineOutput\fP \fBoutput\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual \fB~SoTriggerAny\fP (void)"
.br
.in -1c
.SS "Static Protected Member Functions"

.in +1c
.ti -1c
.RI "static const \fBSoFieldData\fP ** \fBgetInputDataPtr\fP (void)"
.br
.ti -1c
.RI "static const \fBSoEngineOutputData\fP ** \fBgetOutputDataPtr\fP (void)"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
The \fBSoTriggerAny\fP class is a fan-in engine for triggers\&.
.PP
When any one of the input triggers are 'pulsed', any field connected as a slave to the engine output will be notified\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "SoTriggerAny::SoTriggerAny (void)"
Default constructor\&. 
.SS "SoTriggerAny::~SoTriggerAny (void)\fC [protected]\fP, \fC [virtual]\fP"
Destructor is protected because explicit destruction of engines is not allowed\&. 
.SH "Member Function Documentation"
.PP 
.SS "\fBSoType\fP SoTriggerAny::getTypeId (void) const\fC [virtual]\fP"

.PP
Returns the type identification of an object derived from a class inheriting \fBSoBase\fP\&. This is used for run-time type checking and 'downward' casting\&. Usage example:
.PP
.PP
.nf
void foo(SoNode * node)
{
  if (node->getTypeId() == SoFile::getClassTypeId()) {
    SoFile * filenode = (SoFile *)node;  // safe downward cast, knows the type
  }
}
.fi
.PP
.PP
For application programmers wanting to extend the library with new nodes, engines, nodekits, draggers or others: this method needs to be overridden in \fIall\fP subclasses\&. This is typically done as part of setting up the full type system for extension classes, which is usually accomplished by using the pre-defined macros available through for instance \fBInventor/nodes/SoSubNode\&.h\fP (SO_NODE_INIT_CLASS and SO_NODE_CONSTRUCTOR for node classes), \fBInventor/engines/SoSubEngine\&.h\fP (for engine classes) and so on\&.
.PP
For more information on writing Coin extensions, see the class documentation of the toplevel superclasses for the various class groups\&. 
.PP
Implements \fBSoBase\fP\&.
.SS "const \fBSoFieldData\fP * SoTriggerAny::getFieldData (void) const\fC [virtual]\fP"
Returns a pointer to the class-wide field data storage object for this instance\&. If no fields are present, returns \fCNULL\fP\&. 
.PP
Reimplemented from \fBSoFieldContainer\fP\&.
.SS "const \fBSoEngineOutputData\fP * SoTriggerAny::getOutputData (void) const\fC [virtual]\fP"
\fIThis API member is considered internal to the library, as it is not likely to be of interest to the application programmer\&.\fP 
.PP
Implements \fBSoEngine\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBSoSFTrigger\fP SoTriggerAny::input0"
Input trigger\&. 
.SS "\fBSoSFTrigger\fP SoTriggerAny::input1"
Input trigger\&. 
.SS "\fBSoSFTrigger\fP SoTriggerAny::input2"
Input trigger\&. 
.SS "\fBSoSFTrigger\fP SoTriggerAny::input3"
Input trigger\&. 
.SS "\fBSoSFTrigger\fP SoTriggerAny::input4"
Input trigger\&. 
.SS "\fBSoSFTrigger\fP SoTriggerAny::input5"
Input trigger\&. 
.SS "\fBSoSFTrigger\fP SoTriggerAny::input6"
Input trigger\&. 
.SS "\fBSoSFTrigger\fP SoTriggerAny::input7"
Input trigger\&. 
.SS "\fBSoSFTrigger\fP SoTriggerAny::input8"
Input trigger\&. 
.SS "\fBSoSFTrigger\fP SoTriggerAny::input9"
Input trigger\&. 
.SS "\fBSoEngineOutput\fP SoTriggerAny::output"
(\fBSoSFTrigger\fP) Connect to the output with the field(s) you want notified upon any input trigger 'pulses'\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Coin from the source code\&.
