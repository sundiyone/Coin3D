.TH "SbLineProjector" 3 "Sun May 28 2017" "Version 4.0.0a" "Coin" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SbLineProjector \- The \fBSbLineProjector\fP class projects 2D points to 3D points along a line\&.
.PP
The 3D projection of the 2D coordinates is for this projector class constrained to lie along a pre-defined line\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Inventor/projectors/SbLineProjector\&.h>\fP
.PP
Inherits \fBSbProjector\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSbLineProjector\fP (void)"
.br
.ti -1c
.RI "virtual \fBSbProjector\fP * \fBcopy\fP (void) const"
.br
.ti -1c
.RI "virtual \fBSbVec3f\fP \fBproject\fP (const \fBSbVec2f\fP &point)"
.br
.ti -1c
.RI "virtual SbBool \fBtryProject\fP (const \fBSbVec2f\fP &point, const float epsilon, \fBSbVec3f\fP &result)"
.br
.ti -1c
.RI "void \fBsetLine\fP (const \fBSbLine\fP &\fBline\fP)"
.br
.ti -1c
.RI "const \fBSbLine\fP & \fBgetLine\fP (void) const"
.br
.ti -1c
.RI "virtual \fBSbVec3f\fP \fBgetVector\fP (const \fBSbVec2f\fP &viewpos1, const \fBSbVec2f\fP &viewpos2)"
.br
.ti -1c
.RI "virtual \fBSbVec3f\fP \fBgetVector\fP (const \fBSbVec2f\fP &viewpos)"
.br
.ti -1c
.RI "void \fBsetStartPosition\fP (const \fBSbVec2f\fP &viewpos)"
.br
.ti -1c
.RI "void \fBsetStartPosition\fP (const \fBSbVec3f\fP &point)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBSbLine\fP \fBline\fP"
.br
.ti -1c
.RI "\fBSbVec3f\fP \fBlastPoint\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
The \fBSbLineProjector\fP class projects 2D points to 3D points along a line\&.
.PP
The 3D projection of the 2D coordinates is for this projector class constrained to lie along a pre-defined line\&. 

Among other places, this is useful within the translation draggers, like for instance \fBSoTranslate1Dragger\fP, where we want to move 'pieces' along one or more axes\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "SbLineProjector::SbLineProjector (void)"
Constructor\&. Intializes the projector instance to use a line from <0, 0, 0> to <0, 1, 0>\&. 
.SH "Member Function Documentation"
.PP 
.SS "\fBSbProjector\fP * SbLineProjector::copy (void) const\fC [virtual]\fP"
Construct and return a copy of this projector\&. The caller is responsible for destructing the new instance\&.
.PP
\fBNote that if the Coin library has been built as a DLL under Microsoft Windows and you use this method from application code, you \fImust\fP make sure that both the Coin DLL and the application executable is using the same instance of a C Run-Time (CRT) library\&. Otherwise, you \fIwill\fP get memory heap corruption upon deallocating the returned instances, eventually leading to mysterious crashes\&.\fP 
.PP
Implements \fBSbProjector\fP\&.
.SS "\fBSbVec3f\fP SbLineProjector::project (const \fBSbVec2f\fP & point)\fC [virtual]\fP"
Project the 2D \fIpoint\fP from normalized viewport coordinates to a 3D point\&. The mapping will be done in accordance with the type of the projector\&. 
.PP
Implements \fBSbProjector\fP\&.
.SS "SbBool SbLineProjector::tryProject (const \fBSbVec2f\fP & point, const float epsilon, \fBSbVec3f\fP & result)\fC [virtual]\fP"
Try projecting the 2D \fIpoint\fP from normalized viewport coordinates to a 3D point\&. The mapping will be done in accordance with the type of the projector\&.
.PP
If the projection can't be done safely (for instance when the projection plane or line is parallel to the view volume projection), this function should return FALSE\&.
.PP
Default implementation will call \fBproject()\fP and always return TRUE, but subclasses can override this behavior to support safe projections\&.
.PP
\fBSince:\fP
.RS 4
Coin 3\&.0 
.RE
.PP

.PP
Reimplemented from \fBSbProjector\fP\&.
.SS "void SbLineProjector::setLine (const \fBSbLine\fP & lineref)"
Set a new projection line\&. 3D points will be mapped to be on this line\&. 
.SS "const \fBSbLine\fP & SbLineProjector::getLine (void) const"
Returns the currently set projection line\&. 
.SS "\fBSbVec3f\fP SbLineProjector::getVector (const \fBSbVec2f\fP & viewpos1, const \fBSbVec2f\fP & viewpos2)\fC [virtual]\fP"
Calculates and returns a vector between the projected 3D position of \fIviewpos1\fP and \fIviewpos2\fP\&. 
.SS "\fBSbVec3f\fP SbLineProjector::getVector (const \fBSbVec2f\fP & viewpos)\fC [virtual]\fP"
Returns the 3D vector between the last projection and the one calculated for \fIviewpos\fP\&. 
.SS "void SbLineProjector::setStartPosition (const \fBSbVec2f\fP & viewpos)"
Explicitly set position of initial projection, so we get correct values for later calls to \fBgetVector()\fP etc\&. 
.SS "void SbLineProjector::setStartPosition (const \fBSbVec3f\fP & point)"
Explicitly set position of initial projection, so we get correct values for later calls to \fBgetVector()\fP etc\&. 
.SH "Member Data Documentation"
.PP 
.SS "SbLineProjector::line\fC [protected]\fP"
The projection line\&. Projected 3D points will be constrained to be on this line\&. 
.SS "SbLineProjector::lastPoint\fC [protected]\fP"
The last projected point\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Coin from the source code\&.
