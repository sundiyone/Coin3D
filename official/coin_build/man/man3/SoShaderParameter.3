.TH "SoShaderParameter" 3 "Sun May 28 2017" "Version 4.0.0a" "Coin" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SoShaderParameter \- The \fBSoShaderParameter\fP class is the base class for all shader parameter classes\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Inventor/nodes/SoShaderParameter\&.h>\fP
.PP
Inherits \fBSoNode\fP\&.
.PP
Inherited by \fBSoUniformShaderParameter\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual \fBSoType\fP \fBgetTypeId\fP (void) const"
.br
.RI "Returns the type identification of an object derived from a class inheriting \fBSoBase\fP\&. This is used for run-time type checking and 'downward' casting\&. "
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBSoType\fP \fBgetClassTypeId\fP (void)"
.br
.ti -1c
.RI "static void \fBinitClass\fP ()"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBSoSFString\fP \fBname\fP"
.br
.ti -1c
.RI "\fBSoSFInt32\fP \fBidentifier\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual const \fBSoFieldData\fP * \fBgetFieldData\fP (void) const"
.br
.ti -1c
.RI "\fBSoShaderParameter\fP ()"
.br
.ti -1c
.RI "virtual \fB~SoShaderParameter\fP ()"
.br
.in -1c
.SS "Static Protected Member Functions"

.in +1c
.ti -1c
.RI "static const \fBSoFieldData\fP ** \fBgetFieldDataPtr\fP (void)"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
The \fBSoShaderParameter\fP class is the base class for all shader parameter classes\&. 

In addition to the \fIname\fP and \fIidentifier\fP field, all subclasses have a \fIvalue\fP field which is used for specifying the parameter value\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "SoShaderParameter::SoShaderParameter (void)\fC [protected]\fP"
Constructor\&. 
.SS "SoShaderParameter::~SoShaderParameter ()\fC [protected]\fP, \fC [virtual]\fP"
Destructor\&. 
.SH "Member Function Documentation"
.PP 
.SS "\fBSoType\fP SoShaderParameter::getTypeId (void) const\fC [virtual]\fP"

.PP
Returns the type identification of an object derived from a class inheriting \fBSoBase\fP\&. This is used for run-time type checking and 'downward' casting\&. Usage example:
.PP
.PP
.nf
void foo(SoNode * node)
{
  if (node->getTypeId() == SoFile::getClassTypeId()) {
    SoFile * filenode = (SoFile *)node;  // safe downward cast, knows the type
  }
}
.fi
.PP
.PP
For application programmers wanting to extend the library with new nodes, engines, nodekits, draggers or others: this method needs to be overridden in \fIall\fP subclasses\&. This is typically done as part of setting up the full type system for extension classes, which is usually accomplished by using the pre-defined macros available through for instance \fBInventor/nodes/SoSubNode\&.h\fP (SO_NODE_INIT_CLASS and SO_NODE_CONSTRUCTOR for node classes), \fBInventor/engines/SoSubEngine\&.h\fP (for engine classes) and so on\&.
.PP
For more information on writing Coin extensions, see the class documentation of the toplevel superclasses for the various class groups\&. 
.PP
Implements \fBSoBase\fP\&.
.PP
Reimplemented in \fBSoShaderStateMatrixParameter\fP, \fBSoShaderParameterMatrixArray\fP, \fBSoShaderParameterMatrix\fP, \fBSoShaderParameterArray4i\fP, \fBSoShaderParameterArray4f\fP, \fBSoShaderParameterArray3i\fP, \fBSoShaderParameterArray3f\fP, \fBSoShaderParameterArray2i\fP, \fBSoShaderParameterArray2f\fP, \fBSoShaderParameterArray1i\fP, \fBSoShaderParameterArray1f\fP, \fBSoShaderParameter4i\fP, \fBSoShaderParameter4f\fP, \fBSoShaderParameter3i\fP, \fBSoShaderParameter3f\fP, \fBSoShaderParameter2i\fP, \fBSoShaderParameter2f\fP, \fBSoShaderParameter1i\fP, \fBSoShaderParameter1f\fP, and \fBSoUniformShaderParameter\fP\&.
.SS "const \fBSoFieldData\fP * SoShaderParameter::getFieldData (void) const\fC [protected]\fP, \fC [virtual]\fP"
Returns a pointer to the class-wide field data storage object for this instance\&. If no fields are present, returns \fCNULL\fP\&. 
.PP
Reimplemented from \fBSoFieldContainer\fP\&.
.PP
Reimplemented in \fBSoShaderStateMatrixParameter\fP, \fBSoShaderParameterMatrixArray\fP, \fBSoShaderParameterMatrix\fP, \fBSoShaderParameterArray4i\fP, \fBSoShaderParameterArray4f\fP, \fBSoShaderParameterArray3i\fP, \fBSoShaderParameterArray3f\fP, \fBSoShaderParameterArray2i\fP, \fBSoShaderParameterArray2f\fP, \fBSoShaderParameterArray1i\fP, \fBSoShaderParameterArray1f\fP, \fBSoShaderParameter4i\fP, \fBSoShaderParameter4f\fP, \fBSoShaderParameter3i\fP, \fBSoShaderParameter3f\fP, \fBSoShaderParameter2i\fP, \fBSoShaderParameter2f\fP, \fBSoShaderParameter1i\fP, \fBSoShaderParameter1f\fP, and \fBSoUniformShaderParameter\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBSoSFString\fP SoShaderParameter::name"
The shader parameter name\&. Used for Cg and GLSL programs\&. 
.SS "\fBSoSFInt32\fP SoShaderParameter::identifier"
The shader parameter identifier\&. Used for ARB shader programs\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Coin from the source code\&.
