.TH "SoDebug" 3 "Sun May 28 2017" "Version 4.0.0a" "Coin" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SoDebug
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <SoDebug\&.h>\fP
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static const char * \fBGetEnv\fP (const char *var)"
.br
.ti -1c
.RI "static void \fBRTPrintf\fP (const char *formatstr,\&.\&.\&.)"
.br
.ti -1c
.RI "static void \fBNamePtr\fP (const char *name, void *ptr)"
.br
.ti -1c
.RI "static const char * \fBPtrName\fP (void *ptr)"
.br
.ti -1c
.RI "static void \fBwrite\fP (\fBSoNode\fP *node)"
.br
.ti -1c
.RI "static void \fBwriteToFile\fP (\fBSoNode\fP *node, const char *filename)"
.br
.ti -1c
.RI "static void \fBwriteField\fP (\fBSoField\fP *field)"
.br
.ti -1c
.RI "static void \fBprintName\fP (\fBSoBase\fP *base)"
.br
.in -1c
.SH "Detailed Description"
.PP 
The \fBSoDebug\fP class is a small collection of debugging-related functions\&. 
.SH "Member Function Documentation"
.PP 
.SS "const char * SoDebug::GetEnv (const char * var)\fC [static]\fP"
This is a portable getenv-wrapper\&.
.PP
\fBSee also:\fP
.RS 4
coin_getenv() 
.RE
.PP

.SS "void SoDebug::RTPrintf (const char * formatstr,  \&.\&.\&.)\fC [static]\fP"
Real-time printf designed for use when use of standard printf() would cause timing problems\&.
.PP
NOT IMPLEMENTED\&. Currently it just forwards to printf()\&. 
.SS "void SoDebug::NamePtr (const char * name, void * ptr)\fC [static]\fP"
Associate a name with an arbitrary pointer\&. You can fetch the name of the pointer later with \fBPtrName()\fP\&.
.PP
\fBSee also:\fP
.RS 4
\fBPtrName()\fP 
.RE
.PP

.SS "const char * SoDebug::PtrName (void * ptr)\fC [static]\fP"
Returns the name set on a pointer with \fBNamePtr()\fP\&. If no name has been set, '<unnamed>' is returned\&.
.PP
\fBSee also:\fP
.RS 4
\fBNamePtr()\fP 
.RE
.PP

.SS "void SoDebug::write (\fBSoNode\fP * node)\fC [static]\fP"
Writes the node to stdout\&. 
.SS "void SoDebug::writeToFile (\fBSoNode\fP * node, const char * filename)\fC [static]\fP"
Writes the node to the given filename, or /tmp/debug\&.iv if filename is NULL\&. 
.SS "void SoDebug::writeField (\fBSoField\fP * field)\fC [static]\fP"
Not implemented\&. 
.SS "void SoDebug::printName (\fBSoBase\fP * base)\fC [static]\fP"
Not implemented\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Coin from the source code\&.
