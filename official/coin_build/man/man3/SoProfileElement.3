.TH "SoProfileElement" 3 "Sun May 28 2017" "Version 4.0.0a" "Coin" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SoProfileElement \- The \fBSoProfileElement\fP class is yet to be documented\&.
.PP
FIXME: write doc\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Inventor/elements/SoProfileElement\&.h>\fP
.PP
Inherits \fBSoAccumulatedElement\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBProfile\fP { \fBSTART_FIRST\fP, \fBSTART_NEW\fP, \fBADD_TO_CURRENT\fP }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual void \fBinit\fP (\fBSoState\fP *state)"
.br
.ti -1c
.RI "virtual void \fBpush\fP (\fBSoState\fP *state)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBSoType\fP \fBgetClassTypeId\fP (void)"
.br
.ti -1c
.RI "static \fBint\fP \fBgetClassStackIndex\fP (void)"
.br
.ti -1c
.RI "static void * \fBcreateInstance\fP (void)"
.br
.ti -1c
.RI "static void \fBinitClass\fP (void)"
.br
.ti -1c
.RI "static void \fBadd\fP (\fBSoState\fP *const state, \fBSoProfile\fP *const profile)"
.br
.ti -1c
.RI "static const \fBSoNodeList\fP & \fBget\fP (\fBSoState\fP *const state)"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual \fB~SoProfileElement\fP ()"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBSoNodeList\fP \fBprofiles\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
The \fBSoProfileElement\fP class is yet to be documented\&.
.PP
FIXME: write doc\&. 
.SH "Member Enumeration Documentation"
.PP 
.SS "enum \fBSoProfileElement::Profile\fP"
FIXME: write doc\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "SoProfileElement::~SoProfileElement (void)\fC [protected]\fP, \fC [virtual]\fP"
The destructor\&. 
.SH "Member Function Documentation"
.PP 
.SS "void * SoProfileElement::createInstance (void)\fC [static]\fP"
\fIThis API member is considered internal to the library, as it is not likely to be of interest to the application programmer\&.\fP 
.SS "void SoProfileElement::init (\fBSoState\fP * state)\fC [virtual]\fP"
This function initializes the element type in the given \fBSoState\fP\&. It is called for the first element of each enabled element type in \fBSoState\fP objects\&. 
.PP
Reimplemented from \fBSoAccumulatedElement\fP\&.
.SS "void SoProfileElement::push (\fBSoState\fP * state)\fC [virtual]\fP"
This method is called every time a new element is required in one of the stacks\&. This happens when a writable element is requested, using \fBSoState::getElement()\fP or indirectly \fBSoElement::getElement()\fP, and the depth of the current element is less than the state depth\&.
.PP
Override this method if your element needs to copy data from the previous top of stack\&. The \fBpush()\fP method is called on the new element, and the previous element can be found using \fBSoElement::getNextInStack()\fP\&. 
.PP
Reimplemented from \fBSoAccumulatedElement\fP\&.
.SS "void SoProfileElement::add (\fBSoState\fP *const state, \fBSoProfile\fP *const profile)\fC [static]\fP"
Adds \fIprofile\fP to the list of profiles\&. 
.SS "const \fBSoNodeList\fP & SoProfileElement::get (\fBSoState\fP *const state)\fC [static]\fP"
Returns current list of profiles\&. 
.SH "Member Data Documentation"
.PP 
.SS "SoProfileElement::profiles\fC [protected]\fP"
FIXME: write doc\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Coin from the source code\&.
