.TH "SoTextureCoordinateObject" 3 "Sun May 28 2017" "Version 4.0.0a" "Coin" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SoTextureCoordinateObject \- The \fBSoTextureCoordinateObject\fP class generates texture coordinates by\&.\&.\&.
.PP
FIXME: not implemented yet\&. pederb, 2005-04-20\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Inventor/nodes/SoTextureCoordinateObject\&.h>\fP
.PP
Inherits \fBSoTextureCoordinateFunction\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual \fBSoType\fP \fBgetTypeId\fP (void) const"
.br
.RI "Returns the type identification of an object derived from a class inheriting \fBSoBase\fP\&. This is used for run-time type checking and 'downward' casting\&. "
.ti -1c
.RI "\fBSoTextureCoordinateObject\fP (void)"
.br
.ti -1c
.RI "virtual void \fBdoAction\fP (\fBSoAction\fP *action)"
.br
.ti -1c
.RI "virtual void \fBGLRender\fP (\fBSoGLRenderAction\fP *action)"
.br
.ti -1c
.RI "virtual void \fBpick\fP (\fBSoPickAction\fP *action)"
.br
.ti -1c
.RI "virtual void \fBcallback\fP (\fBSoCallbackAction\fP *action)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBSoType\fP \fBgetClassTypeId\fP (void)"
.br
.ti -1c
.RI "static void \fBinitClass\fP (void)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBSoSFVec4f\fP \fBfactorS\fP"
.br
.ti -1c
.RI "\fBSoSFVec4f\fP \fBfactorT\fP"
.br
.ti -1c
.RI "\fBSoSFVec4f\fP \fBfactorR\fP"
.br
.ti -1c
.RI "\fBSoSFVec4f\fP \fBfactorQ\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual const \fBSoFieldData\fP * \fBgetFieldData\fP (void) const"
.br
.ti -1c
.RI "virtual \fB~SoTextureCoordinateObject\fP ()"
.br
.in -1c
.SS "Static Protected Member Functions"

.in +1c
.ti -1c
.RI "static const \fBSoFieldData\fP ** \fBgetFieldDataPtr\fP (void)"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
The \fBSoTextureCoordinateObject\fP class generates texture coordinates by\&.\&.\&.
.PP
FIXME: not implemented yet\&. pederb, 2005-04-20\&. 

\fBFILE FORMAT/DEFAULTS:\fP 
.PP
.nf
TextureCoordinateObject {
    factorS 1 0 0 0
    factorT 0 1 0 0
    factorR 0 0 1 0
    factorQ 0 0 0 1
}

.fi
.PP
 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "SoTextureCoordinateObject::SoTextureCoordinateObject (void)"
Constructor\&. 
.SS "SoTextureCoordinateObject::~SoTextureCoordinateObject ()\fC [protected]\fP, \fC [virtual]\fP"
Destructor\&. 
.SH "Member Function Documentation"
.PP 
.SS "\fBSoType\fP SoTextureCoordinateObject::getTypeId (void) const\fC [virtual]\fP"

.PP
Returns the type identification of an object derived from a class inheriting \fBSoBase\fP\&. This is used for run-time type checking and 'downward' casting\&. Usage example:
.PP
.PP
.nf
void foo(SoNode * node)
{
  if (node->getTypeId() == SoFile::getClassTypeId()) {
    SoFile * filenode = (SoFile *)node;  // safe downward cast, knows the type
  }
}
.fi
.PP
.PP
For application programmers wanting to extend the library with new nodes, engines, nodekits, draggers or others: this method needs to be overridden in \fIall\fP subclasses\&. This is typically done as part of setting up the full type system for extension classes, which is usually accomplished by using the pre-defined macros available through for instance \fBInventor/nodes/SoSubNode\&.h\fP (SO_NODE_INIT_CLASS and SO_NODE_CONSTRUCTOR for node classes), \fBInventor/engines/SoSubEngine\&.h\fP (for engine classes) and so on\&.
.PP
For more information on writing Coin extensions, see the class documentation of the toplevel superclasses for the various class groups\&. 
.PP
Reimplemented from \fBSoTextureCoordinateFunction\fP\&.
.SS "const \fBSoFieldData\fP * SoTextureCoordinateObject::getFieldData (void) const\fC [protected]\fP, \fC [virtual]\fP"
Returns a pointer to the class-wide field data storage object for this instance\&. If no fields are present, returns \fCNULL\fP\&. 
.PP
Reimplemented from \fBSoTextureCoordinateFunction\fP\&.
.SS "void SoTextureCoordinateObject::doAction (\fBSoAction\fP * action)\fC [virtual]\fP"
This function performs the typical operation of a node for any action\&. 
.PP
Reimplemented from \fBSoNode\fP\&.
.SS "void SoTextureCoordinateObject::GLRender (\fBSoGLRenderAction\fP * action)\fC [virtual]\fP"
Action method for the \fBSoGLRenderAction\fP\&.
.PP
This is called during rendering traversals\&. Nodes influencing the rendering state in any way or who wants to throw geometry primitives at OpenGL overrides this method\&. 
.PP
Reimplemented from \fBSoNode\fP\&.
.SS "void SoTextureCoordinateObject::pick (\fBSoPickAction\fP * action)\fC [virtual]\fP"
Action method for \fBSoPickAction\fP\&.
.PP
Does common processing for \fBSoPickAction\fP \fIaction\fP instances\&. 
.PP
Reimplemented from \fBSoNode\fP\&.
.SS "void SoTextureCoordinateObject::callback (\fBSoCallbackAction\fP * action)\fC [virtual]\fP"
Action method for \fBSoCallbackAction\fP\&.
.PP
Simply updates the state according to how the node behaves for the render action, so the application programmer can use the \fBSoCallbackAction\fP for extracting information about the scene graph\&. 
.PP
Reimplemented from \fBSoNode\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBSoSFVec3f\fP SoTextureCoordinateObject::factorS"
FIXME doc\&. 
.SS "\fBSoSFVec3f\fP SoTextureCoordinateObject::factorT"
FIXME doc\&. 
.SS "\fBSoSFVec3f\fP SoTextureCoordinateObject::factorR"
FIXME doc\&. 
.SS "\fBSoSFVec3f\fP SoTextureCoordinateObject::factorQ"
FIXME doc\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Coin from the source code\&.
