.TH "SoNodeKitPath" 3 "Sun May 28 2017" "Version 4.0.0a" "Coin" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SoNodeKitPath \- The \fBSoNodeKitPath\fP class is a path that contains only nodekit nodes\&.
.PP
All other nodes are hidden from the user\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Inventor/SoNodeKitPath\&.h>\fP
.PP
Inherits \fBSoPath\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBint\fP \fBgetLength\fP (void) const"
.br
.ti -1c
.RI "\fBSoNode\fP * \fBgetTail\fP (void) const"
.br
.ti -1c
.RI "\fBSoNode\fP * \fBgetNode\fP (const \fBint\fP idx) const"
.br
.ti -1c
.RI "\fBSoNode\fP * \fBgetNodeFromTail\fP (const \fBint\fP idx) const"
.br
.ti -1c
.RI "void \fBtruncate\fP (const \fBint\fP length)"
.br
.ti -1c
.RI "void \fBpop\fP (void)"
.br
.ti -1c
.RI "void \fBappend\fP (\fBSoBaseKit\fP *childKit)"
.br
.ti -1c
.RI "void \fBappend\fP (const \fBSoNodeKitPath\fP *fromPath)"
.br
.ti -1c
.RI "SbBool \fBcontainsNode\fP (\fBSoBaseKit\fP *node) const"
.br
.ti -1c
.RI "\fBint\fP \fBfindFork\fP (const \fBSoNodeKitPath\fP *path) const"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBSoNodeKitPath\fP (const \fBint\fP approxLength)"
.br
.ti -1c
.RI "virtual \fB~SoNodeKitPath\fP ()"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "\fBint\fP \fBoperator==\fP (const \fBSoNodeKitPath\fP &p1, const \fBSoNodeKitPath\fP &p2)"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
The \fBSoNodeKitPath\fP class is a path that contains only nodekit nodes\&.
.PP
All other nodes are hidden from the user\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "SoNodeKitPath::SoNodeKitPath (const \fBint\fP approxLength)\fC [protected]\fP"
A constructor\&. 
.SS "SoNodeKitPath::~SoNodeKitPath ()\fC [protected]\fP, \fC [virtual]\fP"
The destructor\&. 
.SH "Member Function Documentation"
.PP 
.SS "\fBint\fP SoNodeKitPath::getLength (void) const"
Returns the length of the path (the number of nodekit nodes)\&. 
.SS "\fBSoNode\fP * SoNodeKitPath::getTail (void) const"
Returns the tail of the path (the last nodekit in the path)\&. 
.SS "\fBSoNode\fP * SoNodeKitPath::getNode (const \fBint\fP idx) const"
Returns nodekit number \fIidx\fP in path\&. 
.SS "\fBSoNode\fP * SoNodeKitPath::getNodeFromTail (const \fBint\fP idx) const"
Returns nodekit number \fIidx\fP in the path, from the tail\&. 
.SS "void SoNodeKitPath::truncate (const \fBint\fP length)"
Truncates the path at nodekit number \fIlength\fP\&. 
.SS "void SoNodeKitPath::pop (void)"
Pops off the last nodekit (truncates at last tail)\&. 
.SS "void SoNodeKitPath::append (\fBSoBaseKit\fP * childKit)"
Appends \fIchildKit\fP to the path\&. childKit should be a part in the tail nodekit of this path\&. In effect, the path from the tail to first occurrance of \fIchildKit\fP will be appended to the path\&. 
.SS "void SoNodeKitPath::append (const \fBSoNodeKitPath\fP * fromPath)"
Appends the nodekit path to this path\&. Head of \fIfromPath\fP must be a part in the current tail\&. 
.SS "SbBool SoNodeKitPath::containsNode (\fBSoBaseKit\fP * node) const"
Returns \fCTRUE\fP if \fInode\fP is in this path\&. 
.SS "\fBint\fP SoNodeKitPath::findFork (const \fBSoNodeKitPath\fP * path) const"
Returns the index of last common nodekit, or -1 if head node differs\&. 
.SH "Friends And Related Function Documentation"
.PP 
.SS "\fBint\fP operator== (const \fBSoNodeKitPath\fP & p1, const \fBSoNodeKitPath\fP & p2)\fC [friend]\fP"
Returns \fCTRUE\fP if paths are equal, \fCFALSE\fP otherwise\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Coin from the source code\&.
