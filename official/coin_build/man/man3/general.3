.TH "general" 3 "Sun May 28 2017" "Version 4.0.0a" "Coin" \" -*- nroff -*-
.ad l
.nh
.SH NAME
general
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBSoFieldContainer\fP"
.br
.RI "The \fBSoFieldContainer\fP class is a base class for all classes that contain fields\&.
.PP
The classes containing fields in Coin are the node and engine classes, so they are all subclasses of \fBSoFieldContainer\fP\&. "
.ti -1c
.RI "class \fBSoInput\fP"
.br
.RI "The \fBSoInput\fP class is an abstraction of file import functionality\&.
.PP
This class takes care of most of the chores of doing data import in Coin\&. It puts a layer of abstraction over the read operations to make it transparent for the rest of the Coin code whether or not we're reading from a file, from a memory buffer or from stdin\&. "
.ti -1c
.RI "class \fBSoOutput\fP"
.br
.RI "The \fBSoOutput\fP class is an abstraction of an output stream\&.
.PP
\fBSoOutput\fP offers the ability to write basic types to a file or a memory buffer in either ASCII or binary format\&. "
.ti -1c
.RI "class \fBSoAudioDevice\fP"
.br
.RI "The \fBSoAudioDevice\fP class is used to control an audio device\&.
.PP
The \fBSoAudioDevice\fP class is responsible for initialization of an audio device, as well as enabling and disabling sound\&. It is a singleton class\&. "
.ti -1c
.RI "class \fBSoBase\fP"
.br
.RI "The \fBSoBase\fP class is the top-level superclass for a number of class-hierarchies\&.
.PP
\fBSoBase\fP provides the basic interfaces and methods for doing reference counting, type identification and import/export\&. All classes in Coin which uses these mechanisms are descendent from this class\&. "
.ti -1c
.RI "class \fBSoChildList\fP"
.br
.RI "The \fBSoChildList\fP class is a container for node children\&.
.PP
This class does automatic notification on the parent nodes upon adding or removing children\&. "
.ti -1c
.RI "class \fBSoContextHandler\fP"
.br
.RI "The \fBSoContextHandler\fP class is for now to be treated as an internal class\&. "
.ti -1c
.RI "class \fBSoDB\fP"
.br
.RI "The \fBSoDB\fP class keeps track of internal global data\&.
.PP
This class collects various methods for initializing, setting and accessing common global data from the Coin library\&. "
.ti -1c
.RI "class \fBSoFullPath\fP"
.br
.RI "The \fBSoFullPath\fP class allows examination of hidden children in paths\&.
.PP
\fBSoPath\fP allows only access from the head node to the first node with hidden children, but not any further\&. "
.ti -1c
.RI "class \fBSoInteraction\fP"
.br
.RI "The \fBSoInteraction\fP class takes care of initalizing internal classes\&.
.PP
\fBSoInteraction\fP is present for the sole purpose of providing an interface to the initialization methods of the classes in Coin which are somehow related to user interaction, like the draggers and manipulators\&. "
.ti -1c
.RI "class \fBSoLightPath\fP"
.br
.RI "The \fBSoLightPath\fP class is a light version of \fBSoPath\fP\&.
.PP
\fBSoLightPath\fP can be used if you only need a temporary path, and don't want the overhead that comes with an \fBSoPath\fP (ref, unref, auditing etc)\&. "
.ti -1c
.RI "class \fBSoLockManager\fP"
.br
.RI "The \fBSoLockManager\fP is a defunct software license lock mechanism\&.
.PP
This is just a dummy implementation of the TGS Inventor class used to provide a license locking mechanism\&. Since Coin can be used without any royalty fees or client-site license locks, no such mechanism is needed\&. "
.ti -1c
.RI "class \fBSoNormalGenerator\fP"
.br
.RI "The \fBSoNormalGenerator\fP class is used to generate normals\&.
.PP
FIXME: document properly\&. "
.ti -1c
.RI "class \fBSoNotRec\fP"
.br
.RI "The \fBSoNotRec\fP class specifies records for notification lists\&. "
.ti -1c
.RI "class \fBSoNotList\fP"
.br
.RI "The \fBSoNotList\fP class is a list of \fBSoNotRec\fP notification records\&. "
.ti -1c
.RI "class \fBSoPath\fP"
.br
.RI "The \fBSoPath\fP class is a container class for traversal path descriptions\&.
.PP
\fBSoPath\fP objects contain a list of \fBSoNode\fP pointers and a list of child indices\&. Indices are necessary to disambiguate situations where a node uses the same node as a child multiple times\&. "
.ti -1c
.RI "class \fBSoPickedPoint\fP"
.br
.RI "The \fBSoPickedPoint\fP class is used for specifying picked points\&.
.PP
It holds miscellaneous information about the picked point, such as position, normal, texture coordinate and material index in the current material\&. It might also hold detail information (an \fBSoDetail\fP subclass) for every node in the picked path\&. "
.ti -1c
.RI "class \fBSoPrimitiveVertex\fP"
.br
.RI "The \fBSoPrimitiveVertex\fP class represents a single vertex of a generated primitive\&.
.PP
Instances of \fBSoPrimitiveVertex\fP are constructed when generating primitive data, primarily during an \fBSoCallbackAction\fP traversal\&. Depending on the context the vertex could represent a single 3D point, one of the two vertices in a line or one of the three vertices in a triangle\&. "
.ti -1c
.RI "class \fBSoSceneManager\fP"
.br
.RI "The \fBSoSceneManager\fP class provides the main interface between the scene graph and the GUI toolkit\&.
.PP
The renderarea class from the GUI toolkit you are using uses this class as the interface against the scene graph\&. Event handling and providing 'hooks' to do rendering are the main functions of the class\&. "
.ti -1c
.RI "class \fBSoState\fP"
.br
.RI "The \fBSoState\fP class manages the Coin scenegraph traversal state data\&.
.PP
The \fBSoState\fP class is used by actions derived from the \fBSoAction\fP class\&. It manages the scenegraph state as stacks of elements (ie instances of classes derived from \fBSoElement\fP)\&. "
.ti -1c
.RI "class \fBSoTempPath\fP"
.br
.RI "The \fBSoTempPath\fP class is used to store temporary paths\&.
.PP
The path simply turns off auditing in the constructor, and leaves the user with the responsibility of keeping the path valid\&. "
.ti -1c
.RI "class \fBSoType\fP"
.br
.RI "The \fBSoType\fP class is the basis for the run-time type system in Coin\&.
.PP
Many of the classes in the Coin library must have their type information registered before any instances are created (including, but not limited to: engines, nodes, fields, actions, nodekits and manipulators)\&. The use of \fBSoType\fP to store this information provides lots of various functionality for working with class hierarchies, comparing class types, instantiating objects from classnames, etc etc\&. "
.ti -1c
.RI "class \fBSoOffscreenRenderer\fP"
.br
.RI "The \fBSoOffscreenRenderer\fP class is used for rendering scenes in offscreen buffers\&.
.PP
If you want to render to a memory buffer instead of an on-screen OpenGL context, use this class\&. Rendering to a memory buffer can be used to generate texture maps on-the-fly, or for saving snapshots of the scene to disk files (as pixel bitmaps or as Postscript files for sending to a Postscript-capable printer)\&. "
.ti -1c
.RI "class \fBSoAuditorList\fP"
.br
.RI "The \fBSoAuditorList\fP class is used to keep track of auditors for certain object classes\&.
.PP
This class is mainly for internal use (from \fBSoBase\fP) and it should not be necessary to be familiar with it for 'ordinary' Coin use\&. "
.ti -1c
.RI "class \fBSoBaseList\fP"
.br
.RI "The \fBSoBaseList\fP class is a container for pointers to \fBSoBase\fP derived objects\&.
.PP
The additional capability of the \fBSoBaseList\fP class over its parent class, \fBSbPList\fP, is to automatically handle referencing and dereferencing of items as they are added or removed from the lists\&. "
.ti -1c
.RI "class \fBSoCallbackList\fP"
.br
.RI "The \fBSoCallbackList\fP is a container for callback function pointers\&.
.PP
This list stores callback function pointers (along with user-specified extra data to pass to the callbacks) and provides a method for triggering the callback functions\&. "
.ti -1c
.RI "class \fBSoPathList\fP"
.br
.RI "The \fBSoPathList\fP class is a container for pointers to \fBSoPath\fP objects\&.
.PP
As this class inherits \fBSoBaseList\fP, referencing and dereferencing will default be done on the objects at \fBappend()\fP, \fBremove()\fP, \fBinsert()\fP etc\&. "
.ti -1c
.RI "class \fBSoPickedPointList\fP"
.br
.RI "The \fBSoPickedPointList\fP class is a container for pointers to \fBSoPickedPoint\fP objects\&.
.PP
This list class will delete the picked points when destructed/truncated, or when a picked point in the list is replaced by another picked point The caller is responsible for allocating the picked points passed to the list, but should not deallocate them since this will be handled by the list\&. "
.ti -1c
.RI "class \fBSoTypeList\fP"
.br
.RI "The \fBSoTypeList\fP class is a container class for arrays of \fBSoType\fP objects\&. "
.in -1c
.SH "Detailed Description"
.PP 

.SH "Author"
.PP 
Generated automatically by Doxygen for Coin from the source code\&.
