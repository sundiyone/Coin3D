.TH "SoNodeKitDetail" 3 "Sun May 28 2017" "Version 4.0.0a" "Coin" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SoNodeKitDetail \- The \fBSoNodeKitDetail\fP class is yet to be documented\&.
.PP
When a pick action is executed and geometry within a nodekit is hit, the nodekit generates an \fBSoNodeKitDetail\fP object which contains information about the specific part inside the nodekit hit by the pick ray\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Inventor/details/SoNodeKitDetail\&.h>\fP
.PP
Inherits \fBSoDetail\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual \fBSoType\fP \fBgetTypeId\fP (void) const"
.br
.ti -1c
.RI "\fBSoNodeKitDetail\fP (void)"
.br
.ti -1c
.RI "virtual \fB~SoNodeKitDetail\fP ()"
.br
.ti -1c
.RI "virtual \fBSoDetail\fP * \fBcopy\fP (void) const"
.br
.ti -1c
.RI "void \fBsetNodeKit\fP (\fBSoBaseKit\fP *kit)"
.br
.ti -1c
.RI "\fBSoBaseKit\fP * \fBgetNodeKit\fP (void) const"
.br
.ti -1c
.RI "void \fBsetPart\fP (\fBSoNode\fP *part)"
.br
.ti -1c
.RI "\fBSoNode\fP * \fBgetPart\fP (void) const"
.br
.ti -1c
.RI "void \fBsetPartName\fP (const \fBSbName\fP &name)"
.br
.ti -1c
.RI "const \fBSbName\fP & \fBgetPartName\fP (void) const"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBSoType\fP \fBgetClassTypeId\fP (void)"
.br
.ti -1c
.RI "static void \fBcleanupClass\fP (void)"
.br
.ti -1c
.RI "static void \fBinitClass\fP (void)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBSoBaseKit\fP * \fBmyNodeKit\fP"
.br
.ti -1c
.RI "\fBSoNode\fP * \fBmyPart\fP"
.br
.ti -1c
.RI "\fBSbName\fP \fBmyPartName\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
The \fBSoNodeKitDetail\fP class is yet to be documented\&.
.PP
When a pick action is executed and geometry within a nodekit is hit, the nodekit generates an \fBSoNodeKitDetail\fP object which contains information about the specific part inside the nodekit hit by the pick ray\&. 


.PP
\fBSee also:\fP
.RS 4
\fBSoRayPickAction\fP 
.RE
.PP

.SH "Constructor & Destructor Documentation"
.PP 
.SS "SoNodeKitDetail::SoNodeKitDetail (void)"
Constructor\&. 
.SS "SoNodeKitDetail::~SoNodeKitDetail ()\fC [virtual]\fP"
Destructor\&. 
.SH "Member Function Documentation"
.PP 
.SS "\fBSoType\fP SoNodeKitDetail::getTypeId (void) const\fC [virtual]\fP"
Returns the type identification of a detail derived from a class inheriting \fBSoDetail\fP\&. This is used for run-time type checking and 'downward' casting\&.
.PP
Usage example:
.PP
.PP
.nf
void fuhbear(SoDetail * detail)
{
  if (detail->getTypeId() == SoFaceDetail::getClassTypeId()) {
    // safe downward cast, know the type
    SoFaceDetail * facedetail = (SoFaceDetail *)detail;
  }
  return; // ignore if not a SoFaceDetail
}
.fi
.PP
.PP
For application programmers wanting to extend the library with new detail classes: this method needs to be overridden in \fIall\fP subclasses\&. This is typically done as part of setting up the full type system for extension classes, which is usually accomplished by using the pre-defined macros available through Inventor/nodes/SoSubDetail\&.h: SO_DETAIL_SOURCE and SO_DETAIL_INIT_CLASS\&. 
.PP
Implements \fBSoDetail\fP\&.
.SS "\fBSoDetail\fP * SoNodeKitDetail::copy (void) const\fC [virtual]\fP"
Return a deep copy of ourself\&.
.PP
\fBNote that if the Coin library has been built as a DLL under Microsoft Windows and you use this method from application code, you \fImust\fP make sure that both the Coin DLL and the application executable is using the same instance of a C Run-Time (CRT) library\&. Otherwise, you \fIwill\fP get memory heap corruption upon deallocating the returned instances, eventually leading to mysterious crashes\&.\fP 
.PP
Implements \fBSoDetail\fP\&.
.SS "void SoNodeKitDetail::setNodeKit (\fBSoBaseKit\fP * kit)"
Set the pointer indicating which nodekit generated this detail object\&. 
.SS "\fBSoBaseKit\fP * SoNodeKitDetail::getNodeKit (void) const"
Returns a pointer to the nodekit generating this details object\&. 
.SS "void SoNodeKitDetail::setPart (\fBSoNode\fP * part)"
Set the pointer indicating which node inside the nodekit was hit by a pick\&. 
.SS "\fBSoNode\fP * SoNodeKitDetail::getPart (void) const"
Return node inside nodekit which was hit\&. 
.SS "void SoNodeKitDetail::setPartName (const \fBSbName\fP & name)"
Set catalog name of node part which was hit\&. 
.SS "const \fBSbName\fP & SoNodeKitDetail::getPartName (void) const"
Return catalog name of nodekit part which was hit\&. 
.SH "Member Data Documentation"
.PP 
.SS "\fBSoBaseKit\fP * SoNodeKitDetail::myNodeKit\fC [protected]\fP"
The nodekit generating this details object\&. 
.SS "\fBSoNode\fP * SoNodeKitDetail::myPart\fC [protected]\fP"
Node inside nodekit which was hit\&. 
.SS "\fBSbName\fP SoNodeKitDetail::myPartName\fC [protected]\fP"
Catalog name of nodekit part which was hit\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Coin from the source code\&.
