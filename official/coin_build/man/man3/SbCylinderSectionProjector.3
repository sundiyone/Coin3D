.TH "SbCylinderSectionProjector" 3 "Sun May 28 2017" "Version 4.0.0a" "Coin" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SbCylinderSectionProjector \- The \fBSbCylinderSectionProjector\fP projects 2D points to a sliced cylinder\&.
.PP
The projection cylinder for this class is sliced by a clipping plane parallel to its height axis\&. Projections will be mapped to the remaining cylinder part\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Inventor/projectors/SbCylinderSectionProjector\&.h>\fP
.PP
Inherits \fBSbCylinderProjector\fP\&.
.PP
Inherited by \fBSbCylinderPlaneProjector\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSbCylinderSectionProjector\fP (const float edgetol=0\&.9f, const SbBool orienttoeye=TRUE)"
.br
.ti -1c
.RI "\fBSbCylinderSectionProjector\fP (const \fBSbCylinder\fP &cyl, const float edgetol=0\&.9f, const SbBool orienttoeye=TRUE)"
.br
.ti -1c
.RI "virtual \fBSbProjector\fP * \fBcopy\fP (void) const"
.br
.ti -1c
.RI "virtual \fBSbVec3f\fP \fBproject\fP (const \fBSbVec2f\fP &point)"
.br
.ti -1c
.RI "virtual \fBSbRotation\fP \fBgetRotation\fP (const \fBSbVec3f\fP &point1, const \fBSbVec3f\fP &point2)"
.br
.ti -1c
.RI "void \fBsetTolerance\fP (const float edgetol)"
.br
.ti -1c
.RI "float \fBgetTolerance\fP (void) const"
.br
.ti -1c
.RI "SbBool \fBisWithinTolerance\fP (const \fBSbVec3f\fP &point)"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual void \fBsetupTolerance\fP (void)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "float \fBtolerance\fP"
.br
.ti -1c
.RI "float \fBtolDist\fP"
.br
.ti -1c
.RI "\fBSbVec3f\fP \fBplaneDir\fP"
.br
.ti -1c
.RI "\fBSbLine\fP \fBplaneLine\fP"
.br
.ti -1c
.RI "float \fBplaneDist\fP"
.br
.ti -1c
.RI "\fBSbPlane\fP \fBtolPlane\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
The \fBSbCylinderSectionProjector\fP projects 2D points to a sliced cylinder\&.
.PP
The projection cylinder for this class is sliced by a clipping plane parallel to its height axis\&. Projections will be mapped to the remaining cylinder part\&. 


.PP
\fBSee also:\fP
.RS 4
\fBSbSphereSectionProjector\fP 
.RE
.PP

.SH "Constructor & Destructor Documentation"
.PP 
.SS "SbCylinderSectionProjector::SbCylinderSectionProjector (const float edgetol = \fC0\&.9f\fP, const SbBool orienttoeye = \fCTRUE\fP)"
Default constructor\&. See \fBSbCylinderProjector::SbCylinderProjector()\fP\&.
.PP
The \fIedgetol\fP value should be within <0, 1], and specifies how much of the cylinder is used as a projection surface\&. 1\&.0 means the full front half is used\&. 
.SS "SbCylinderSectionProjector::SbCylinderSectionProjector (const \fBSbCylinder\fP & cyl, const float edgetol = \fC0\&.9f\fP, const SbBool orienttoeye = \fCTRUE\fP)"
Constructor with explicit setting of the projection cylinder\&. 
.SH "Member Function Documentation"
.PP 
.SS "\fBSbProjector\fP * SbCylinderSectionProjector::copy (void) const\fC [virtual]\fP"
Construct and return a copy of this projector\&. The caller is responsible for destructing the new instance\&.
.PP
\fBNote that if the Coin library has been built as a DLL under Microsoft Windows and you use this method from application code, you \fImust\fP make sure that both the Coin DLL and the application executable is using the same instance of a C Run-Time (CRT) library\&. Otherwise, you \fIwill\fP get memory heap corruption upon deallocating the returned instances, eventually leading to mysterious crashes\&.\fP 
.PP
Implements \fBSbProjector\fP\&.
.PP
Reimplemented in \fBSbCylinderPlaneProjector\fP\&.
.SS "\fBSbVec3f\fP SbCylinderSectionProjector::project (const \fBSbVec2f\fP & point)\fC [virtual]\fP"
Project the 2D \fIpoint\fP from normalized viewport coordinates to a 3D point\&. The mapping will be done in accordance with the type of the projector\&. 
.PP
Implements \fBSbCylinderProjector\fP\&.
.PP
Reimplemented in \fBSbCylinderPlaneProjector\fP\&.
.SS "\fBSbRotation\fP SbCylinderSectionProjector::getRotation (const \fBSbVec3f\fP & point1, const \fBSbVec3f\fP & point2)\fC [virtual]\fP"
Returns rotation on the projection surface which re-orients \fIpoint1\fP to \fIpoint2\fP\&. 
.PP
Implements \fBSbCylinderProjector\fP\&.
.PP
Reimplemented in \fBSbCylinderPlaneProjector\fP\&.
.SS "void SbCylinderSectionProjector::setTolerance (const float edgetol)"
The \fIedgetol\fP value decides how much of the surface of the cylinder is used for projection\&. 1\&.0 means the full cylinder half is used\&. 
.SS "float SbCylinderSectionProjector::getTolerance (void) const"
Returns edge tolerance for the cylinder half\&. 
.SS "SbBool SbCylinderSectionProjector::isWithinTolerance (const \fBSbVec3f\fP & point)"
Check if \fIpoint\fP is within the part of the cylinder used for projections\&. 
.SS "void SbCylinderSectionProjector::setupTolerance (void)\fC [protected]\fP, \fC [virtual]\fP"
Recalculate the internal projection surface settings\&. Needs to be done if any of the parameters influencing the projection surface have been changed from subclasses without using the access methods\&. 
.SH "Member Data Documentation"
.PP 
.SS "SbCylinderSectionProjector::tolerance\fC [protected]\fP"
Tolerance value, deciding how much of the half-cylinder to do projections against\&. 
.SS "SbCylinderSectionProjector::tolDist\fC [protected]\fP"
Tolerance value multiplied with the cylinder radius\&. 
.SS "SbCylinderSectionProjector::planeDir\fC [protected]\fP"
Direction of cutting plane\&. 
.SS "SbCylinderSectionProjector::planeLine\fC [protected]\fP"
A line within the plane which is parallel to the cylinder axis\&. 
.SS "SbCylinderSectionProjector::planeDist\fC [protected]\fP"
Distance from plane to cylinder axis\&. 
.SS "SbCylinderSectionProjector::tolPlane\fC [protected]\fP"
Defines the plane cutting the cylinder into a projection part\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Coin from the source code\&.
