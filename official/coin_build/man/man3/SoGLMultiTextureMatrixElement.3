.TH "SoGLMultiTextureMatrixElement" 3 "Sun May 28 2017" "Version 4.0.0a" "Coin" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SoGLMultiTextureMatrixElement \- The \fBSoGLMultiTextureMatrixElement\fP class is used to update the OpenGL texture matrix\&.
.PP
Since (for some weird reason) most OpenGL implementations have a very small texture matrix stack, and since the matrix stack also is broken on many OpenGL implementations, the texture matrix is always loaded into OpenGL\&. We do not \fBpush()\fP and \fBpop()\fP matrices\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Inventor/elements/SoGLMultiTextureMatrixElement\&.h>\fP
.PP
Inherits \fBSoMultiTextureMatrixElement\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual void \fBinit\fP (\fBSoState\fP *state)"
.br
.ti -1c
.RI "virtual void \fBpush\fP (\fBSoState\fP *state)"
.br
.ti -1c
.RI "virtual void \fBpop\fP (\fBSoState\fP *state, const \fBSoElement\fP *prevTopElement)"
.br
.ti -1c
.RI "virtual void \fBmultElt\fP (const \fBint\fP unit, const \fBSbMatrix\fP &matrix)"
.br
.ti -1c
.RI "virtual void \fBsetElt\fP (const \fBint\fP unit, const \fBSbMatrix\fP &matrix)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBSoType\fP \fBgetClassTypeId\fP (void)"
.br
.ti -1c
.RI "static \fBint\fP \fBgetClassStackIndex\fP (void)"
.br
.ti -1c
.RI "static void * \fBcreateInstance\fP (void)"
.br
.ti -1c
.RI "static void \fBinitClass\fP (void)"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual \fB~SoGLMultiTextureMatrixElement\fP ()"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
The \fBSoGLMultiTextureMatrixElement\fP class is used to update the OpenGL texture matrix\&.
.PP
Since (for some weird reason) most OpenGL implementations have a very small texture matrix stack, and since the matrix stack also is broken on many OpenGL implementations, the texture matrix is always loaded into OpenGL\&. We do not \fBpush()\fP and \fBpop()\fP matrices\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "SoGLMultiTextureMatrixElement::~SoGLMultiTextureMatrixElement (void)\fC [protected]\fP, \fC [virtual]\fP"
The destructor\&. 
.SH "Member Function Documentation"
.PP 
.SS "void * SoGLMultiTextureMatrixElement::createInstance (void)\fC [static]\fP"
\fIThis API member is considered internal to the library, as it is not likely to be of interest to the application programmer\&.\fP 
.SS "void SoGLMultiTextureMatrixElement::init (\fBSoState\fP * state)\fC [virtual]\fP"
This function initializes the element type in the given \fBSoState\fP\&. It is called for the first element of each enabled element type in \fBSoState\fP objects\&. 
.PP
Reimplemented from \fBSoMultiTextureMatrixElement\fP\&.
.SS "void SoGLMultiTextureMatrixElement::push (\fBSoState\fP * state)\fC [virtual]\fP"
This method is called every time a new element is required in one of the stacks\&. This happens when a writable element is requested, using \fBSoState::getElement()\fP or indirectly \fBSoElement::getElement()\fP, and the depth of the current element is less than the state depth\&.
.PP
Override this method if your element needs to copy data from the previous top of stack\&. The \fBpush()\fP method is called on the new element, and the previous element can be found using \fBSoElement::getNextInStack()\fP\&. 
.PP
Reimplemented from \fBSoMultiTextureMatrixElement\fP\&.
.SS "void SoGLMultiTextureMatrixElement::pop (\fBSoState\fP * state, const \fBSoElement\fP * prevTopElement)\fC [virtual]\fP"
This method is callled when the state is popped, and the depth of the element is bigger than the current state depth\&. \fBpop()\fP is called on the new top of stack, and a pointer to the previous top of stack is passed in \fIprevTopElement\fP\&.
.PP
Override this method if you need to copy some state information from the previous top of stack\&. 
.PP
Reimplemented from \fBSoElement\fP\&.
.SS "void SoGLMultiTextureMatrixElement::multElt (const \fBint\fP unit, const \fBSbMatrix\fP & matrix)\fC [virtual]\fP"
virtual method which is called from \fBmult()\fP\&. Multiplies \fImatrix\fP into element matrix\&. 
.PP
Reimplemented from \fBSoMultiTextureMatrixElement\fP\&.
.SS "void SoGLMultiTextureMatrixElement::setElt (const \fBint\fP unit, const \fBSbMatrix\fP & matrix)\fC [virtual]\fP"
virtual method which is called from set()\&. Sets \fImatrix\fP intp element matrix\&. 
.PP
Reimplemented from \fBSoMultiTextureMatrixElement\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Coin from the source code\&.
