.TH "mutex.h" 3 "Sun May 28 2017" "Version 4.0.0a" "Coin" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mutex.h
.SH SYNOPSIS
.br
.PP
\fC#include <Inventor/C/basic\&.h>\fP
.br
\fC#include <Inventor/C/threads/common\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "\fBcc_mutex\fP * \fBcc_mutex_construct\fP (void)"
.br
.ti -1c
.RI "void \fBcc_mutex_destruct\fP (\fBcc_mutex\fP *mutex)"
.br
.ti -1c
.RI "void \fBcc_mutex_lock\fP (\fBcc_mutex\fP *mutex)"
.br
.ti -1c
.RI "\fBint\fP \fBcc_mutex_try_lock\fP (\fBcc_mutex\fP *mutex)"
.br
.ti -1c
.RI "void \fBcc_mutex_unlock\fP (\fBcc_mutex\fP *mutex)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "\fBcc_mutex\fP* cc_mutex_construct (void)"
Constructs a mutex\&. 
.SS "void cc_mutex_destruct (\fBcc_mutex\fP * mutex)"
Destroys the \fImutex\fP specified\&. 
.SS "void cc_mutex_lock (\fBcc_mutex\fP * mutex)"
Locks the the \fImutex\fP specified\&. 
.SS "\fBint\fP cc_mutex_try_lock (\fBcc_mutex\fP * mutex)"
Tests the specified \fImutex\fP to see it is already locked\&. 
.SS "void cc_mutex_unlock (\fBcc_mutex\fP * mutex)"
Unlocks the specified \fImutex\fP\&. 
.SH "Author"
.PP 
Generated automatically by Doxygen for Coin from the source code\&.
