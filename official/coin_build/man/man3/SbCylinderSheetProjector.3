.TH "SbCylinderSheetProjector" 3 "Sun May 28 2017" "Version 4.0.0a" "Coin" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SbCylinderSheetProjector \- The \fBSbCylinderSheetProjector\fP class projects 2D points to 3D points on a sheet covering a cylindrical shape\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Inventor/projectors/SbCylinderSheetProjector\&.h>\fP
.PP
Inherits \fBSbCylinderProjector\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSbCylinderSheetProjector\fP (const SbBool orienttoeye=TRUE)"
.br
.ti -1c
.RI "\fBSbCylinderSheetProjector\fP (const \fBSbCylinder\fP &cyl, const SbBool orienttoeye=TRUE)"
.br
.ti -1c
.RI "virtual \fBSbProjector\fP * \fBcopy\fP (void) const"
.br
.ti -1c
.RI "virtual \fBSbVec3f\fP \fBproject\fP (const \fBSbVec2f\fP &point)"
.br
.ti -1c
.RI "virtual \fBSbRotation\fP \fBgetRotation\fP (const \fBSbVec3f\fP &point1, const \fBSbVec3f\fP &point2)"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual void \fBsetupPlane\fP (void)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBSbVec3f\fP \fBworkingProjPoint\fP"
.br
.ti -1c
.RI "\fBSbVec3f\fP \fBplaneDir\fP"
.br
.ti -1c
.RI "\fBSbPlane\fP \fBtolPlane\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
The \fBSbCylinderSheetProjector\fP class projects 2D points to 3D points on a sheet covering a cylindrical shape\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "SbCylinderSheetProjector::SbCylinderSheetProjector (const SbBool orienttoeye = \fCTRUE\fP)"
Constructor\&. Uses default cylinder defintion, see \fBSbCylinderProjector::SbCylinderProjector()\fP\&.
.PP
\fIorienttoeye\fP decides whether or not the cylinder and sheet should always be oriented towards the viewer\&. 
.SS "SbCylinderSheetProjector::SbCylinderSheetProjector (const \fBSbCylinder\fP & cyl, const SbBool orienttoeye = \fCTRUE\fP)"
Constructor with explicit definition of projection cylinder\&. 
.SH "Member Function Documentation"
.PP 
.SS "\fBSbProjector\fP * SbCylinderSheetProjector::copy (void) const\fC [virtual]\fP"
Construct and return a copy of this projector\&. The caller is responsible for destructing the new instance\&.
.PP
\fBNote that if the Coin library has been built as a DLL under Microsoft Windows and you use this method from application code, you \fImust\fP make sure that both the Coin DLL and the application executable is using the same instance of a C Run-Time (CRT) library\&. Otherwise, you \fIwill\fP get memory heap corruption upon deallocating the returned instances, eventually leading to mysterious crashes\&.\fP 
.PP
Implements \fBSbProjector\fP\&.
.SS "\fBSbVec3f\fP SbCylinderSheetProjector::project (const \fBSbVec2f\fP & point)\fC [virtual]\fP"
Project the 2D \fIpoint\fP from normalized viewport coordinates to a 3D point\&. The mapping will be done in accordance with the type of the projector\&. 
.PP
Implements \fBSbCylinderProjector\fP\&.
.SS "\fBSbRotation\fP SbCylinderSheetProjector::getRotation (const \fBSbVec3f\fP & point1, const \fBSbVec3f\fP & point2)\fC [virtual]\fP"
Returns rotation on the projection surface which re-orients \fIpoint1\fP to \fIpoint2\fP\&. 
.PP
Implements \fBSbCylinderProjector\fP\&.
.SS "void SbCylinderSheetProjector::setupPlane (void)\fC [protected]\fP, \fC [virtual]\fP"
Recalculates projection surface settings after changes to the parameters\&. 
.SH "Member Data Documentation"
.PP 
.SS "SbCylinderSheetProjector::workingProjPoint\fC [protected]\fP"
Last projected point, in the working space coordinate system\&. 
.SS "SbCylinderSheetProjector::planeDir\fC [protected]\fP"
Normal vector of the plane defining the orientation of the sheet\&. 
.SS "SbCylinderSheetProjector::tolPlane\fC [protected]\fP"
The tolerance value specifying how much of the cylinder is 'above' the sheet\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Coin from the source code\&.
