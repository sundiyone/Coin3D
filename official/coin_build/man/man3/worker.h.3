.TH "worker.h" 3 "Sun May 28 2017" "Version 4.0.0a" "Coin" \" -*- nroff -*-
.ad l
.nh
.SH NAME
worker.h
.SH SYNOPSIS
.br
.PP
\fC#include <Inventor/C/basic\&.h>\fP
.br
\fC#include <Inventor/C/threads/common\&.h>\fP
.br

.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef void \fBcc_worker_f\fP(void *)"
.br
.ti -1c
.RI "typedef void \fBcc_worker_idle_f\fP(\fBcc_worker\fP *, void *)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBcc_worker\fP * \fBcc_worker_construct\fP (void)"
.br
.ti -1c
.RI "void \fBcc_worker_destruct\fP (\fBcc_worker\fP *worker)"
.br
.ti -1c
.RI "SbBool \fBcc_worker_start\fP (\fBcc_worker\fP *worker, cc_worker_f *workfunc, void *closure)"
.br
.ti -1c
.RI "SbBool \fBcc_worker_is_busy\fP (\fBcc_worker\fP *worker)"
.br
.ti -1c
.RI "void \fBcc_worker_wait\fP (\fBcc_worker\fP *worker)"
.br
.ti -1c
.RI "void \fBcc_worker_set_idle_callback\fP (\fBcc_worker\fP *worker, cc_worker_idle_f *idlefunc, void *closure)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "void cc_worker_destruct (\fBcc_worker\fP * worker)"
Will wait for the current task to be finished before destructing the worker\&. 
.SS "SbBool cc_worker_start (\fBcc_worker\fP * worker, cc_worker_f * workfunc, void * closure)"
Start the worker by either waking is from a condvar_wait() or creating a new thread if the thread is not running\&. 
.SH "Author"
.PP 
Generated automatically by Doxygen for Coin from the source code\&.
