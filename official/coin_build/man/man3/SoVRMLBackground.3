.TH "SoVRMLBackground" 3 "Sun May 28 2017" "Version 4.0.0a" "Coin" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SoVRMLBackground \- The \fBSoVRMLBackground\fP class is used for specifying a viewer panorama\&.
.PP
\fBThe detailed class documentation is taken verbatim from the VRML97 standard (ISO/IEC 14772-1:1997)\&. It is copyright The Web3D Consortium, and is used by permission of the Consortium:\fP  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Inventor/VRMLnodes/SoVRMLBackground\&.h>\fP
.PP
Inherits \fBSoNode\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual \fBSoType\fP \fBgetTypeId\fP (void) const"
.br
.RI "Returns the type identification of an object derived from a class inheriting \fBSoBase\fP\&. This is used for run-time type checking and 'downward' casting\&. "
.ti -1c
.RI "\fBSoVRMLBackground\fP (void)"
.br
.ti -1c
.RI "virtual void \fBGLRender\fP (\fBSoGLRenderAction\fP *action)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBSoType\fP \fBgetClassTypeId\fP (void)"
.br
.ti -1c
.RI "static void \fBinitClass\fP (void)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBSoMFColor\fP \fBgroundColor\fP"
.br
.ti -1c
.RI "\fBSoMFFloat\fP \fBgroundAngle\fP"
.br
.ti -1c
.RI "\fBSoMFColor\fP \fBskyColor\fP"
.br
.ti -1c
.RI "\fBSoMFFloat\fP \fBskyAngle\fP"
.br
.ti -1c
.RI "\fBSoMFString\fP \fBbackUrl\fP"
.br
.ti -1c
.RI "\fBSoMFString\fP \fBbottomUrl\fP"
.br
.ti -1c
.RI "\fBSoMFString\fP \fBfrontUrl\fP"
.br
.ti -1c
.RI "\fBSoMFString\fP \fBleftUrl\fP"
.br
.ti -1c
.RI "\fBSoMFString\fP \fBrightUrl\fP"
.br
.ti -1c
.RI "\fBSoMFString\fP \fBtopUrl\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual const \fBSoFieldData\fP * \fBgetFieldData\fP (void) const"
.br
.ti -1c
.RI "virtual SbBool \fBreadInstance\fP (\fBSoInput\fP *in, unsigned short flags)"
.br
.ti -1c
.RI "virtual \fB~SoVRMLBackground\fP ()"
.br
.in -1c
.SS "Static Protected Member Functions"

.in +1c
.ti -1c
.RI "static const \fBSoFieldData\fP ** \fBgetFieldDataPtr\fP (void)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBSoSFBool\fP \fBset_bind\fP"
.br
.ti -1c
.RI "\fBSoSFBool\fP \fBisBound\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
The \fBSoVRMLBackground\fP class is used for specifying a viewer panorama\&.
.PP
\fBThe detailed class documentation is taken verbatim from the VRML97 standard (ISO/IEC 14772-1:1997)\&. It is copyright The Web3D Consortium, and is used by permission of the Consortium:\fP 


.PP
.nf
Background {
  eventIn      SFBool   set_bind
  exposedField MFFloat  groundAngle  []         # [0,pi/2]
  exposedField MFColor  groundColor  []         # [0,1]
  exposedField MFString backUrl      []
  exposedField MFString bottomUrl    []
  exposedField MFString frontUrl     []
  exposedField MFString leftUrl      []
  exposedField MFString rightUrl     []
  exposedField MFString topUrl       []
  exposedField MFFloat  skyAngle     []         # [0,pi]
  exposedField MFColor  skyColor     0 0 0      # [0,1]
  eventOut     SFBool   isBound
}

.fi
.PP
.PP
The Background node is used to specify a colour backdrop that simulates ground and sky, as well as a background texture, or panorama, that is placed behind all geometry in the scene and in front of the ground and sky\&. Background nodes are specified in the local coordinate system and are affected by the accumulated rotation of their ancestors as described below\&. Background nodes are bindable nodes as described in 4\&.6\&.10, Bindable children nodes (http://www.web3d.org/x3d/specifications/vrml/ISO-IEC-14772-VRML97/part1/concepts.html#4.6.10)\&. There exists a Background stack, in which the top-most Background on the stack is the currently active Background\&. To move a Background to the top of the stack, a TRUE value is sent to the set_bind eventIn\&. Once active, the Background is then bound to the browsers view\&. A FALSE value sent to set_bind removes the Background from the stack and unbinds it from the browser's view\&. More detail on the bind stack is described in 4\&.6\&.10, Bindable children nodes (http://www.web3d.org/x3d/specifications/vrml/ISO-IEC-14772-VRML97/part1/concepts.html#4.6.10)\&.
.PP
The backdrop is conceptually a partial sphere (the ground) enclosed inside of a full sphere (the sky) in the local coordinate system with the viewer placed at the centre of the spheres\&. Both spheres have infinite radius and each is painted with concentric circles of interpolated colour perpendicular to the local Y-axis of the sphere\&. The Background node is subject to the accumulated rotations of its ancestors' transformations\&. Scaling and translation transformations are ignored\&. The sky sphere is always slightly farther away from the viewer than the ground partial sphere causing the ground to appear in front of the sky where they overlap\&. The skyColor field specifies the colour of the sky at various angles on the sky sphere\&. The first value of the skyColor field specifies the colour of the sky at 0\&.0 radians representing the zenith (i\&.e\&., straight up from the viewer)\&. The skyAngle field specifies the angles from the zenith in which concentric circles of colour appear\&. The zenith of the sphere is implicitly defined to be 0\&.0 radians, the natural horizon is at pi/2 radians, and the nadir (i\&.e\&., straight down from the viewer) is at pi radians\&. skyAngle is restricted to non-decreasing values in the range [0\&.0, pi]\&. There shall be one more skyColor value than there are skyAngle values\&. The first colour value is the colour at the zenith, which is not specified in the skyAngle field\&. If the last skyAngle is less than pi, then the colour band between the last skyAngle and the nadir is clamped to the last skyColor\&. The sky colour is linearly interpolated between the specified skyColor values\&.
.PP
The groundColor field specifies the colour of the ground at the various angles on the ground partial sphere\&. The first value of the groundColor field specifies the colour of the ground at 0\&.0 radians representing the nadir (i\&.e\&., straight down from the user)\&. The groundAngle field specifies the angles from the nadir that the concentric circles of colour appear\&. The nadir of the sphere is implicitly defined at 0\&.0 radians\&. groundAngle is restricted to non-decreasing values in the range [0\&.0, pi/2]\&. There shall be one more groundColor value than there are groundAngle values\&. The first colour value is for the nadir which is not specified in the groundAngle field\&. If the last groundAngle is less than pi/2, the region between the last groundAngle and the equator is non-existant\&. The ground colour is linearly interpolated between the specified groundColor values\&.
.PP
The backUrl, bottomUrl, frontUrl, leftUrl, rightUrl, and topUrl fields specify a set of images that define a background panorama between the ground/sky backdrop and the scene's geometry\&. The panorama consists of six images, each of which is mapped onto a face of an infinitely large cube contained within the backdrop spheres and centred in the local coordinate system\&. The images are applied individually to each face of the cube\&. On the front, back, right, and left faces of the cube, when viewed from the origin looking down the negative Z-axis with the Y-axis as the view up direction, each image is mapped onto the corresponding face with the same orientation as if the image were displayed normally in 2D (backUrl to back face, frontUrl to front face, leftUrl to left face, and rightUrl to right face)\&. On the top face of the cube, when viewed from the origin looking along the +Y-axis with the +Z-axis as the view up direction, the topUrl image is mapped onto the face with the same orientation as if the image were displayed normally in 2D\&. On the bottom face of the box, when viewed from the origin along the negative Y-axis with the negative Z-axis as the view up direction, the bottomUrl image is mapped onto the face with the same orientation as if the image were displayed normally in 2D\&.
.PP
  Figure 6\&.1 
.PP
Figure 6\&.1 illustrates the Background node backdrop and background textures\&. Alpha values in the panorama images (i\&.e\&., two or four component images) specify that the panorama is semi-transparent or transparent in regions, allowing the groundColor and skyColor to be visible\&. See 4\&.6\&.11, Texture maps, for a general description of texture maps\&. Often, the bottomUrl and topUrl images will not be specified, to allow sky and ground to show\&. The other four images may depict surrounding mountains or other distant scenery\&. Browsers shall support the JPEG (see 2\&.[JPEG]) and PNG (see 2\&.[PNG]) image file formats, and in addition, may support any other image format (e\&.g\&., CGM) that can be rendered into a 2D image\&. Support for the GIF (see E\&.[GIF]) format is recommended (including transparency)\&. More detail on the url fields can be found in 4\&.5, VRML and the World Wide Web (http://www.web3d.org/x3d/specifications/vrml/ISO-IEC-14772-VRML97/part1/concepts.html#4.5)\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "SoVRMLBackground::SoVRMLBackground (void)"
Constructor\&. 
.SS "SoVRMLBackground::~SoVRMLBackground ()\fC [protected]\fP, \fC [virtual]\fP"
Destructor\&. 
.SH "Member Function Documentation"
.PP 
.SS "\fBSoType\fP SoVRMLBackground::getClassTypeId (void)\fC [static]\fP"
\fBSoMFFloat\fP SoVRMLBackground::groundAngle
.PP
The ground angles where different colors should be used\&.
.PP
\fBSoMFColor\fP SoVRMLBackground::groundColor
.PP
The color for each groundAngle\&.
.PP
\fBSoMFFloat\fP SoVRMLBackground::skyAngle
.PP
The sky angles where different colors should be used\&.
.PP
\fBSoMFColor\fP SoVRMLBackground::skyColor
.PP
The color for each skyAngle\&.
.PP
\fBSoMFString\fP SoVRMLBackground::backUrl
.PP
URL for the background image\&.
.PP
\fBSoMFString\fP SoVRMLBackground::bottomUrl
.PP
URL for the bottom image\&.
.PP
\fBSoMFString\fP SoVRMLBackground::frontUrl
.PP
URL for the front image\&.
.PP
\fBSoMFString\fP SoVRMLBackground::leftUrl
.PP
URL for the left image\&.
.PP
\fBSoMFString\fP SoVRMLBackground::rightUrl
.PP
URL for the right image\&.
.PP
\fBSoMFString\fP SoVRMLBackground::topUrl
.PP
URL for the top image\&.
.PP
\fBSoSFBool\fP SoVRMLBackground::set_bind An eventIn which is triggered when the node is bound\&.
.PP
\fBSoSFBool\fP SoVRMLBackground::isBound An eventOut that is sent after the node has been bound/unbound\&. 
.SS "\fBSoType\fP SoVRMLBackground::getTypeId (void) const\fC [virtual]\fP"

.PP
Returns the type identification of an object derived from a class inheriting \fBSoBase\fP\&. This is used for run-time type checking and 'downward' casting\&. Usage example:
.PP
.PP
.nf
void foo(SoNode * node)
{
  if (node->getTypeId() == SoFile::getClassTypeId()) {
    SoFile * filenode = (SoFile *)node;  // safe downward cast, knows the type
  }
}
.fi
.PP
.PP
For application programmers wanting to extend the library with new nodes, engines, nodekits, draggers or others: this method needs to be overridden in \fIall\fP subclasses\&. This is typically done as part of setting up the full type system for extension classes, which is usually accomplished by using the pre-defined macros available through for instance \fBInventor/nodes/SoSubNode\&.h\fP (SO_NODE_INIT_CLASS and SO_NODE_CONSTRUCTOR for node classes), \fBInventor/engines/SoSubEngine\&.h\fP (for engine classes) and so on\&.
.PP
For more information on writing Coin extensions, see the class documentation of the toplevel superclasses for the various class groups\&. 
.PP
Implements \fBSoBase\fP\&.
.SS "const \fBSoFieldData\fP * SoVRMLBackground::getFieldData (void) const\fC [protected]\fP, \fC [virtual]\fP"
Returns a pointer to the class-wide field data storage object for this instance\&. If no fields are present, returns \fCNULL\fP\&. 
.PP
Reimplemented from \fBSoFieldContainer\fP\&.
.SS "void SoVRMLBackground::GLRender (\fBSoGLRenderAction\fP * action)\fC [virtual]\fP"
Action method for the \fBSoGLRenderAction\fP\&.
.PP
This is called during rendering traversals\&. Nodes influencing the rendering state in any way or who wants to throw geometry primitives at OpenGL overrides this method\&. 
.PP
Reimplemented from \fBSoNode\fP\&.
.SS "SbBool SoVRMLBackground::readInstance (\fBSoInput\fP * in, unsigned short flags)\fC [protected]\fP, \fC [virtual]\fP"
This method is mainly intended for internal use during file import operations\&.
.PP
It reads a definition of an instance from the input stream \fIin\fP\&. The input stream state points to the start of a serialized / persistant representation of an instance of this class type\&.
.PP
\fCTRUE\fP or \fCFALSE\fP is returned, depending on if the instantiation and configuration of the new object of this class type went ok or not\&. The import process should be robust and handle corrupted input streams by returning \fCFALSE\fP\&.
.PP
\fIflags\fP is used internally during binary import when reading user extension nodes, group nodes or engines\&. 
.PP
Reimplemented from \fBSoNode\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Coin from the source code\&.
