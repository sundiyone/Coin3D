.TH "SoTextureOverrideElement" 3 "Sun May 28 2017" "Version 4.0.0a" "Coin" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SoTextureOverrideElement \- The \fBSoTextureOverrideElement\fP makes it possible to override texture elements\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Inventor/elements/SoTextureOverrideElement\&.h>\fP
.PP
Inherits \fBSoElement\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual SbBool \fBmatches\fP (const \fBSoElement\fP *element) const"
.br
.ti -1c
.RI "virtual \fBSoElement\fP * \fBcopyMatchInfo\fP () const"
.br
.ti -1c
.RI "virtual void \fBinit\fP (\fBSoState\fP *state)"
.br
.ti -1c
.RI "virtual void \fBpush\fP (\fBSoState\fP *state)"
.br
.ti -1c
.RI "virtual void \fBprint\fP (FILE *fp) const"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBSoType\fP \fBgetClassTypeId\fP (void)"
.br
.ti -1c
.RI "static \fBint\fP \fBgetClassStackIndex\fP (void)"
.br
.ti -1c
.RI "static void * \fBcreateInstance\fP (void)"
.br
.ti -1c
.RI "static void \fBinitClass\fP (void)"
.br
.ti -1c
.RI "static SbBool \fBgetQualityOverride\fP (\fBSoState\fP *state)"
.br
.ti -1c
.RI "static SbBool \fBgetImageOverride\fP (\fBSoState\fP *state)"
.br
.ti -1c
.RI "static SbBool \fBgetBumpMapOverride\fP (\fBSoState\fP *state)"
.br
.ti -1c
.RI "static void \fBsetQualityOverride\fP (\fBSoState\fP *state, const SbBool value)"
.br
.ti -1c
.RI "static void \fBsetImageOverride\fP (\fBSoState\fP *state, const SbBool value)"
.br
.ti -1c
.RI "static void \fBsetBumpMapOverride\fP (\fBSoState\fP *state, const SbBool value)"
.br
.in -1c
.SS "Protected Types"

.in +1c
.ti -1c
.RI "enum { \fBTEXTURE_QUALITY\fP = 0x1, \fBTEXTURE_IMAGE\fP = 0x2, \fBBUMP_MAP\fP = 0x4 }"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual \fB~SoTextureOverrideElement\fP ()"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
The \fBSoTextureOverrideElement\fP makes it possible to override texture elements\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "SoTextureOverrideElement::~SoTextureOverrideElement (void)\fC [protected]\fP, \fC [virtual]\fP"
The destructor\&. 
.SH "Member Function Documentation"
.PP 
.SS "void * SoTextureOverrideElement::createInstance (void)\fC [static]\fP"
\fIThis API member is considered internal to the library, as it is not likely to be of interest to the application programmer\&.\fP 
.SS "void SoTextureOverrideElement::initClass (void)\fC [static]\fP"
This static method initializes static data for the \fBSoTextureOverrideElement\fP class\&. 
.SS "SbBool SoTextureOverrideElement::matches (const \fBSoElement\fP * element) const\fC [virtual]\fP"
This function returns \fCTRUE\fP is the element matches another element (of the same class), with respect to cache validity\&.
.PP
If the application programmer's extension element has a \fBmatches()\fP function, it should also have a \fBcopyMatchInfo()\fP function\&. 
.PP
Implements \fBSoElement\fP\&.
.SS "\fBSoElement\fP * SoTextureOverrideElement::copyMatchInfo (void) const\fC [virtual]\fP"
This function creates a copy of the element that contains enough information to enable the \fBmatches()\fP function to work\&.
.PP
Used to help with scenegraph traversal caching operations\&. 
.PP
Implements \fBSoElement\fP\&.
.SS "void SoTextureOverrideElement::init (\fBSoState\fP * state)\fC [virtual]\fP"
This function initializes the element type in the given \fBSoState\fP\&. It is called for the first element of each enabled element type in \fBSoState\fP objects\&. 
.PP
Reimplemented from \fBSoElement\fP\&.
.SS "void SoTextureOverrideElement::push (\fBSoState\fP * state)\fC [virtual]\fP"
This method is called every time a new element is required in one of the stacks\&. This happens when a writable element is requested, using \fBSoState::getElement()\fP or indirectly \fBSoElement::getElement()\fP, and the depth of the current element is less than the state depth\&.
.PP
Override this method if your element needs to copy data from the previous top of stack\&. The \fBpush()\fP method is called on the new element, and the previous element can be found using \fBSoElement::getNextInStack()\fP\&. 
.PP
Reimplemented from \fBSoElement\fP\&.
.SS "void SoTextureOverrideElement::print (FILE * file) const\fC [virtual]\fP"
This function is for printing element information, and is used mostly for debugging purposes\&. 
.PP
Reimplemented from \fBSoElement\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Coin from the source code\&.
