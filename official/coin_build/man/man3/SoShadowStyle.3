.TH "SoShadowStyle" 3 "Sun May 28 2017" "Version 4.0.0a" "Coin" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SoShadowStyle \- The \fBSoShadowStyle\fP class is a node for setting the shadow style on nodes\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Inventor/annex/FXViz/nodes/SoShadowStyle\&.h>\fP
.PP
Inherits \fBSoNode\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBStyle\fP { \fBNO_SHADOWING\fP = SoShadowStyleElement::NO_SHADOWING, \fBCASTS_SHADOW\fP = SoShadowStyleElement::CASTS_SHADOW, \fBSHADOWED\fP = SoShadowStyleElement::SHADOWED, \fBCASTS_SHADOW_AND_SHADOWED\fP = SoShadowStyleElement::CASTS_SHADOW_AND_SHADOWED }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual \fBSoType\fP \fBgetTypeId\fP (void) const"
.br
.RI "Returns the type identification of an object derived from a class inheriting \fBSoBase\fP\&. This is used for run-time type checking and 'downward' casting\&. "
.ti -1c
.RI "\fBSoShadowStyle\fP (void)"
.br
.ti -1c
.RI "virtual void \fBGLRender\fP (\fBSoGLRenderAction\fP *action)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBSoType\fP \fBgetClassTypeId\fP (void)"
.br
.ti -1c
.RI "static void \fBinitClass\fP (void)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBSoSFEnum\fP \fBstyle\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual const \fBSoFieldData\fP * \fBgetFieldData\fP (void) const"
.br
.ti -1c
.RI "virtual \fB~SoShadowStyle\fP ()"
.br
.in -1c
.SS "Static Protected Member Functions"

.in +1c
.ti -1c
.RI "static const \fBSoFieldData\fP ** \fBgetFieldDataPtr\fP (void)"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
The \fBSoShadowStyle\fP class is a node for setting the shadow style on nodes\&. 

\fBFILE FORMAT/DEFAULTS:\fP 
.PP
.nf
ShadowStyle {
    style CASTS_SHADOW_AND_SHADOWED
}

.fi
.PP
.PP
\fBSince:\fP
.RS 4
Coin 2\&.5 
.RE
.PP

.SH "Member Enumeration Documentation"
.PP 
.SS "enum \fBSoShadowStyle::Style\fP"
Enumerates the available style settings\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fINO_SHADOWING \fP\fP
Neither casts or recieves shadows\&. 
.TP
\fB\fICASTS_SHADOW \fP\fP
Casts shadow, but will no recieve any shadows\&. 
.TP
\fB\fISHADOWED \fP\fP
Receives shadows, but will not cast any shadow\&. 
.TP
\fB\fICASTS_SHADOW_AND_SHADOWED \fP\fP
Will cast and recieve shadows\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "SoShadowStyle::SoShadowStyle (void)"
Constructor\&. 
.SS "SoShadowStyle::~SoShadowStyle ()\fC [protected]\fP, \fC [virtual]\fP"
Destructor\&. 
.SH "Member Function Documentation"
.PP 
.SS "\fBSoType\fP SoShadowStyle::getTypeId (void) const\fC [virtual]\fP"

.PP
Returns the type identification of an object derived from a class inheriting \fBSoBase\fP\&. This is used for run-time type checking and 'downward' casting\&. Usage example:
.PP
.PP
.nf
void foo(SoNode * node)
{
  if (node->getTypeId() == SoFile::getClassTypeId()) {
    SoFile * filenode = (SoFile *)node;  // safe downward cast, knows the type
  }
}
.fi
.PP
.PP
For application programmers wanting to extend the library with new nodes, engines, nodekits, draggers or others: this method needs to be overridden in \fIall\fP subclasses\&. This is typically done as part of setting up the full type system for extension classes, which is usually accomplished by using the pre-defined macros available through for instance \fBInventor/nodes/SoSubNode\&.h\fP (SO_NODE_INIT_CLASS and SO_NODE_CONSTRUCTOR for node classes), \fBInventor/engines/SoSubEngine\&.h\fP (for engine classes) and so on\&.
.PP
For more information on writing Coin extensions, see the class documentation of the toplevel superclasses for the various class groups\&. 
.PP
Implements \fBSoBase\fP\&.
.SS "const \fBSoFieldData\fP * SoShadowStyle::getFieldData (void) const\fC [protected]\fP, \fC [virtual]\fP"
Returns a pointer to the class-wide field data storage object for this instance\&. If no fields are present, returns \fCNULL\fP\&. 
.PP
Reimplemented from \fBSoFieldContainer\fP\&.
.SS "void SoShadowStyle::GLRender (\fBSoGLRenderAction\fP * action)\fC [virtual]\fP"
Action method for the \fBSoGLRenderAction\fP\&.
.PP
This is called during rendering traversals\&. Nodes influencing the rendering state in any way or who wants to throw geometry primitives at OpenGL overrides this method\&. 
.PP
Reimplemented from \fBSoNode\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBSoSFEnum\fP SoShadowStyle::style"
Set the current shadow style\&. Default value is CASTS_SHADOW_AND_SHADOWED\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Coin from the source code\&.
