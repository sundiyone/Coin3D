.TH "SoVRMLInterpolator" 3 "Sun May 28 2017" "Version 4.0.0a" "Coin" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SoVRMLInterpolator \- The \fBSoVRMLInterpolator\fP class is an internal abstract class\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Inventor/VRMLnodes/SoVRMLInterpolator\&.h>\fP
.PP
Inherits \fBSoNodeEngine\fP\&.
.PP
Inherited by \fBSoVRMLColorInterpolator\fP, \fBSoVRMLCoordinateInterpolator\fP, \fBSoVRMLNormalInterpolator\fP, \fBSoVRMLOrientationInterpolator\fP, \fBSoVRMLPositionInterpolator\fP, and \fBSoVRMLScalarInterpolator\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual \fBSoType\fP \fBgetTypeId\fP (void) const"
.br
.RI "Returns the type identification of an object derived from a class inheriting \fBSoBase\fP\&. This is used for run-time type checking and 'downward' casting\&. "
.ti -1c
.RI "virtual const \fBSoEngineOutputData\fP * \fBgetOutputData\fP (void) const"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBSoType\fP \fBgetClassTypeId\fP (void)"
.br
.ti -1c
.RI "static void \fBinitClass\fP (void)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBSoMFFloat\fP \fBkey\fP"
.br
.ti -1c
.RI "\fBSoSFFloat\fP \fBset_fraction\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual const \fBSoFieldData\fP * \fBgetFieldData\fP (void) const"
.br
.ti -1c
.RI "\fBint\fP \fBgetKeyValueIndex\fP (float &interp, \fBint\fP numvalues)"
.br
.in -1c
.SS "Static Protected Member Functions"

.in +1c
.ti -1c
.RI "static const \fBSoFieldData\fP ** \fBgetFieldDataPtr\fP (void)"
.br
.ti -1c
.RI "static const \fBSoEngineOutputData\fP ** \fBgetOutputDataPtr\fP (void)"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
The \fBSoVRMLInterpolator\fP class is an internal abstract class\&. 

This class collects the two fields that are common for all interpolator nodes, plus common code that operates on these fields\&. Since this is an abstract 'helper' class, it does not represent an actual node from the VRML97 specification, so don't use it as such\&.
.PP
For more information, a detailed discussion of interpolators is available in section 4\&.6\&.8 of the VRML97 specification:
.PP
http://www.web3d.org/x3d/specifications/vrml/ISO-IEC-14772-VRML97/part1/concepts.html#4.6.8 
.SH "Member Function Documentation"
.PP 
.SS "\fBSoType\fP SoVRMLInterpolator::getTypeId (void) const\fC [virtual]\fP"

.PP
Returns the type identification of an object derived from a class inheriting \fBSoBase\fP\&. This is used for run-time type checking and 'downward' casting\&. Usage example:
.PP
.PP
.nf
void foo(SoNode * node)
{
  if (node->getTypeId() == SoFile::getClassTypeId()) {
    SoFile * filenode = (SoFile *)node;  // safe downward cast, knows the type
  }
}
.fi
.PP
.PP
For application programmers wanting to extend the library with new nodes, engines, nodekits, draggers or others: this method needs to be overridden in \fIall\fP subclasses\&. This is typically done as part of setting up the full type system for extension classes, which is usually accomplished by using the pre-defined macros available through for instance \fBInventor/nodes/SoSubNode\&.h\fP (SO_NODE_INIT_CLASS and SO_NODE_CONSTRUCTOR for node classes), \fBInventor/engines/SoSubEngine\&.h\fP (for engine classes) and so on\&.
.PP
For more information on writing Coin extensions, see the class documentation of the toplevel superclasses for the various class groups\&. 
.PP
Implements \fBSoBase\fP\&.
.PP
Reimplemented in \fBSoVRMLPositionInterpolator\fP, \fBSoVRMLOrientationInterpolator\fP, \fBSoVRMLColorInterpolator\fP, \fBSoVRMLCoordinateInterpolator\fP, \fBSoVRMLNormalInterpolator\fP, and \fBSoVRMLScalarInterpolator\fP\&.
.SS "const \fBSoFieldData\fP * SoVRMLInterpolator::getFieldData (void) const\fC [protected]\fP, \fC [virtual]\fP"
Returns a pointer to the class-wide field data storage object for this instance\&. If no fields are present, returns \fCNULL\fP\&. 
.PP
Reimplemented from \fBSoFieldContainer\fP\&.
.PP
Reimplemented in \fBSoVRMLPositionInterpolator\fP, \fBSoVRMLOrientationInterpolator\fP, \fBSoVRMLColorInterpolator\fP, \fBSoVRMLCoordinateInterpolator\fP, \fBSoVRMLNormalInterpolator\fP, and \fBSoVRMLScalarInterpolator\fP\&.
.SS "const \fBSoEngineOutputData\fP * SoVRMLInterpolator::getOutputData (void) const\fC [virtual]\fP"
\fIThis API member is considered internal to the library, as it is not likely to be of interest to the application programmer\&.\fP 
.PP
Implements \fBSoNodeEngine\fP\&.
.PP
Reimplemented in \fBSoVRMLPositionInterpolator\fP, \fBSoVRMLOrientationInterpolator\fP, \fBSoVRMLColorInterpolator\fP, \fBSoVRMLCoordinateInterpolator\fP, \fBSoVRMLNormalInterpolator\fP, and \fBSoVRMLScalarInterpolator\fP\&.
.SS "\fBint\fP SoVRMLInterpolator::getKeyValueIndex (float & interp, \fBint\fP numvalues)\fC [protected]\fP"
\fIThis API member is considered internal to the library, as it is not likely to be of interest to the application programmer\&.\fP 
.SH "Member Data Documentation"
.PP 
.SS "\fBSoMFFloat\fP SoVRMLInterpolator::key"
This field contains a set of floating point values which the interpolation will run over\&. The key values should be monotonically non-decreasing\&.
.PP
The field is inherited from it's declaration in the abstract \fBSoVRMLInterpolator\fP class into a range of different VRML interpolator nodes\&.
.PP
See the class documentation of the \fInon-abstract\fP VRML interpolator node you want to use for information on what the key values represent in that specific context\&. 
.SS "\fBSoSFFloat\fP SoVRMLInterpolator::set_fraction"
The set_fraction field gets an input signal that triggers a calculation of the next value_changed eventOut value\&.
.PP
The field is inherited from it's declaration in the abstract \fBSoVRMLInterpolator\fP class into a range of different VRML interpolator nodes\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Coin from the source code\&.
