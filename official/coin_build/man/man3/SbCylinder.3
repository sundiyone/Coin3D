.TH "SbCylinder" 3 "Sun May 28 2017" "Version 4.0.0a" "Coin" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SbCylinder \- The \fBSbCylinder\fP class is a representation of a cylinder\&.
.PP
This class is used within other classes in Coin\&. It contains data to represent a cylinder by an axis and a radius\&. The cylinder has no length/height value, which means it is treated as of infinite length\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Inventor/SbCylinder\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSbCylinder\fP (void)"
.br
.ti -1c
.RI "\fBSbCylinder\fP (const \fBSbLine\fP &a, const float r)"
.br
.ti -1c
.RI "void \fBsetValue\fP (const \fBSbLine\fP &a, const float r)"
.br
.ti -1c
.RI "void \fBsetAxis\fP (const \fBSbLine\fP &a)"
.br
.ti -1c
.RI "void \fBsetRadius\fP (const float r)"
.br
.ti -1c
.RI "const \fBSbLine\fP & \fBgetAxis\fP (void) const"
.br
.ti -1c
.RI "float \fBgetRadius\fP (void) const"
.br
.ti -1c
.RI "SbBool \fBintersect\fP (const \fBSbLine\fP &l, \fBSbVec3f\fP &intersection) const"
.br
.ti -1c
.RI "SbBool \fBintersect\fP (const \fBSbLine\fP &l, \fBSbVec3f\fP &enter, \fBSbVec3f\fP &exit) const"
.br
.ti -1c
.RI "void \fBprint\fP (FILE *file) const"
.br
.in -1c
.SH "Detailed Description"
.PP 
The \fBSbCylinder\fP class is a representation of a cylinder\&.
.PP
This class is used within other classes in Coin\&. It contains data to represent a cylinder by an axis and a radius\&. The cylinder has no length/height value, which means it is treated as of infinite length\&. 


.PP
\fBSee also:\fP
.RS 4
\fBSbLine\fP, \fBSbSphere\fP 
.RE
.PP

.SH "Constructor & Destructor Documentation"
.PP 
.SS "SbCylinder::SbCylinder (void)"
The default constructor will make a cylinder of radius 1, center axis going through origo in the parallel direction of the positive y-axis\&. 
.SS "SbCylinder::SbCylinder (const \fBSbLine\fP & a, const float r)"
Construct and initialize an \fBSbCylinder\fP instance with the given axis \fIa\fP and radius \fIr\fP\&. 
.SH "Member Function Documentation"
.PP 
.SS "void SbCylinder::setValue (const \fBSbLine\fP & a, const float r)"
Set the axis and radius of the cylinder\&.
.PP
\fBSee also:\fP
.RS 4
\fBgetAxis()\fP, \fBgetRadius()\fP\&. 
.RE
.PP

.SS "void SbCylinder::setAxis (const \fBSbLine\fP & a)"
Set the center axis of the cylinder\&.
.PP
\fBSee also:\fP
.RS 4
\fBsetRadius()\fP, \fBgetAxis()\fP\&. 
.RE
.PP

.SS "void SbCylinder::setRadius (const float r)"
Set the radius of the cylinder\&.
.PP
\fBSee also:\fP
.RS 4
\fBsetAxis()\fP, \fBgetRadius()\fP\&. 
.RE
.PP

.SS "const \fBSbLine\fP & SbCylinder::getAxis (void) const"
Return the line which is the center axis of the cylinder\&.
.PP
\fBSee also:\fP
.RS 4
\fBsetAxis()\fP, \fBgetRadius()\fP\&. 
.RE
.PP

.SS "float SbCylinder::getRadius (void) const"
Return radius of cylinder\&.
.PP
\fBSee also:\fP
.RS 4
\fBsetRadius()\fP, \fBgetAxis()\fP\&. 
.RE
.PP

.SS "SbBool SbCylinder::intersect (const \fBSbLine\fP & l, \fBSbVec3f\fP & intersection) const"
Finds the intersection point of the ray \fIl\fP on the cylinder where the ray enters, and return this point in \fIintersection\fP\&.
.PP
If the ray does not intersect the cylinder, \fIFALSE\fP is returned, otherwise we will return \fITRUE\fP\&. 
.SS "SbBool SbCylinder::intersect (const \fBSbLine\fP & l, \fBSbVec3f\fP & enter, \fBSbVec3f\fP & exit) const"
Find the intersection points of the ray \fIl\fP on the cylinder and return these in \fIenter\fP and \fIexit\fP\&. If the ray just 'grazes' the cylinder, the \fIenter\fP and \fIexit\fP points have equal values\&.
.PP
If the ray does not intersect the cylinder, \fIFALSE\fP is returned, otherwise we will return \fITRUE\fP\&. 
.SS "void SbCylinder::print (FILE * fp) const"
Dump the state of this object to the \fIfile\fP stream\&. Only works in debug version of library, method does nothing in an optimized compile\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Coin from the source code\&.
