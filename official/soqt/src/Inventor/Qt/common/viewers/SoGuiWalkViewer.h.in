#ifndef SO@GUI@_WALKVIEWER_H
#define SO@GUI@_WALKVIEWER_H

// @configure_input@

/**************************************************************************\
 * Copyright (c) Kongsberg Oil & Gas Technologies AS
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 * 
 * Redistributions of source code must retain the above copyright notice,
 * this list of conditions and the following disclaimer.
 * 
 * Redistributions in binary form must reproduce the above copyright
 * notice, this list of conditions and the following disclaimer in the
 * documentation and/or other materials provided with the distribution.
 * 
 * Neither the name of the copyright holder nor the names of its
 * contributors may be used to endorse or promote products derived from
 * this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
\**************************************************************************/

#include <Inventor/@Gui@/viewers/So@Gui@ConstrainedViewer.h>

class SO@GUI@_DLL_API So@Gui@WalkViewer : public So@Gui@ConstrainedViewer {
  SO@GUI@_OBJECT_HEADER(So@Gui@WalkViewer, So@Gui@ConstrainedViewer);

public:
  So@Gui@WalkViewer(@WIDGET@ parent = NULL,
                    const char * name = NULL,
                    SbBool embed = TRUE,
                    So@Gui@FullViewer::BuildFlag flag = BUILD_ALL,
                    So@Gui@Viewer::Type type = BROWSER);
  ~So@Gui@WalkViewer();

  virtual void setViewing(SbBool enable);
  virtual void setCamera(SoCamera * camera);
  virtual void setCursorEnabled(SbBool enable);

  virtual void setCameraType(SoType type);

protected:
  So@Gui@WalkViewer(@WIDGET@ parent,
                    const char * name,
                    SbBool embed,
                    So@Gui@FullViewer::BuildFlag flag,
                    So@Gui@Viewer::Type type,
                    SbBool build);

  virtual const char * getDefaultWidgetName(void) const;
  virtual const char * getDefaultTitle(void) const;
  virtual const char * getDefaultIconTitle(void) const;

  virtual void processEvent(@EVENT@ event);

  virtual void setSeekMode(SbBool enable);
  virtual void actualRedraw(void);

  virtual void rightWheelMotion(float value);

  virtual @WIDGET@ buildLeftTrim(@WIDGET@ parent);

private:
  class So@Gui@WalkViewerP * pimpl;
  friend class SoGuiWalkViewerP;
  friend class So@Gui@WalkViewerP;

/// FIXME!: merge the So*WalkViewer.h parts in properly. 20020109 mortene. ////

#ifdef __COIN_SOXT__
protected:
  virtual void leftWheel2Start(void);
  virtual void leftWheel2Motion(float value);
  virtual void leftWheel2Finish(void);
  float getLeftWheel2Value(void) const;
  void setLeftWheel2String(char * string);

private:
  void constructor(SbBool build);

  Widget heightwheel;
  float heightvalue;

  void wheelarmed(void);
  static void wheelarmedCB(Widget, XtPointer, XtPointer);
  void wheelchanged(float value);
  static void wheelchangedCB(Widget, XtPointer, XtPointer);
  void wheeldisarmed(void);
  static void wheeldisarmedCB(Widget, XtPointer, XtPointer);
#endif // ! __COIN_SOXT__

#ifdef __COIN_SOGTK__
private:
  void constructor(const SbBool build);
#endif // ! __COIN_SOGTK__
};

#endif // ! SO@GUI@_WALKVIEWER_H
